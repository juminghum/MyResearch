package LZA4

import chisel3._
import chisel3.util._
class LZA4 extends Module{
  val io = IO(new Bundle {
    val INA = Input(UInt(48.W))
    val INB = Input(UInt(48.W))
    val INC = Input(UInt(48.W))
    val IND = Input(UInt(48.W))
    val SHIFT_VALUE = Output(UInt(6.W))
    val CorrectionFlag = Output(UInt(1.W))
  })

  //val Wout = VecInit(Seq.fill(48)(0.U))
  val Wout = Wire(Vec(48, UInt(5.W)))
  val g = Wire(Vec(48, UInt(1.W)))
  val e = Wire(Vec(48, UInt(1.W)))
  val s = Wire(Vec(48, UInt(1.W)))
  val f = Wire(Vec(48, UInt(1.W)))

  //val LODout = Wire(Vec(48, UInt(1.W)))
  val LODout = Wire(UInt(48.W))
  //io.OUT := LODout

  val pp = Wire(Vec(48, UInt(1.W)))
  val pn = Wire(Vec(48, UInt(1.W)))
  val pz = Wire(Vec(48, UInt(1.W)))
  val np = Wire(Vec(48, UInt(1.W)))
  val nn = Wire(Vec(48, UInt(1.W)))
  val nz = Wire(Vec(48, UInt(1.W)))

  val PP0 = Wire(Vec(24, UInt(1.W)))
  val PN0 = Wire(Vec(24, UInt(1.W)))
  val PZ0 = Wire(Vec(24, UInt(1.W)))
  val PY0 = Wire(Vec(24, UInt(1.W)))

  val PP1 = Wire(Vec(12, UInt(1.W)))
  val PN1 = Wire(Vec(12, UInt(1.W)))
  val PZ1 = Wire(Vec(12, UInt(1.W)))
  val PY1 = Wire(Vec(12, UInt(1.W)))

  val PP2 = Wire(Vec(6, UInt(1.W)))
  val PN2 = Wire(Vec(6, UInt(1.W)))
  val PZ2 = Wire(Vec(6, UInt(1.W)))
  val PY2 = Wire(Vec(6, UInt(1.W)))

  val PP3 = Wire(Vec(3, UInt(1.W)))
  val PN3 = Wire(Vec(3, UInt(1.W)))
  val PZ3 = Wire(Vec(3, UInt(1.W)))
  val PY3 = Wire(Vec(3, UInt(1.W)))

  val PP4 = Wire(UInt(1.W))
  val PN4 = Wire(UInt(1.W))
  val PZ4 = Wire(UInt(1.W))
  val PY4 = Wire(UInt(1.W))

  val PP5 = Wire(UInt(1.W))
  val PN5 = Wire(UInt(1.W))
  val PZ5 = Wire(UInt(1.W))
  val PY5 = Wire(UInt(1.W))

  val NP0 = Wire(Vec(24, UInt(1.W)))
  val NN0 = Wire(Vec(24, UInt(1.W)))
  val NZ0 = Wire(Vec(24, UInt(1.W)))
  val NY0 = Wire(Vec(24, UInt(1.W)))

  val NP1 = Wire(Vec(12, UInt(1.W)))
  val NN1 = Wire(Vec(12, UInt(1.W)))
  val NZ1 = Wire(Vec(12, UInt(1.W)))
  val NY1 = Wire(Vec(12, UInt(1.W)))

  val NP2 = Wire(Vec(6, UInt(1.W)))
  val NN2 = Wire(Vec(6, UInt(1.W)))
  val NZ2 = Wire(Vec(6, UInt(1.W)))
  val NY2 = Wire(Vec(6, UInt(1.W)))

  val NP3 = Wire(Vec(3, UInt(1.W)))
  val NN3 = Wire(Vec(3, UInt(1.W)))
  val NZ3 = Wire(Vec(3, UInt(1.W)))
  val NY3 = Wire(Vec(3, UInt(1.W)))

  val NP4 = Wire(UInt(1.W))
  val NN4 = Wire(UInt(1.W))
  val NZ4 = Wire(UInt(1.W))
  val NY4 = Wire(UInt(1.W))

  val NP5 = Wire(UInt(1.W))
  val NN5 = Wire(UInt(1.W))
  val NZ5 = Wire(UInt(1.W))
  val NY5 = Wire(UInt(1.W))

  //printf("shift_value = %b\n", io.SHIFT_VALUE)
  /*
    io.OUT := f(47) ## f(46) ## f(45) ## f(44) ## f(43) ## f(42) ## f(41) ## f(40) ##
      f(39) ## f(38) ## f(37) ## f(36) ## f(35) ## f(34) ## f(33) ## f(32) ## f(31) ## f(30) ##
      f(29) ## f(28) ## f(27) ## f(26) ## f(25) ## f(24) ## f(23) ## f(22) ## f(21) ## f(20) ##
      f(19) ## f(18) ## f(17) ## f(16) ## f(15) ## f(14) ## f(13) ## f(12) ## f(11) ## f(10) ##
      f(9) ## f(8) ## f(7) ## f(6) ## f(5) ## f(4) ## f(3) ## f(2) ## f(1) ## f(0)

   */
  val Wgen = Module(new W48)
  Wgen.io.INA := io.INA
  Wgen.io.INB := io.INB
  Wgen.io.INC := io.INC
  Wgen.io.IND := io.IND
  Wout := Wgen.io.OUT
  val GESgen = Module(new GES48)
  GESgen.io.Win := Wout
  g := GESgen.io.Gout
  e := GESgen.io.Eout
  s := GESgen.io.Sout
  val Fgen = Module(new F48)
  Fgen.io.Gin := g
  Fgen.io.Ein := e
  Fgen.io.Sin := s
  f := Fgen.io.Fout

  val LOD = Module(new LODinLZA)
  LOD.io.IN := f
  LODout := LOD.io.OUT

  val shift_value = Wire(Vec(6, UInt(1.W)))
  shift_value(5) := LODout(15) | LODout(14) | LODout(13) | LODout(12) | LODout(11) | LODout(10) | LODout(9) | LODout(8) |
    LODout(7) | LODout(6) | LODout(5) | LODout(4) | LODout(3) | LODout(2) | LODout(1) | LODout(0)
  shift_value(4) := LODout(31) | LODout(30) | LODout(29) | LODout(28) | LODout(27) | LODout(26) | LODout(25) | LODout(24) |
    LODout(23) | LODout(22) | LODout(21) | LODout(20) | LODout(19) | LODout(18) | LODout(17) | LODout(16) | LODout(0)
  shift_value(3) := LODout(39) | LODout(38) | LODout(37) | LODout(36) | LODout(35) | LODout(34) | LODout(33) | LODout(32) |
    LODout(23) | LODout(22) | LODout(21) | LODout(20) | LODout(19) | LODout(18) | LODout(17) | LODout(16) |
    LODout(7) | LODout(6) | LODout(5) | LODout(4) | LODout(3) | LODout(2) | LODout(1) | LODout(0)
  shift_value(2) := LODout(43) | LODout(42) | LODout(41) | LODout(40) | LODout(35) | LODout(34) | LODout(33) | LODout(32) |
    LODout(27) | LODout(26) | LODout(25) | LODout(24) | LODout(19) | LODout(18) | LODout(17) | LODout(16) |
    LODout(11) | LODout(10) | LODout(9) | LODout(8) | LODout(3) | LODout(2) | LODout(1) | LODout(0)
  shift_value(1) := LODout(45) | LODout(44) | LODout(41) | LODout(40) | LODout(37) | LODout(36) | LODout(33) | LODout(32) |
    LODout(29) | LODout(28) | LODout(25) | LODout(24) | LODout(21) | LODout(20) | LODout(17) | LODout(16) |
    LODout(13) | LODout(12) | LODout(9) | LODout(8) | LODout(5) | LODout(4) | LODout(1) | LODout(0)
  shift_value(0) := LODout(46) | LODout(44) | LODout(42) | LODout(40) | LODout(38) | LODout(36) | LODout(34) | LODout(32) |
    LODout(30) | LODout(28) | LODout(26) | LODout(24) | LODout(22) | LODout(20) | LODout(18) | LODout(16) |
    LODout(14) | LODout(12) | LODout(10) | LODout(8) | LODout(6) | LODout(4) | LODout(2) | LODout(0)

  io.SHIFT_VALUE := shift_value(5) ## shift_value(4) ## shift_value(3) ## shift_value(2) ## shift_value(1) ## shift_value(0)

  val Gpgen = Module(new Gp48)
  Gpgen.io.Gin := g
  Gpgen.io.Ein := e
  Gpgen.io.Sin := s
  pp := Gpgen.io.Pout
  pn := Gpgen.io.Nout
  pz := Gpgen.io.Zout

  val PDTst0 = Module(new PositiveDetectionTree0)
  PDTst0.io.Pin := pp
  PDTst0.io.Nin := pn
  PDTst0.io.Zin := pz
  PP0 := PDTst0.io.Pout
  PN0 := PDTst0.io.Nout
  PZ0 := PDTst0.io.Zout
  PY0 := PDTst0.io.Yout

  val PDTst1 = Module(new PositiveDetectionTree1)
  PDTst1.io.Pin := PP0
  PDTst1.io.Nin := PN0
  PDTst1.io.Zin := PZ0
  PDTst1.io.Yin := PY0
  PP1 := PDTst1.io.Pout
  PN1 := PDTst1.io.Nout
  PZ1 := PDTst1.io.Zout
  PY1 := PDTst1.io.Yout

  val PDTst2 = Module(new PositiveDetectionTree2)
  PDTst2.io.Pin := PP1
  PDTst2.io.Nin := PN1
  PDTst2.io.Zin := PZ1
  PDTst2.io.Yin := PY1
  PP2 := PDTst2.io.Pout
  PN2 := PDTst2.io.Nout
  PZ2 := PDTst2.io.Zout
  PY2 := PDTst2.io.Yout

  val PDTst3 = Module(new PositiveDetectionTree3)
  PDTst3.io.Pin := PP2
  PDTst3.io.Nin := PN2
  PDTst3.io.Zin := PZ2
  PDTst3.io.Yin := PY2
  PP3 := PDTst3.io.Pout
  PN3 := PDTst3.io.Nout
  PZ3 := PDTst3.io.Zout
  PY3 := PDTst3.io.Yout

  val PDTst4 = Module(new PositiveDetectionTree)

  PDTst4.io.Pin := PP3(2) ## PP3(1)
  PDTst4.io.Nin := PN3(2) ## PN3(1)
  PDTst4.io.Zin := PZ3(2) ## PZ3(1)
  PDTst4.io.Yin := PY3(2) ## PY3(1)

  PP4 := PDTst4.io.Pout
  PN4 := PDTst4.io.Nout
  PZ4 := PDTst4.io.Zout
  PY4 := PDTst4.io.Yout

  val PDTst5 = Module(new PositiveDetectionTree)

  PDTst5.io.Pin := PP4 ## PP3(0)
  PDTst5.io.Nin := PN4 ## PN3(0)
  PDTst5.io.Zin := PZ4 ## PZ3(0)
  PDTst5.io.Yin := PY4 ## PY3(0)

  PP5 := PDTst5.io.Pout
  PN5 := PDTst5.io.Nout
  PZ5 := PDTst5.io.Zout
  PY5 := PDTst5.io.Yout

  val Gngen = Module(new Gn48)
  Gngen.io.Gin := g
  Gngen.io.Ein := e
  Gngen.io.Sin := s
  np := Gngen.io.Pout
  nn := Gngen.io.Nout
  nz := Gngen.io.Zout

  val NDTst0 = Module(new NegativeDetectionTree0)
  NDTst0.io.Pin := np
  NDTst0.io.Nin := nn
  NDTst0.io.Zin := nz
  NP0 := NDTst0.io.Pout
  NN0 := NDTst0.io.Nout
  NZ0 := NDTst0.io.Zout
  NY0 := NDTst0.io.Yout

  val NDTst1 = Module(new NegativeDetectionTree1)
  NDTst1.io.Pin := NP0
  NDTst1.io.Nin := NN0
  NDTst1.io.Zin := NZ0
  NDTst1.io.Yin := NY0
  NP1 := NDTst1.io.Pout
  NN1 := NDTst1.io.Nout
  NZ1 := NDTst1.io.Zout
  NY1 := NDTst1.io.Yout

  val NDTst2 = Module(new NegativeDetectionTree2)
  NDTst2.io.Pin := NP1
  NDTst2.io.Nin := NN1
  NDTst2.io.Zin := NZ1
  NDTst2.io.Yin := NY1
  NP2 := NDTst2.io.Pout
  NN2 := NDTst2.io.Nout
  NZ2 := NDTst2.io.Zout
  NY2 := NDTst2.io.Yout

  val NDTst3 = Module(new NegativeDetectionTree3)
  NDTst3.io.Pin := NP2
  NDTst3.io.Nin := NN2
  NDTst3.io.Zin := NZ2
  NDTst3.io.Yin := NY2
  NP3 := NDTst3.io.Pout
  NN3 := NDTst3.io.Nout
  NZ3 := NDTst3.io.Zout
  NY3 := NDTst3.io.Yout

  val NDTst4 = Module(new NegativeDetectionTree)

  NDTst4.io.Pin := NP3(2) ## NP3(1)
  NDTst4.io.Nin := NN3(2) ## NN3(1)
  NDTst4.io.Zin := NZ3(2) ## NZ3(1)
  NDTst4.io.Yin := NY3(2) ## NY3(1)

  NP4 := NDTst4.io.Pout
  NN4 := NDTst4.io.Nout
  NZ4 := NDTst4.io.Zout
  NY4 := NDTst4.io.Yout

  val NDTst5 = Module(new NegativeDetectionTree)

  NDTst5.io.Pin := NP4 ## NP3(0)
  NDTst5.io.Nin := NN4 ## NN3(0)
  NDTst5.io.Zin := NZ4 ## NZ3(0)
  NDTst5.io.Yin := NY4 ## NY3(0)

  NP5 := NDTst5.io.Pout
  NN5 := NDTst5.io.Nout
  NZ5 := NDTst5.io.Zout
  NY5 := NDTst5.io.Yout

  io.CorrectionFlag := PY5 | NY5


  /*
    val PP0wire = Wire(UInt(24.W))
    val PN0wire = Wire(UInt(24.W))
    val PZ0wire = Wire(UInt(24.W))
    val PY0wire = Wire(UInt(24.W))
    PP0wire := PP0(23) ## PP0(22) ## PP0(21) ## PP0(20) ##
      PP0(19) ## PP0(18) ## PP0(17) ## PP0(16) ## PP0(15) ## PP0(14) ## PP0(13) ## PP0(12) ## PP0(11) ## PP0(10) ##
      PP0(9) ## PP0(8) ## PP0(7) ## PP0(6) ## PP0(5) ## PP0(4) ## PP0(3) ## PP0(2) ## PP0(1) ## PP0(0)
    PN0wire := PN0(23) ## PN0(22) ## PN0(21) ## PN0(20) ##
      PN0(19) ## PN0(18) ## PN0(17) ## PN0(16) ## PN0(15) ## PN0(14) ## PN0(13) ## PN0(12) ## PN0(11) ## PN0(10) ##
      PN0(9) ## PN0(8) ## PN0(7) ## PN0(6) ## PN0(5) ## PN0(4) ## PN0(3) ## PN0(2) ## PN0(1) ## PN0(0)
    PZ0wire := PZ0(23) ## PZ0(22) ## PZ0(21) ## PZ0(20) ##
      PZ0(19) ## PZ0(18) ## PZ0(17) ## PZ0(16) ## PZ0(15) ## PZ0(14) ## PZ0(13) ## PZ0(12) ## PZ0(11) ## PZ0(10) ##
      PZ0(9) ## PZ0(8) ## PZ0(7) ## PZ0(6) ## PZ0(5) ## PZ0(4) ## PZ0(3) ## PZ0(2) ## PZ0(1) ## PZ0(0)
    PY0wire := PY0(23) ## PY0(22) ## PY0(21) ## PY0(20) ##
      PY0(19) ## PY0(18) ## PY0(17) ## PY0(16) ## PY0(15) ## PY0(14) ## PY0(13) ## PY0(12) ## PY0(11) ## PY0(10) ##
      PY0(9) ## PY0(8) ## PY0(7) ## PY0(6) ## PY0(5) ## PY0(4) ## PY0(3) ## PY0(2) ## PY0(1) ## PY0(0)
    printf("PP0 = %b\n", PP0wire)
    printf("PN0 = %b\n", PN0wire)
    printf("PZ0 = %b\n", PZ0wire)
    printf("PY0 = %b\n", PY0wire)
    val PP1wire = Wire(UInt(12.W))
    val PN1wire = Wire(UInt(12.W))
    val PZ1wire = Wire(UInt(12.W))
    val PY1wire = Wire(UInt(12.W))
    PP1wire := PP1(11) ## PP1(10) ##
      PP1(9) ## PP1(8) ## PP1(7) ## PP1(6) ## PP1(5) ## PP1(4) ## PP1(3) ## PP1(2) ## PP1(1) ## PP1(0)
    PN1wire := PN1(11) ## PN1(10) ##
      PN1(9) ## PN1(8) ## PN1(7) ## PN1(6) ## PN1(5) ## PN1(4) ## PN1(3) ## PN1(2) ## PN1(1) ## PN1(0)
    PZ1wire := PZ1(11) ## PZ1(10) ##
      PZ1(9) ## PZ1(8) ## PZ1(7) ## PZ1(6) ## PZ1(5) ## PZ1(4) ## PZ1(3) ## PZ1(2) ## PZ1(1) ## PZ1(0)
    PY1wire := PY1(11) ## PY1(10) ##
      PY1(9) ## PY1(8) ## PY1(7) ## PY1(6) ## PY1(5) ## PY1(4) ## PY1(3) ## PY1(2) ## PY1(1) ## PY1(0)
    printf("PP1 = %b\n", PP1wire)
    printf("PN1 = %b\n", PN1wire)
    printf("PZ1 = %b\n", PZ1wire)
    printf("PY1 = %b\n", PY1wire)

    val PY2wire = Wire(UInt(6.W))
    PY2wire := PY2(5) ## PY2(4) ## PY2(3) ## PY2(2) ## PY2(1) ## PY2(0)
    printf("PY2 = %b\n", PY2wire)

    val PY3wire = Wire(UInt(3.W))
    PY3wire := PY3(2) ## PY3(1) ## PY3(0)
    printf("PY3 = %b\n", PY3wire)
    printf("PY4 = %b\n", PY4)
    printf("PY5 = %b\n", PY5)

   */
}


class W extends Module{
  val io = IO(new Bundle {
    val INA = Input(UInt(1.W))
    val INB = Input(UInt(1.W))
    val INC = Input(UInt(1.W))
    val IND = Input(UInt(1.W))
    val OUT = Output(UInt(5.W))
  })

  val result = Wire(Vec(5, UInt(1.W)))
  io.OUT := result(4) ## result(3) ##  result(2) ## result(1) ## result(0)
  /*
  printf("A = %b\n", io.INA)
  printf("B = %b\n", io.INB)
  printf("C = %b\n", io.INC)
  printf("D = %b\n", io.IND)
  printf("OUT = %b\n", io.OUT)
   */

  result(4) := (io.INA & io.INB) & (!io.INC & !io.IND) //2
  result(3) := ((io.INA & io.INB) & (io.INC ^ io.IND)) | ((io.INA ^ io.INB) & (!io.INC & !io.IND)) //1
  result(2) := ((io.INA & io.INB) & (io.INC & io.IND)) | ((io.INA ^ io.INB) & (io.INC ^ io.IND)) | !((io.INA | io.INB) | (io.INC | io.IND)) //0
  result(1) := ((!io.INA & !io.INB) & (io.INC ^ io.IND)) | ((io.INA ^ io.INB) & (io.INC & io.IND)) //-1
  result(0) := (!io.INA & !io.INB) & (io.INC & io.IND) //-2
  //result(1) := (((io.INA & io.INB) & (!io.INC ^ !io.IND)) | ((io.INA ^ io.INB) & (!io.INC & !io.IND))) | (((io.INA & io.INB) & (io.INC & io.IND)) | ((io.INA ^ io.INB) & (io.INC ^ io.IND)))
  //result(0) := (((!io.INA & !io.INB) & (io.INC ^ io.IND)) | ((!io.INA ^ !io.INB) & (io.INC & io.IND))) | ((!io.INA & !io.INB) & (io.INC & io.IND))

}

class W48 extends Module {
  val io = IO(new Bundle {
    val INA = Input(UInt(48.W))
    val INB = Input(UInt(48.W))
    val INC = Input(UInt(48.W))
    val IND = Input(UInt(48.W))
    val OUT = Output(Vec(48, UInt(5.W)))
  })

  val Wout = Wire(Vec(48, UInt(5.W)))

  io.OUT := Wout

  val W47 = Module(new W)
  W47.io.INA := io.INA(47)
  W47.io.INB := io.INB(47)
  W47.io.INC := io.INC(47)
  W47.io.IND := io.IND(47)
  Wout(47) := W47.io.OUT
  val W46 = Module(new W)
  W46.io.INA := io.INA(46)
  W46.io.INB := io.INB(46)
  W46.io.INC := io.INC(46)
  W46.io.IND := io.IND(46)
  Wout(46) := W46.io.OUT
  val W45 = Module(new W)
  W45.io.INA := io.INA(45)
  W45.io.INB := io.INB(45)
  W45.io.INC := io.INC(45)
  W45.io.IND := io.IND(45)
  Wout(45) := W45.io.OUT
  val W44 = Module(new W)
  W44.io.INA := io.INA(44)
  W44.io.INB := io.INB(44)
  W44.io.INC := io.INC(44)
  W44.io.IND := io.IND(44)
  Wout(44) := W44.io.OUT
  val W43 = Module(new W)
  W43.io.INA := io.INA(43)
  W43.io.INB := io.INB(43)
  W43.io.INC := io.INC(43)
  W43.io.IND := io.IND(43)
  Wout(43) := W43.io.OUT
  val W42 = Module(new W)
  W42.io.INA := io.INA(42)
  W42.io.INB := io.INB(42)
  W42.io.INC := io.INC(42)
  W42.io.IND := io.INC(42)
  Wout(42) := W42.io.OUT
  val W41 = Module(new W)
  W41.io.INA := io.INA(41)
  W41.io.INB := io.INB(41)
  W41.io.INC := io.INC(41)
  W41.io.IND := io.IND(41)
  Wout(41) := W41.io.OUT
  val W40 = Module(new W)
  W40.io.INA := io.INA(40)
  W40.io.INB := io.INB(40)
  W40.io.INC := io.INC(40)
  W40.io.IND := io.IND(40)
  Wout(40) := W40.io.OUT
  val W39 = Module(new W)
  W39.io.INA := io.INA(39)
  W39.io.INB := io.INB(39)
  W39.io.INC := io.INC(39)
  W39.io.IND := io.IND(39)
  Wout(39) := W39.io.OUT
  val W38 = Module(new W)
  W38.io.INA := io.INA(38)
  W38.io.INB := io.INB(38)
  W38.io.INC := io.INC(38)
  W38.io.IND := io.IND(38)
  Wout(38) := W38.io.OUT
  val W37 = Module(new W)
  W37.io.INA := io.INA(37)
  W37.io.INB := io.INB(37)
  W37.io.INC := io.INC(37)
  W37.io.IND := io.IND(37)
  Wout(37) := W37.io.OUT
  val W36 = Module(new W)
  W36.io.INA := io.INA(36)
  W36.io.INB := io.INB(36)
  W36.io.INC := io.INC(36)
  W36.io.IND := io.IND(36)
  Wout(36) := W36.io.OUT
  val W35 = Module(new W)
  W35.io.INA := io.INA(35)
  W35.io.INB := io.INB(35)
  W35.io.INC := io.INC(35)
  W35.io.IND := io.IND(35)
  Wout(35) := W35.io.OUT
  val W34 = Module(new W)
  W34.io.INA := io.INA(34)
  W34.io.INB := io.INB(34)
  W34.io.INC := io.INC(34)
  W34.io.IND := io.IND(34)
  Wout(34) := W34.io.OUT
  val W33 = Module(new W)
  W33.io.INA := io.INA(33)
  W33.io.INB := io.INB(33)
  W33.io.INC := io.INC(33)
  W33.io.IND := io.IND(33)
  Wout(33) := W33.io.OUT
  val W32 = Module(new W)
  W32.io.INA := io.INA(32)
  W32.io.INB := io.INB(32)
  W32.io.INC := io.INC(32)
  W32.io.IND := io.IND(32)
  Wout(32) := W32.io.OUT
  val W31 = Module(new W)
  W31.io.INA := io.INA(31)
  W31.io.INB := io.INB(31)
  W31.io.INC := io.INC(31)
  W31.io.IND := io.IND(31)
  Wout(31) := W31.io.OUT
  val W30 = Module(new W)
  W30.io.INA := io.INA(30)
  W30.io.INB := io.INB(30)
  W30.io.INC := io.INC(30)
  W30.io.IND := io.IND(30)
  Wout(30) := W30.io.OUT
  val W29 = Module(new W)
  W29.io.INA := io.INA(29)
  W29.io.INB := io.INB(29)
  W29.io.INC := io.INC(29)
  W29.io.IND := io.IND(29)
  Wout(29) := W29.io.OUT
  val W28 = Module(new W)
  W28.io.INA := io.INA(28)
  W28.io.INB := io.INB(28)
  W28.io.INC := io.INC(28)
  W28.io.IND := io.IND(28)
  Wout(28) := W28.io.OUT
  val W27 = Module(new W)
  W27.io.INA := io.INA(27)
  W27.io.INB := io.INB(27)
  W27.io.INC := io.INC(27)
  W27.io.IND := io.IND(27)
  Wout(27) := W27.io.OUT
  val W26 = Module(new W)
  W26.io.INA := io.INA(26)
  W26.io.INB := io.INB(26)
  W26.io.INC := io.INC(26)
  W26.io.IND := io.IND(26)
  Wout(26) := W26.io.OUT
  val W25 = Module(new W)
  W25.io.INA := io.INA(25)
  W25.io.INB := io.INB(25)
  W25.io.INC := io.INC(25)
  W25.io.IND := io.IND(25)
  Wout(25) := W25.io.OUT
  val W24 = Module(new W)
  W24.io.INA := io.INA(24)
  W24.io.INB := io.INB(24)
  W24.io.INC := io.INC(24)
  W24.io.IND := io.IND(24)
  Wout(24) := W24.io.OUT
  val W23 = Module(new W)
  W23.io.INA := io.INA(23)
  W23.io.INB := io.INB(23)
  W23.io.INC := io.INC(23)
  W23.io.IND := io.IND(23)
  Wout(23) := W23.io.OUT
  val W22 = Module(new W)
  W22.io.INA := io.INA(22)
  W22.io.INB := io.INB(22)
  W22.io.INC := io.INC(22)
  W22.io.IND := io.IND(22)
  Wout(22) := W22.io.OUT
  val W21 = Module(new W)
  W21.io.INA := io.INA(21)
  W21.io.INB := io.INB(21)
  W21.io.INC := io.INC(21)
  W21.io.IND := io.IND(21)
  Wout(21) := W21.io.OUT
  val W20 = Module(new W)
  W20.io.INA := io.INA(20)
  W20.io.INB := io.INB(20)
  W20.io.INC := io.INC(20)
  W20.io.IND := io.IND(20)
  Wout(20) := W20.io.OUT
  val W19 = Module(new W)
  W19.io.INA := io.INA(19)
  W19.io.INB := io.INB(19)
  W19.io.INC := io.INC(19)
  W19.io.IND := io.IND(19)
  Wout(19) := W19.io.OUT
  val W18 = Module(new W)
  W18.io.INA := io.INA(18)
  W18.io.INB := io.INB(18)
  W18.io.INC := io.INC(18)
  W18.io.IND := io.IND(18)
  Wout(18) := W18.io.OUT
  val W17 = Module(new W)
  W17.io.INA := io.INA(17)
  W17.io.INB := io.INB(17)
  W17.io.INC := io.INC(17)
  W17.io.IND := io.IND(17)
  Wout(17) := W17.io.OUT
  val W16 = Module(new W)
  W16.io.INA := io.INA(16)
  W16.io.INB := io.INB(16)
  W16.io.INC := io.INC(16)
  W16.io.IND := io.IND(16)
  Wout(16) := W16.io.OUT
  val W15 = Module(new W)
  W15.io.INA := io.INA(15)
  W15.io.INB := io.INB(15)
  W15.io.INC := io.INC(15)
  W15.io.IND := io.IND(15)
  Wout(15) := W15.io.OUT
  val W14 = Module(new W)
  W14.io.INA := io.INA(14)
  W14.io.INB := io.INB(14)
  W14.io.INC := io.INC(14)
  W14.io.IND := io.IND(14)
  Wout(14) := W14.io.OUT
  val W13 = Module(new W)
  W13.io.INA := io.INA(13)
  W13.io.INB := io.INB(13)
  W13.io.INC := io.INC(13)
  W13.io.IND := io.IND(13)
  Wout(13) := W13.io.OUT
  val W12 = Module(new W)
  W12.io.INA := io.INA(12)
  W12.io.INB := io.INB(12)
  W12.io.INC := io.INC(12)
  W12.io.IND := io.IND(12)
  Wout(12) := W12.io.OUT
  val W11 = Module(new W)
  W11.io.INA := io.INA(11)
  W11.io.INB := io.INB(11)
  W11.io.INC := io.INC(11)
  W11.io.IND := io.IND(11)
  Wout(11) := W11.io.OUT
  val W10 = Module(new W)
  W10.io.INA := io.INA(10)
  W10.io.INB := io.INB(10)
  W10.io.INC := io.INC(10)
  W10.io.IND := io.IND(10)
  Wout(10) := W10.io.OUT

  val W9 = Module(new W)
  W9.io.INA := io.INA(9)
  W9.io.INB := io.INB(9)
  W9.io.INC := io.INC(9)
  W9.io.IND := io.IND(9)
  Wout(9) := W9.io.OUT
  val W8 = Module(new W)
  W8.io.INA := io.INA(8)
  W8.io.INB := io.INB(8)
  W8.io.INC := io.INC(8)
  W8.io.IND := io.IND(8)
  Wout(8) := W8.io.OUT
  val W7 = Module(new W)
  W7.io.INA := io.INA(7)
  W7.io.INB := io.INB(7)
  W7.io.INC := io.INC(7)
  W7.io.IND := io.IND(7)
  Wout(7) := W7.io.OUT
  val W6 = Module(new W)
  W6.io.INA := io.INA(6)
  W6.io.INB := io.INB(6)
  W6.io.INC := io.INC(6)
  W6.io.IND := io.IND(6)
  Wout(6) := W6.io.OUT
  val W5 = Module(new W)
  W5.io.INA := io.INA(5)
  W5.io.INB := io.INB(5)
  W5.io.INC := io.INC(5)
  W5.io.IND := io.IND(5)
  Wout(5) := W5.io.OUT
  val W4 = Module(new W)
  W4.io.INA := io.INA(4)
  W4.io.INB := io.INB(4)
  W4.io.INC := io.INC(4)
  W4.io.IND := io.IND(4)
  Wout(4) := W4.io.OUT
  val W3 = Module(new W)
  W3.io.INA := io.INA(3)
  W3.io.INB := io.INB(3)
  W3.io.INC := io.INC(3)
  W3.io.IND := io.IND(3)
  Wout(3) := W3.io.OUT
  val W2 = Module(new W)
  W2.io.INA := io.INA(2)
  W2.io.INB := io.INB(2)
  W2.io.INC := io.INC(2)
  W2.io.IND := io.IND(2)
  Wout(2) := W2.io.OUT
  val W1 = Module(new W)
  W1.io.INA := io.INA(1)
  W1.io.INB := io.INB(1)
  W1.io.INC := io.INC(1)
  W1.io.IND := io.IND(1)
  Wout(1) := W1.io.OUT
  val W0 = Module(new W)
  W0.io.INA := io.INA(0)
  W0.io.INB := io.INB(0)
  W0.io.INC := io.INC(0)
  W0.io.IND := io.IND(0)
  Wout(0) := W0.io.OUT
}

class GES extends Module {
  val io = IO(new Bundle {
    val INcur = Input(UInt(5.W))
    val INnext = Input(UInt(5.W))
    val G = Output(UInt(1.W))
    val E = Output(UInt(1.W))
    val S = Output(UInt(1.W))
  })
  io.G := (io.INcur(4) & (io.INnext(4) | io.INnext(0))) | (io.INcur(3) & (io.INnext(3) | io.INnext(2) | io.INnext(1))) | (io.INcur(2) & io.INnext(4))
  io.E := (io.INcur(4) & (io.INnext(3) | io.INnext(2) | io.INnext(1))) | (io.INcur(3) & (io.INnext(4) | io.INnext(0))) | (io.INcur(2) & (io.INnext(3) | io.INnext(2) | io.INnext(1))) | (io.INcur(1) & (io.INnext(4) | io.INnext(0))) | (io.INcur(0) & (io.INnext(3) | io.INnext(2) | io.INnext(1)))
  io.S := (io.INcur(2) & io.INnext(0)) | (io.INcur(1) & (io.INnext(3) | io.INnext(2) | io.INnext(1))) | (io.INcur(0) & (io.INnext(4) | io.INnext(0)))
}
/*
class GES48 extends  Module {
  val io = IO(new Bundle {
    val Win = Input(Vec(48, UInt(5.W)))
    val Gout = Output(Vec(48, UInt(1.W)))
    val Eout = Output(Vec(48, UInt(1.W)))
    val Sout = Output(Vec(48, UInt(1.W)))
  })

  val Wout = Wire(Vec(48, UInt(5.W)))
  val g = Wire(Vec(48, UInt(1.W)))
  val e = Wire(Vec(48, UInt(1.W)))
  val s = Wire(Vec(48, UInt(1.W)))

  Wout := io.Win
  io.Gout := g
  io.Eout := e
  io.Sout := s

  val GES0 = Module(new GES)
  GES0.io.INcur := Wout(0)
  GES0.io.INnext := Wout(1)
  g(0) := GES0.io.G
  e(0) := GES0.io.E
  s(0) := GES0.io.S
  val GES1 = Module(new GES)
  GES1.io.INcur := Wout(1)
  GES1.io.INnext := Wout(2)
  g(1) := GES1.io.G
  e(1) := GES1.io.E
  s(1) := GES1.io.S
  val GES2 = Module(new GES)
  GES2.io.INcur := Wout(2)
  GES2.io.INnext := Wout(3)
  g(2) := GES2.io.G
  e(2) := GES2.io.E
  s(2) := GES2.io.S
  val GES3 = Module(new GES)
  GES3.io.INcur := Wout(3)
  GES3.io.INnext := Wout(4)
  g(3) := GES3.io.G
  e(3) := GES3.io.E
  s(3) := GES3.io.S
  val GES4 = Module(new GES)
  GES4.io.INcur := Wout(4)
  GES4.io.INnext := Wout(5)
  g(4) := GES4.io.G
  e(4) := GES4.io.E
  s(4) := GES4.io.S
  val GES5 = Module(new GES)
  GES5.io.INcur := Wout(5)
  GES5.io.INnext := Wout(6)
  g(5) := GES5.io.G
  e(5) := GES5.io.E
  s(5) := GES5.io.S
  val GES6 = Module(new GES)
  GES6.io.INcur := Wout(6)
  GES6.io.INnext := Wout(7)
  g(6) := GES6.io.G
  e(6) := GES6.io.E
  s(6) := GES6.io.S
  val GES7 = Module(new GES)
  GES7.io.INcur := Wout(7)
  GES7.io.INnext := Wout(8)
  g(7) := GES7.io.G
  e(7) := GES7.io.E
  s(7) := GES7.io.S
  val GES8 = Module(new GES)
  GES8.io.INcur := Wout(8)
  GES8.io.INnext := Wout(9)
  g(8) := GES8.io.G
  e(8) := GES8.io.E
  s(8) := GES8.io.S
  val GES9 = Module(new GES)
  GES9.io.INcur := Wout(9)
  GES9.io.INnext := Wout(10)
  g(9) := GES9.io.G
  e(9) := GES9.io.E
  s(9) := GES9.io.S
  val GES10 = Module(new GES)
  GES10.io.INcur := Wout(10)
  GES10.io.INnext := Wout(11)
  g(10) := GES10.io.G
  e(10) := GES10.io.E
  s(10) := GES10.io.S
  val GES11 = Module(new GES)
  GES11.io.INcur := Wout(11)
  GES11.io.INnext := Wout(12)
  g(11) := GES11.io.G
  e(11) := GES11.io.E
  s(11) := GES11.io.S
  val GES12 = Module(new GES)
  GES12.io.INcur := Wout(12)
  GES12.io.INnext := Wout(13)
  g(12) := GES12.io.G
  e(12) := GES12.io.E
  s(12) := GES12.io.S
  val GES13 = Module(new GES)
  GES13.io.INcur := Wout(13)
  GES13.io.INnext := Wout(14)
  g(13) := GES13.io.G
  e(13) := GES13.io.E
  s(13) := GES13.io.S
  val GES14 = Module(new GES)
  GES14.io.INcur := Wout(14)
  GES14.io.INnext := Wout(15)
  g(14) := GES14.io.G
  e(14) := GES14.io.E
  s(14) := GES14.io.S
  val GES15 = Module(new GES)
  GES15.io.INcur := Wout(15)
  GES15.io.INnext := Wout(16)
  g(15) := GES15.io.G
  e(15) := GES15.io.E
  s(15) := GES15.io.S
  val GES16 = Module(new GES)
  GES16.io.INcur := Wout(16)
  GES16.io.INnext := Wout(17)
  g(16) := GES16.io.G
  e(16) := GES16.io.E
  s(16) := GES16.io.S
  val GES17 = Module(new GES)
  GES17.io.INcur := Wout(17)
  GES17.io.INnext := Wout(18)
  g(17) := GES17.io.G
  e(17) := GES17.io.E
  s(17) := GES17.io.S
  val GES18 = Module(new GES)
  GES18.io.INcur := Wout(18)
  GES18.io.INnext := Wout(19)
  g(18) := GES18.io.G
  e(18) := GES18.io.E
  s(18) := GES18.io.S
  val GES19 = Module(new GES)
  GES19.io.INcur := Wout(19)
  GES19.io.INnext := Wout(20)
  g(19) := GES19.io.G
  e(19) := GES19.io.E
  s(19) := GES19.io.S
  val GES20 = Module(new GES)
  GES20.io.INcur := Wout(20)
  GES20.io.INnext := Wout(21)
  g(20) := GES20.io.G
  e(20) := GES20.io.E
  s(20) := GES20.io.S
  val GES21 = Module(new GES)
  GES21.io.INcur := Wout(21)
  GES21.io.INnext := Wout(22)
  g(21) := GES21.io.G
  e(21) := GES21.io.E
  s(21) := GES21.io.S
  val GES22 = Module(new GES)
  GES22.io.INcur := Wout(22)
  GES22.io.INnext := Wout(23)
  g(22) := GES22.io.G
  e(22) := GES22.io.E
  s(22) := GES22.io.S
  val GES23 = Module(new GES)
  GES23.io.INcur := Wout(23)
  GES23.io.INnext := Wout(24)
  g(23) := GES23.io.G
  e(23) := GES23.io.E
  s(23) := GES23.io.S
  val GES24 = Module(new GES)
  GES24.io.INcur := Wout(24)
  GES24.io.INnext := Wout(25)
  g(24) := GES24.io.G
  e(24) := GES24.io.E
  s(24) := GES24.io.S
  val GES25 = Module(new GES)
  GES25.io.INcur := Wout(25)
  GES25.io.INnext := Wout(26)
  g(25) := GES25.io.G
  e(25) := GES25.io.E
  s(25) := GES25.io.S
  val GES26 = Module(new GES)
  GES26.io.INcur := Wout(26)
  GES26.io.INnext := Wout(27)
  g(26) := GES26.io.G
  e(26) := GES26.io.E
  s(26) := GES26.io.S
  val GES27 = Module(new GES)
  GES27.io.INcur := Wout(27)
  GES27.io.INnext := Wout(28)
  g(27) := GES27.io.G
  e(27) := GES27.io.E
  s(27) := GES27.io.S
  val GES28 = Module(new GES)
  GES28.io.INcur := Wout(28)
  GES28.io.INnext := Wout(29)
  g(28) := GES28.io.G
  e(28) := GES28.io.E
  s(28) := GES28.io.S
  val GES29 = Module(new GES)
  GES29.io.INcur := Wout(29)
  GES29.io.INnext := Wout(30)
  g(29) := GES29.io.G
  e(29) := GES29.io.E
  s(29) := GES29.io.S
  val GES30 = Module(new GES)
  GES30.io.INcur := Wout(30)
  GES30.io.INnext := Wout(31)
  g(30) := GES30.io.G
  e(30) := GES30.io.E
  s(30) := GES30.io.S
  val GES31 = Module(new GES)
  GES31.io.INcur := Wout(31)
  GES31.io.INnext := Wout(32)
  g(31) := GES31.io.G
  e(31) := GES31.io.E
  s(31) := GES31.io.S
  val GES32 = Module(new GES)
  GES32.io.INcur := Wout(32)
  GES32.io.INnext := Wout(33)
  g(32) := GES32.io.G
  e(32) := GES32.io.E
  s(32) := GES32.io.S
  val GES33 = Module(new GES)
  GES33.io.INcur := Wout(33)
  GES33.io.INnext := Wout(34)
  g(33) := GES33.io.G
  e(33) := GES33.io.E
  s(33) := GES33.io.S
  val GES34 = Module(new GES)
  GES34.io.INcur := Wout(34)
  GES34.io.INnext := Wout(35)
  g(34) := GES34.io.G
  e(34) := GES34.io.E
  s(34) := GES34.io.S
  val GES35 = Module(new GES)
  GES35.io.INcur := Wout(35)
  GES35.io.INnext := Wout(36)
  g(35) := GES35.io.G
  e(35) := GES35.io.E
  s(35) := GES35.io.S
  val GES36 = Module(new GES)
  GES36.io.INcur := Wout(36)
  GES36.io.INnext := Wout(37)
  g(36) := GES36.io.G
  e(36) := GES36.io.E
  s(36) := GES36.io.S
  val GES37 = Module(new GES)
  GES37.io.INcur := Wout(37)
  GES37.io.INnext := Wout(38)
  g(37) := GES37.io.G
  e(37) := GES37.io.E
  s(37) := GES37.io.S
  val GES38 = Module(new GES)
  GES38.io.INcur := Wout(38)
  GES38.io.INnext := Wout(39)
  g(38) := GES38.io.G
  e(38) := GES38.io.E
  s(38) := GES38.io.S
  val GES39 = Module(new GES)
  GES39.io.INcur := Wout(39)
  GES39.io.INnext := Wout(40)
  g(39) := GES39.io.G
  e(39) := GES39.io.E
  s(39) := GES39.io.S
  val GES40 = Module(new GES)
  GES40.io.INcur := Wout(40)
  GES40.io.INnext := Wout(41)
  g(40) := GES40.io.G
  e(40) := GES40.io.E
  s(40) := GES40.io.S
  val GES41 = Module(new GES)
  GES41.io.INcur := Wout(41)
  GES41.io.INnext := Wout(42)
  g(41) := GES41.io.G
  e(41) := GES41.io.E
  s(41) := GES41.io.S
  val GES42 = Module(new GES)
  GES42.io.INcur := Wout(42)
  GES42.io.INnext := Wout(43)
  g(42) := GES42.io.G
  e(42) := GES42.io.E
  s(42) := GES42.io.S
  val GES43 = Module(new GES)
  GES43.io.INcur := Wout(43)
  GES43.io.INnext := Wout(44)
  g(43) := GES43.io.G
  e(43) := GES43.io.E
  s(43) := GES43.io.S
  val GES44 = Module(new GES)
  GES44.io.INcur := Wout(44)
  GES44.io.INnext := Wout(45)
  g(44) := GES44.io.G
  e(44) := GES44.io.E
  s(44) := GES44.io.S
  val GES45 = Module(new GES)
  GES45.io.INcur := Wout(45)
  GES45.io.INnext := Wout(46)
  g(45) := GES45.io.G
  e(45) := GES45.io.E
  s(45) := GES45.io.S
  val GES46 = Module(new GES)
  GES46.io.INcur := Wout(46)
  GES46.io.INnext := Wout(47)
  g(46) := GES46.io.G
  e(46) := GES46.io.E
  s(46) := GES46.io.S
  val GES47 = Module(new GES)
  GES47.io.INcur := Wout(47)
  GES47.io.INnext := "b00110".U
  g(47) := GES47.io.G
  e(47) := GES47.io.E
  s(47) := GES47.io.S
}
*/
class GES48 extends  Module {
  val io = IO(new Bundle {
    val Win = Input(Vec(48, UInt(5.W)))
    val Gout = Output(Vec(48, UInt(1.W)))
    val Eout = Output(Vec(48, UInt(1.W)))
    val Sout = Output(Vec(48, UInt(1.W)))
  })

  val Wout = Wire(Vec(48, UInt(5.W)))
  val g = Wire(Vec(48, UInt(1.W)))
  val e = Wire(Vec(48, UInt(1.W)))
  val s = Wire(Vec(48, UInt(1.W)))

  Wout := io.Win
  io.Gout := g
  io.Eout := e
  io.Sout := s

  val GES0 = Module(new GES)
  GES0.io.INcur := Wout(0)
  GES0.io.INnext := 0.U
  g(0) := GES0.io.G
  e(0) := GES0.io.E
  s(0) := GES0.io.S
  val GES1 = Module(new GES)
  GES1.io.INcur := Wout(1)
  GES1.io.INnext := Wout(0)
  g(1) := GES1.io.G
  e(1) := GES1.io.E
  s(1) := GES1.io.S
  val GES2 = Module(new GES)
  GES2.io.INcur := Wout(2)
  GES2.io.INnext := Wout(1)
  g(2) := GES2.io.G
  e(2) := GES2.io.E
  s(2) := GES2.io.S
  val GES3 = Module(new GES)
  GES3.io.INcur := Wout(3)
  GES3.io.INnext := Wout(2)
  g(3) := GES3.io.G
  e(3) := GES3.io.E
  s(3) := GES3.io.S
  val GES4 = Module(new GES)
  GES4.io.INcur := Wout(4)
  GES4.io.INnext := Wout(3)
  g(4) := GES4.io.G
  e(4) := GES4.io.E
  s(4) := GES4.io.S
  val GES5 = Module(new GES)
  GES5.io.INcur := Wout(5)
  GES5.io.INnext := Wout(4)
  g(5) := GES5.io.G
  e(5) := GES5.io.E
  s(5) := GES5.io.S
  val GES6 = Module(new GES)
  GES6.io.INcur := Wout(6)
  GES6.io.INnext := Wout(5)
  g(6) := GES6.io.G
  e(6) := GES6.io.E
  s(6) := GES6.io.S
  val GES7 = Module(new GES)
  GES7.io.INcur := Wout(7)
  GES7.io.INnext := Wout(6)
  g(7) := GES7.io.G
  e(7) := GES7.io.E
  s(7) := GES7.io.S
  val GES8 = Module(new GES)
  GES8.io.INcur := Wout(8)
  GES8.io.INnext := Wout(7)
  g(8) := GES8.io.G
  e(8) := GES8.io.E
  s(8) := GES8.io.S
  val GES9 = Module(new GES)
  GES9.io.INcur := Wout(9)
  GES9.io.INnext := Wout(8)
  g(9) := GES9.io.G
  e(9) := GES9.io.E
  s(9) := GES9.io.S
  val GES10 = Module(new GES)
  GES10.io.INcur := Wout(10)
  GES10.io.INnext := Wout(9)
  g(10) := GES10.io.G
  e(10) := GES10.io.E
  s(10) := GES10.io.S
  val GES11 = Module(new GES)
  GES11.io.INcur := Wout(11)
  GES11.io.INnext := Wout(10)
  g(11) := GES11.io.G
  e(11) := GES11.io.E
  s(11) := GES11.io.S
  val GES12 = Module(new GES)
  GES12.io.INcur := Wout(12)
  GES12.io.INnext := Wout(11)
  g(12) := GES12.io.G
  e(12) := GES12.io.E
  s(12) := GES12.io.S
  val GES13 = Module(new GES)
  GES13.io.INcur := Wout(13)
  GES13.io.INnext := Wout(12)
  g(13) := GES13.io.G
  e(13) := GES13.io.E
  s(13) := GES13.io.S
  val GES14 = Module(new GES)
  GES14.io.INcur := Wout(14)
  GES14.io.INnext := Wout(13)
  g(14) := GES14.io.G
  e(14) := GES14.io.E
  s(14) := GES14.io.S
  val GES15 = Module(new GES)
  GES15.io.INcur := Wout(15)
  GES15.io.INnext := Wout(14)
  g(15) := GES15.io.G
  e(15) := GES15.io.E
  s(15) := GES15.io.S
  val GES16 = Module(new GES)
  GES16.io.INcur := Wout(16)
  GES16.io.INnext := Wout(15)
  g(16) := GES16.io.G
  e(16) := GES16.io.E
  s(16) := GES16.io.S
  val GES17 = Module(new GES)
  GES17.io.INcur := Wout(17)
  GES17.io.INnext := Wout(16)
  g(17) := GES17.io.G
  e(17) := GES17.io.E
  s(17) := GES17.io.S
  val GES18 = Module(new GES)
  GES18.io.INcur := Wout(18)
  GES18.io.INnext := Wout(17)
  g(18) := GES18.io.G
  e(18) := GES18.io.E
  s(18) := GES18.io.S
  val GES19 = Module(new GES)
  GES19.io.INcur := Wout(19)
  GES19.io.INnext := Wout(18)
  g(19) := GES19.io.G
  e(19) := GES19.io.E
  s(19) := GES19.io.S
  val GES20 = Module(new GES)
  GES20.io.INcur := Wout(20)
  GES20.io.INnext := Wout(19)
  g(20) := GES20.io.G
  e(20) := GES20.io.E
  s(20) := GES20.io.S
  val GES21 = Module(new GES)
  GES21.io.INcur := Wout(21)
  GES21.io.INnext := Wout(20)
  g(21) := GES21.io.G
  e(21) := GES21.io.E
  s(21) := GES21.io.S
  val GES22 = Module(new GES)
  GES22.io.INcur := Wout(22)
  GES22.io.INnext := Wout(21)
  g(22) := GES22.io.G
  e(22) := GES22.io.E
  s(22) := GES22.io.S
  val GES23 = Module(new GES)
  GES23.io.INcur := Wout(23)
  GES23.io.INnext := Wout(22)
  g(23) := GES23.io.G
  e(23) := GES23.io.E
  s(23) := GES23.io.S
  val GES24 = Module(new GES)
  GES24.io.INcur := Wout(24)
  GES24.io.INnext := Wout(23)
  g(24) := GES24.io.G
  e(24) := GES24.io.E
  s(24) := GES24.io.S
  val GES25 = Module(new GES)
  GES25.io.INcur := Wout(25)
  GES25.io.INnext := Wout(24)
  g(25) := GES25.io.G
  e(25) := GES25.io.E
  s(25) := GES25.io.S
  val GES26 = Module(new GES)
  GES26.io.INcur := Wout(26)
  GES26.io.INnext := Wout(25)
  g(26) := GES26.io.G
  e(26) := GES26.io.E
  s(26) := GES26.io.S
  val GES27 = Module(new GES)
  GES27.io.INcur := Wout(27)
  GES27.io.INnext := Wout(26)
  g(27) := GES27.io.G
  e(27) := GES27.io.E
  s(27) := GES27.io.S
  val GES28 = Module(new GES)
  GES28.io.INcur := Wout(28)
  GES28.io.INnext := Wout(27)
  g(28) := GES28.io.G
  e(28) := GES28.io.E
  s(28) := GES28.io.S
  val GES29 = Module(new GES)
  GES29.io.INcur := Wout(29)
  GES29.io.INnext := Wout(28)
  g(29) := GES29.io.G
  e(29) := GES29.io.E
  s(29) := GES29.io.S
  val GES30 = Module(new GES)
  GES30.io.INcur := Wout(30)
  GES30.io.INnext := Wout(29)
  g(30) := GES30.io.G
  e(30) := GES30.io.E
  s(30) := GES30.io.S
  val GES31 = Module(new GES)
  GES31.io.INcur := Wout(31)
  GES31.io.INnext := Wout(30)
  g(31) := GES31.io.G
  e(31) := GES31.io.E
  s(31) := GES31.io.S
  val GES32 = Module(new GES)
  GES32.io.INcur := Wout(32)
  GES32.io.INnext := Wout(31)
  g(32) := GES32.io.G
  e(32) := GES32.io.E
  s(32) := GES32.io.S
  val GES33 = Module(new GES)
  GES33.io.INcur := Wout(33)
  GES33.io.INnext := Wout(32)
  g(33) := GES33.io.G
  e(33) := GES33.io.E
  s(33) := GES33.io.S
  val GES34 = Module(new GES)
  GES34.io.INcur := Wout(34)
  GES34.io.INnext := Wout(33)
  g(34) := GES34.io.G
  e(34) := GES34.io.E
  s(34) := GES34.io.S
  val GES35 = Module(new GES)
  GES35.io.INcur := Wout(35)
  GES35.io.INnext := Wout(34)
  g(35) := GES35.io.G
  e(35) := GES35.io.E
  s(35) := GES35.io.S
  val GES36 = Module(new GES)
  GES36.io.INcur := Wout(36)
  GES36.io.INnext := Wout(35)
  g(36) := GES36.io.G
  e(36) := GES36.io.E
  s(36) := GES36.io.S
  val GES37 = Module(new GES)
  GES37.io.INcur := Wout(37)
  GES37.io.INnext := Wout(36)
  g(37) := GES37.io.G
  e(37) := GES37.io.E
  s(37) := GES37.io.S
  val GES38 = Module(new GES)
  GES38.io.INcur := Wout(38)
  GES38.io.INnext := Wout(37)
  g(38) := GES38.io.G
  e(38) := GES38.io.E
  s(38) := GES38.io.S
  val GES39 = Module(new GES)
  GES39.io.INcur := Wout(39)
  GES39.io.INnext := Wout(38)
  g(39) := GES39.io.G
  e(39) := GES39.io.E
  s(39) := GES39.io.S
  val GES40 = Module(new GES)
  GES40.io.INcur := Wout(40)
  GES40.io.INnext := Wout(39)
  g(40) := GES40.io.G
  e(40) := GES40.io.E
  s(40) := GES40.io.S
  val GES41 = Module(new GES)
  GES41.io.INcur := Wout(41)
  GES41.io.INnext := Wout(40)
  g(41) := GES41.io.G
  e(41) := GES41.io.E
  s(41) := GES41.io.S
  val GES42 = Module(new GES)
  GES42.io.INcur := Wout(42)
  GES42.io.INnext := Wout(41)
  g(42) := GES42.io.G
  e(42) := GES42.io.E
  s(42) := GES42.io.S
  val GES43 = Module(new GES)
  GES43.io.INcur := Wout(43)
  GES43.io.INnext := Wout(42)
  g(43) := GES43.io.G
  e(43) := GES43.io.E
  s(43) := GES43.io.S
  val GES44 = Module(new GES)
  GES44.io.INcur := Wout(44)
  GES44.io.INnext := Wout(43)
  g(44) := GES44.io.G
  e(44) := GES44.io.E
  s(44) := GES44.io.S
  val GES45 = Module(new GES)
  GES45.io.INcur := Wout(45)
  GES45.io.INnext := Wout(44)
  g(45) := GES45.io.G
  e(45) := GES45.io.E
  s(45) := GES45.io.S
  val GES46 = Module(new GES)
  GES46.io.INcur := Wout(46)
  GES46.io.INnext := Wout(45)
  g(46) := GES46.io.G
  e(46) := GES46.io.E
  s(46) := GES46.io.S
  val GES47 = Module(new GES)
  GES47.io.INcur := Wout(47)
  GES47.io.INnext := Wout(46)
  g(47) := GES47.io.G
  e(47) := GES47.io.E
  s(47) := GES47.io.S
}
/*
class F extends Module {
  val io = IO(new Bundle {
    val Epre = Input(UInt(1.W))
    val Gcur = Input(UInt(1.W))
    val Scur = Input(UInt(1.W))
    val Gnext = Input(UInt(1.W))
    val Snext = Input(UInt(1.W))
    val Fout = Output(UInt(1.W))
  })
  io.Fout := (io.Epre & ((io.Gcur & !io.Snext) | (io.Scur & !io.Gnext))) | (!io.Epre & ((io.Scur & !io.Snext) | (io.Gcur & !io.Gnext)))
}

class F48 extends Module {
  val io = IO(new Bundle {
    val Gin = Input(Vec(48, UInt(1.W)))
    val Ein = Input(Vec(48, UInt(1.W)))
    val Sin = Input(Vec(48, UInt(1.W)))
    val Fout = Output(Vec(48, UInt(1.W)))
  })

  val g = Wire(Vec(48, UInt(1.W)))
  val e = Wire(Vec(48, UInt(1.W)))
  val s = Wire(Vec(48, UInt(1.W)))
  val f = Wire(Vec(48, UInt(1.W)))

  g := io.Gin
  e := io.Ein
  s := io.Sin
  io.Fout := f

  val F0 = Module(new F)
  F0.io.Epre := 0.U
  F0.io.Gcur := g(0)
  F0.io.Scur := s(0)
  F0.io.Gnext := g(1)
  F0.io.Snext := s(1)
  f(0) := F0.io.Fout
  val F1 = Module(new F)
  F1.io.Epre := e(0)
  F1.io.Gcur := g(1)
  F1.io.Scur := s(1)
  F1.io.Gnext := g(2)
  F1.io.Snext := s(2)
  f(1) := F1.io.Fout
  val F2 = Module(new F)
  F2.io.Epre := e(1)
  F2.io.Gcur := g(2)
  F2.io.Scur := s(2)
  F2.io.Gnext := g(3)
  F2.io.Snext := s(3)
  f(2) := F2.io.Fout
  val F3 = Module(new F)
  F3.io.Epre := e(2)
  F3.io.Gcur := g(3)
  F3.io.Scur := s(3)
  F3.io.Gnext := g(4)
  F3.io.Snext := s(4)
  f(3) := F3.io.Fout
  val F4 = Module(new F)
  F4.io.Epre := e(3)
  F4.io.Gcur := g(4)
  F4.io.Scur := s(4)
  F4.io.Gnext := g(5)
  F4.io.Snext := s(5)
  f(4) := F4.io.Fout
  val F5 = Module(new F)
  F5.io.Epre := e(4)
  F5.io.Gcur := g(5)
  F5.io.Scur := s(5)
  F5.io.Gnext := g(6)
  F5.io.Snext := s(6)
  f(5) := F5.io.Fout
  val F6 = Module(new F)
  F6.io.Epre := e(5)
  F6.io.Gcur := g(6)
  F6.io.Scur := s(6)
  F6.io.Gnext := g(7)
  F6.io.Snext := s(7)
  f(6) := F6.io.Fout
  val F7 = Module(new F)
  F7.io.Epre := e(6)
  F7.io.Gcur := g(7)
  F7.io.Scur := s(7)
  F7.io.Gnext := g(8)
  F7.io.Snext := s(8)
  f(7) := F7.io.Fout
  val F8 = Module(new F)
  F8.io.Epre := e(7)
  F8.io.Gcur := g(8)
  F8.io.Scur := s(8)
  F8.io.Gnext := g(9)
  F8.io.Snext := s(9)
  f(8) := F8.io.Fout
  val F9 = Module(new F)
  F9.io.Epre := e(8)
  F9.io.Gcur := g(9)
  F9.io.Scur := s(9)
  F9.io.Gnext := g(10)
  F9.io.Snext := s(10)
  f(9) := F9.io.Fout
  val F10 = Module(new F)
  F10.io.Epre := e(9)
  F10.io.Gcur := g(10)
  F10.io.Scur := s(10)
  F10.io.Gnext := g(11)
  F10.io.Snext := s(11)
  f(10) := F10.io.Fout
  val F11 = Module(new F)
  F11.io.Epre := e(10)
  F11.io.Gcur := g(11)
  F11.io.Scur := s(11)
  F11.io.Gnext := g(12)
  F11.io.Snext := s(12)
  f(11) := F11.io.Fout
  val F12 = Module(new F)
  F12.io.Epre := e(11)
  F12.io.Gcur := g(12)
  F12.io.Scur := s(12)
  F12.io.Gnext := g(13)
  F12.io.Snext := s(13)
  f(12) := F12.io.Fout
  val F13 = Module(new F)
  F13.io.Epre := e(12)
  F13.io.Gcur := g(13)
  F13.io.Scur := s(13)
  F13.io.Gnext := g(14)
  F13.io.Snext := s(14)
  f(13) := F13.io.Fout
  val F14 = Module(new F)
  F14.io.Epre := e(13)
  F14.io.Gcur := g(14)
  F14.io.Scur := s(14)
  F14.io.Gnext := g(15)
  F14.io.Snext := s(15)
  f(14) := F14.io.Fout
  val F15 = Module(new F)
  F15.io.Epre := e(14)
  F15.io.Gcur := g(15)
  F15.io.Scur := s(15)
  F15.io.Gnext := g(16)
  F15.io.Snext := s(16)
  f(15) := F15.io.Fout
  val F16 = Module(new F)
  F16.io.Epre := e(15)
  F16.io.Gcur := g(16)
  F16.io.Scur := s(16)
  F16.io.Gnext := g(17)
  F16.io.Snext := s(17)
  f(16) := F16.io.Fout
  val F17 = Module(new F)
  F17.io.Epre := e(16)
  F17.io.Gcur := g(17)
  F17.io.Scur := s(17)
  F17.io.Gnext := g(18)
  F17.io.Snext := s(18)
  f(17) := F17.io.Fout
  val F18 = Module(new F)
  F18.io.Epre := e(17)
  F18.io.Gcur := g(18)
  F18.io.Scur := s(18)
  F18.io.Gnext := g(19)
  F18.io.Snext := s(19)
  f(18) := F18.io.Fout
  val F19 = Module(new F)
  F19.io.Epre := e(18)
  F19.io.Gcur := g(19)
  F19.io.Scur := s(19)
  F19.io.Gnext := g(20)
  F19.io.Snext := s(20)
  f(19) := F19.io.Fout
  val F20 = Module(new F)
  F20.io.Epre := e(19)
  F20.io.Gcur := g(20)
  F20.io.Scur := s(20)
  F20.io.Gnext := g(21)
  F20.io.Snext := s(21)
  f(20) := F20.io.Fout
  val F21 = Module(new F)
  F21.io.Epre := e(20)
  F21.io.Gcur := g(21)
  F21.io.Scur := s(21)
  F21.io.Gnext := g(22)
  F21.io.Snext := s(22)
  f(21) := F21.io.Fout
  val F22 = Module(new F)
  F22.io.Epre := e(21)
  F22.io.Gcur := g(22)
  F22.io.Scur := s(22)
  F22.io.Gnext := g(23)
  F22.io.Snext := s(23)
  f(22) := F22.io.Fout
  val F23 = Module(new F)
  F23.io.Epre := e(22)
  F23.io.Gcur := g(23)
  F23.io.Scur := s(23)
  F23.io.Gnext := g(24)
  F23.io.Snext := s(24)
  f(23) := F23.io.Fout
  val F24 = Module(new F)
  F24.io.Epre := e(23)
  F24.io.Gcur := g(24)
  F24.io.Scur := s(24)
  F24.io.Gnext := g(25)
  F24.io.Snext := s(25)
  f(24) := F24.io.Fout
  val F25 = Module(new F)
  F25.io.Epre := e(24)
  F25.io.Gcur := g(25)
  F25.io.Scur := s(25)
  F25.io.Gnext := g(26)
  F25.io.Snext := s(26)
  f(25) := F25.io.Fout
  val F26 = Module(new F)
  F26.io.Epre := e(25)
  F26.io.Gcur := g(26)
  F26.io.Scur := s(26)
  F26.io.Gnext := g(27)
  F26.io.Snext := s(27)
  f(26) := F26.io.Fout
  val F27 = Module(new F)
  F27.io.Epre := e(26)
  F27.io.Gcur := g(27)
  F27.io.Scur := s(27)
  F27.io.Gnext := g(28)
  F27.io.Snext := s(28)
  f(27) := F27.io.Fout
  val F28 = Module(new F)
  F28.io.Epre := e(27)
  F28.io.Gcur := g(28)
  F28.io.Scur := s(28)
  F28.io.Gnext := g(29)
  F28.io.Snext := s(29)
  f(28) := F28.io.Fout
  val F29 = Module(new F)
  F29.io.Epre := e(28)
  F29.io.Gcur := g(29)
  F29.io.Scur := s(29)
  F29.io.Gnext := g(30)
  F29.io.Snext := s(30)
  f(29) := F29.io.Fout
  val F30 = Module(new F)
  F30.io.Epre := e(29)
  F30.io.Gcur := g(30)
  F30.io.Scur := s(30)
  F30.io.Gnext := g(31)
  F30.io.Snext := s(31)
  f(30) := F30.io.Fout
  val F31 = Module(new F)
  F31.io.Epre := e(30)
  F31.io.Gcur := g(31)
  F31.io.Scur := s(31)
  F31.io.Gnext := g(32)
  F31.io.Snext := s(32)
  f(31) := F31.io.Fout
  val F32 = Module(new F)
  F32.io.Epre := e(31)
  F32.io.Gcur := g(32)
  F32.io.Scur := s(32)
  F32.io.Gnext := g(33)
  F32.io.Snext := s(33)
  f(32) := F32.io.Fout
  val F33 = Module(new F)
  F33.io.Epre := e(32)
  F33.io.Gcur := g(33)
  F33.io.Scur := s(33)
  F33.io.Gnext := g(34)
  F33.io.Snext := s(34)
  f(33) := F33.io.Fout
  val F34 = Module(new F)
  F34.io.Epre := e(33)
  F34.io.Gcur := g(34)
  F34.io.Scur := s(34)
  F34.io.Gnext := g(35)
  F34.io.Snext := s(35)
  f(34) := F34.io.Fout
  val F35 = Module(new F)
  F35.io.Epre := e(34)
  F35.io.Gcur := g(35)
  F35.io.Scur := s(35)
  F35.io.Gnext := g(36)
  F35.io.Snext := s(36)
  f(35) := F35.io.Fout
  val F36 = Module(new F)
  F36.io.Epre := e(35)
  F36.io.Gcur := g(36)
  F36.io.Scur := s(36)
  F36.io.Gnext := g(37)
  F36.io.Snext := s(37)
  f(36) := F36.io.Fout
  val F37 = Module(new F)
  F37.io.Epre := e(36)
  F37.io.Gcur := g(37)
  F37.io.Scur := s(37)
  F37.io.Gnext := g(38)
  F37.io.Snext := s(38)
  f(37) := F37.io.Fout
  val F38 = Module(new F)
  F38.io.Epre := e(37)
  F38.io.Gcur := g(38)
  F38.io.Scur := s(38)
  F38.io.Gnext := g(39)
  F38.io.Snext := s(39)
  f(38) := F38.io.Fout
  val F39 = Module(new F)
  F39.io.Epre := e(38)
  F39.io.Gcur := g(39)
  F39.io.Scur := s(39)
  F39.io.Gnext := g(40)
  F39.io.Snext := s(40)
  f(39) := F39.io.Fout
  val F40 = Module(new F)
  F40.io.Epre := e(39)
  F40.io.Gcur := g(40)
  F40.io.Scur := s(40)
  F40.io.Gnext := g(41)
  F40.io.Snext := s(41)
  f(40) := F40.io.Fout
  val F41 = Module(new F)
  F41.io.Epre := e(40)
  F41.io.Gcur := g(41)
  F41.io.Scur := s(41)
  F41.io.Gnext := g(42)
  F41.io.Snext := s(42)
  f(41) := F41.io.Fout
  val F42 = Module(new F)
  F42.io.Epre := e(41)
  F42.io.Gcur := g(42)
  F42.io.Scur := s(42)
  F42.io.Gnext := g(43)
  F42.io.Snext := s(43)
  f(42) := F42.io.Fout
  val F43 = Module(new F)
  F43.io.Epre := e(42)
  F43.io.Gcur := g(43)
  F43.io.Scur := s(43)
  F43.io.Gnext := g(44)
  F43.io.Snext := s(44)
  f(43) := F43.io.Fout
  val F44 = Module(new F)
  F44.io.Epre := e(43)
  F44.io.Gcur := g(44)
  F44.io.Scur := s(44)
  F44.io.Gnext := g(45)
  F44.io.Snext := s(45)
  f(44) := F44.io.Fout
  val F45 = Module(new F)
  F45.io.Epre := e(44)
  F45.io.Gcur := g(45)
  F45.io.Scur := s(45)
  F45.io.Gnext := g(46)
  F45.io.Snext := s(46)
  f(45) := F45.io.Fout
  val F46 = Module(new F)
  F46.io.Epre := e(45)
  F46.io.Gcur := g(46)
  F46.io.Scur := s(46)
  F46.io.Gnext := g(47)
  F46.io.Snext := s(47)
  f(46) := F46.io.Fout
  val F47 = Module(new F)
  F47.io.Epre := e(46)
  F47.io.Gcur := g(47)
  F47.io.Scur := s(47)
  F47.io.Gnext := 0.U
  F47.io.Snext := 1.U
  f(47) := F47.io.Fout
}
*/
class F extends Module {
  val io = IO(new Bundle {
    val Epre = Input(UInt(1.W))
    val Gcur = Input(UInt(1.W))
    val Scur = Input(UInt(1.W))
    val Gnext = Input(UInt(1.W))
    val Snext = Input(UInt(1.W))
    val Fout = Output(UInt(1.W))
  })
  io.Fout := (io.Epre & ((io.Gcur & !io.Snext) | (io.Scur & !io.Gnext))) | (!io.Epre & ((io.Scur & !io.Snext) | (io.Gcur & !io.Gnext)))
}

class F48 extends Module {
  val io = IO(new Bundle {
    val Gin = Input(Vec(48, UInt(1.W)))
    val Ein = Input(Vec(48, UInt(1.W)))
    val Sin = Input(Vec(48, UInt(1.W)))
    val Fout = Output(Vec(48, UInt(1.W)))
  })

  val g = Wire(Vec(48, UInt(1.W)))
  val e = Wire(Vec(48, UInt(1.W)))
  val s = Wire(Vec(48, UInt(1.W)))
  val f = Wire(Vec(48, UInt(1.W)))

  g := io.Gin
  e := io.Ein
  s := io.Sin
  io.Fout := f

  val F0 = Module(new F)
  F0.io.Epre := e(1)
  F0.io.Gcur := g(0)
  F0.io.Scur := s(0)
  F0.io.Gnext := 1.U
  F0.io.Snext := 0.U
  f(0) := F0.io.Fout
  val F1 = Module(new F)
  F1.io.Epre := e(2)
  F1.io.Gcur := g(1)
  F1.io.Scur := s(1)
  F1.io.Gnext := g(0)
  F1.io.Snext := s(0)
  f(1) := F1.io.Fout
  val F2 = Module(new F)
  F2.io.Epre := e(3)
  F2.io.Gcur := g(2)
  F2.io.Scur := s(2)
  F2.io.Gnext := g(1)
  F2.io.Snext := s(1)
  f(2) := F2.io.Fout
  val F3 = Module(new F)
  F3.io.Epre := e(4)
  F3.io.Gcur := g(3)
  F3.io.Scur := s(3)
  F3.io.Gnext := g(2)
  F3.io.Snext := s(2)
  f(3) := F3.io.Fout
  val F4 = Module(new F)
  F4.io.Epre := e(5)
  F4.io.Gcur := g(4)
  F4.io.Scur := s(4)
  F4.io.Gnext := g(3)
  F4.io.Snext := s(3)
  f(4) := F4.io.Fout
  val F5 = Module(new F)
  F5.io.Epre := e(6)
  F5.io.Gcur := g(5)
  F5.io.Scur := s(5)
  F5.io.Gnext := g(4)
  F5.io.Snext := s(4)
  f(5) := F5.io.Fout
  val F6 = Module(new F)
  F6.io.Epre := e(7)
  F6.io.Gcur := g(6)
  F6.io.Scur := s(6)
  F6.io.Gnext := g(5)
  F6.io.Snext := s(5)
  f(6) := F6.io.Fout
  val F7 = Module(new F)
  F7.io.Epre := e(8)
  F7.io.Gcur := g(7)
  F7.io.Scur := s(7)
  F7.io.Gnext := g(6)
  F7.io.Snext := s(6)
  f(7) := F7.io.Fout
  val F8 = Module(new F)
  F8.io.Epre := e(9)
  F8.io.Gcur := g(8)
  F8.io.Scur := s(8)
  F8.io.Gnext := g(7)
  F8.io.Snext := s(7)
  f(8) := F8.io.Fout
  val F9 = Module(new F)
  F9.io.Epre := e(10)
  F9.io.Gcur := g(9)
  F9.io.Scur := s(9)
  F9.io.Gnext := g(8)
  F9.io.Snext := s(8)
  f(9) := F9.io.Fout
  val F10 = Module(new F)
  F10.io.Epre := e(11)
  F10.io.Gcur := g(10)
  F10.io.Scur := s(10)
  F10.io.Gnext := g(9)
  F10.io.Snext := s(9)
  f(10) := F10.io.Fout
  val F11 = Module(new F)
  F11.io.Epre := e(12)
  F11.io.Gcur := g(11)
  F11.io.Scur := s(11)
  F11.io.Gnext := g(10)
  F11.io.Snext := s(10)
  f(11) := F11.io.Fout
  val F12 = Module(new F)
  F12.io.Epre := e(13)
  F12.io.Gcur := g(12)
  F12.io.Scur := s(12)
  F12.io.Gnext := g(11)
  F12.io.Snext := s(11)
  f(12) := F12.io.Fout
  val F13 = Module(new F)
  F13.io.Epre := e(14)
  F13.io.Gcur := g(13)
  F13.io.Scur := s(13)
  F13.io.Gnext := g(12)
  F13.io.Snext := s(12)
  f(13) := F13.io.Fout
  val F14 = Module(new F)
  F14.io.Epre := e(15)
  F14.io.Gcur := g(14)
  F14.io.Scur := s(14)
  F14.io.Gnext := g(13)
  F14.io.Snext := s(13)
  f(14) := F14.io.Fout
  val F15 = Module(new F)
  F15.io.Epre := e(18)
  F15.io.Gcur := g(15)
  F15.io.Scur := s(15)
  F15.io.Gnext := g(14)
  F15.io.Snext := s(14)
  f(15) := F15.io.Fout
  val F16 = Module(new F)
  F16.io.Epre := e(17)
  F16.io.Gcur := g(16)
  F16.io.Scur := s(16)
  F16.io.Gnext := g(15)
  F16.io.Snext := s(15)
  f(16) := F16.io.Fout
  val F17 = Module(new F)
  F17.io.Epre := e(18)
  F17.io.Gcur := g(17)
  F17.io.Scur := s(17)
  F17.io.Gnext := g(16)
  F17.io.Snext := s(16)
  f(17) := F17.io.Fout
  val F18 = Module(new F)
  F18.io.Epre := e(19)
  F18.io.Gcur := g(18)
  F18.io.Scur := s(18)
  F18.io.Gnext := g(17)
  F18.io.Snext := s(17)
  f(18) := F18.io.Fout
  val F19 = Module(new F)
  F19.io.Epre := e(20)
  F19.io.Gcur := g(19)
  F19.io.Scur := s(19)
  F19.io.Gnext := g(18)
  F19.io.Snext := s(18)
  f(19) := F19.io.Fout
  val F20 = Module(new F)
  F20.io.Epre := e(21)
  F20.io.Gcur := g(20)
  F20.io.Scur := s(20)
  F20.io.Gnext := g(19)
  F20.io.Snext := s(19)
  f(20) := F20.io.Fout
  val F21 = Module(new F)
  F21.io.Epre := e(22)
  F21.io.Gcur := g(21)
  F21.io.Scur := s(21)
  F21.io.Gnext := g(20)
  F21.io.Snext := s(20)
  f(21) := F21.io.Fout
  val F22 = Module(new F)
  F22.io.Epre := e(23)
  F22.io.Gcur := g(22)
  F22.io.Scur := s(22)
  F22.io.Gnext := g(21)
  F22.io.Snext := s(21)
  f(22) := F22.io.Fout
  val F23 = Module(new F)
  F23.io.Epre := e(24)
  F23.io.Gcur := g(23)
  F23.io.Scur := s(23)
  F23.io.Gnext := g(22)
  F23.io.Snext := s(22)
  f(23) := F23.io.Fout
  val F24 = Module(new F)
  F24.io.Epre := e(25)
  F24.io.Gcur := g(24)
  F24.io.Scur := s(24)
  F24.io.Gnext := g(23)
  F24.io.Snext := s(23)
  f(24) := F24.io.Fout
  val F25 = Module(new F)
  F25.io.Epre := e(26)
  F25.io.Gcur := g(25)
  F25.io.Scur := s(25)
  F25.io.Gnext := g(24)
  F25.io.Snext := s(24)
  f(25) := F25.io.Fout
  val F26 = Module(new F)
  F26.io.Epre := e(27)
  F26.io.Gcur := g(26)
  F26.io.Scur := s(26)
  F26.io.Gnext := g(25)
  F26.io.Snext := s(25)
  f(26) := F26.io.Fout
  val F27 = Module(new F)
  F27.io.Epre := e(28)
  F27.io.Gcur := g(27)
  F27.io.Scur := s(27)
  F27.io.Gnext := g(26)
  F27.io.Snext := s(26)
  f(27) := F27.io.Fout
  val F28 = Module(new F)
  F28.io.Epre := e(29)
  F28.io.Gcur := g(28)
  F28.io.Scur := s(28)
  F28.io.Gnext := g(27)
  F28.io.Snext := s(27)
  f(28) := F28.io.Fout
  val F29 = Module(new F)
  F29.io.Epre := e(30)
  F29.io.Gcur := g(29)
  F29.io.Scur := s(29)
  F29.io.Gnext := g(28)
  F29.io.Snext := s(28)
  f(29) := F29.io.Fout
  val F30 = Module(new F)
  F30.io.Epre := e(31)
  F30.io.Gcur := g(30)
  F30.io.Scur := s(30)
  F30.io.Gnext := g(29)
  F30.io.Snext := s(29)
  f(30) := F30.io.Fout
  val F31 = Module(new F)
  F31.io.Epre := e(32)
  F31.io.Gcur := g(31)
  F31.io.Scur := s(31)
  F31.io.Gnext := g(30)
  F31.io.Snext := s(30)
  f(31) := F31.io.Fout
  val F32 = Module(new F)
  F32.io.Epre := e(33)
  F32.io.Gcur := g(32)
  F32.io.Scur := s(32)
  F32.io.Gnext := g(31)
  F32.io.Snext := s(31)
  f(32) := F32.io.Fout
  val F33 = Module(new F)
  F33.io.Epre := e(34)
  F33.io.Gcur := g(33)
  F33.io.Scur := s(33)
  F33.io.Gnext := g(32)
  F33.io.Snext := s(32)
  f(33) := F33.io.Fout
  val F34 = Module(new F)
  F34.io.Epre := e(35)
  F34.io.Gcur := g(34)
  F34.io.Scur := s(34)
  F34.io.Gnext := g(33)
  F34.io.Snext := s(33)
  f(34) := F34.io.Fout
  val F35 = Module(new F)
  F35.io.Epre := e(36)
  F35.io.Gcur := g(35)
  F35.io.Scur := s(35)
  F35.io.Gnext := g(34)
  F35.io.Snext := s(34)
  f(35) := F35.io.Fout
  val F36 = Module(new F)
  F36.io.Epre := e(37)
  F36.io.Gcur := g(36)
  F36.io.Scur := s(36)
  F36.io.Gnext := g(35)
  F36.io.Snext := s(35)
  f(36) := F36.io.Fout
  val F37 = Module(new F)
  F37.io.Epre := e(38)
  F37.io.Gcur := g(37)
  F37.io.Scur := s(37)
  F37.io.Gnext := g(36)
  F37.io.Snext := s(36)
  f(37) := F37.io.Fout
  val F38 = Module(new F)
  F38.io.Epre := e(39)
  F38.io.Gcur := g(38)
  F38.io.Scur := s(38)
  F38.io.Gnext := g(37)
  F38.io.Snext := s(37)
  f(38) := F38.io.Fout
  val F39 = Module(new F)
  F39.io.Epre := e(40)
  F39.io.Gcur := g(39)
  F39.io.Scur := s(39)
  F39.io.Gnext := g(38)
  F39.io.Snext := s(38)
  f(39) := F39.io.Fout
  val F40 = Module(new F)
  F40.io.Epre := e(41)
  F40.io.Gcur := g(40)
  F40.io.Scur := s(40)
  F40.io.Gnext := g(39)
  F40.io.Snext := s(39)
  f(40) := F40.io.Fout
  val F41 = Module(new F)
  F41.io.Epre := e(42)
  F41.io.Gcur := g(41)
  F41.io.Scur := s(41)
  F41.io.Gnext := g(40)
  F41.io.Snext := s(40)
  f(41) := F41.io.Fout
  val F42 = Module(new F)
  F42.io.Epre := e(43)
  F42.io.Gcur := g(42)
  F42.io.Scur := s(42)
  F42.io.Gnext := g(41)
  F42.io.Snext := s(41)
  f(42) := F42.io.Fout
  val F43 = Module(new F)
  F43.io.Epre := e(44)
  F43.io.Gcur := g(43)
  F43.io.Scur := s(43)
  F43.io.Gnext := g(42)
  F43.io.Snext := s(42)
  f(43) := F43.io.Fout
  val F44 = Module(new F)
  F44.io.Epre := e(43)
  F44.io.Gcur := g(44)
  F44.io.Scur := s(44)
  F44.io.Gnext := g(43)
  F44.io.Snext := s(43)
  f(44) := F44.io.Fout
  val F45 = Module(new F)
  F45.io.Epre := e(46)
  F45.io.Gcur := g(45)
  F45.io.Scur := s(45)
  F45.io.Gnext := g(44)
  F45.io.Snext := s(44)
  f(45) := F45.io.Fout
  val F46 = Module(new F)
  F46.io.Epre := e(47)
  F46.io.Gcur := g(46)
  F46.io.Scur := s(46)
  F46.io.Gnext := g(45)
  F46.io.Snext := s(45)
  f(46) := F46.io.Fout
  val F47 = Module(new F)
  F47.io.Epre := 1.U
  F47.io.Gcur := g(47)
  F47.io.Scur := s(47)
  F47.io.Gnext := g(46)
  F47.io.Snext := s(46)
  f(47) := F47.io.Fout
}

class Gp extends Module {
  val io = IO(new Bundle {
    val Epre = Input(UInt(1.W))
    val Gcur = Input(UInt(1.W))
    val Scur = Input(UInt(1.W))
    val Snext = Input(UInt(1.W))
    val pout = Output(UInt(1.W))
    val nout = Output(UInt(1.W))
    val zout = Output(UInt(1.W))
  })

  val n = Wire(UInt(1.W))
  n := io.Epre & io.Scur
  io.nout := n
  /*
  val p = Wire(UInt(1.W))
  p := !io.Snext & (io.Gcur | (!io.Epre & io.Scur))
  io.pout := p
  io.zout := !(p | n)
*/
  //// Tao's method ////
  io.pout := io.Gcur
  io.zout := !(io.Gcur | n)
  //// Tao's method ////
}
/*
class Gp48 extends Module {
  val io = IO(new Bundle {
    val Gin = Input(Vec(48, UInt(1.W)))
    val Ein = Input(Vec(48, UInt(1.W)))
    val Sin = Input(Vec(48, UInt(1.W)))
    val Pout = Output(Vec(48, UInt(1.W)))
    val Nout = Output(Vec(48, UInt(1.W)))
    val Zout = Output(Vec(48, UInt(1.W)))
  })
  val g = Wire(Vec(48, UInt(1.W)))
  val e = Wire(Vec(48, UInt(1.W)))
  val s = Wire(Vec(48, UInt(1.W)))
  val P = Wire(Vec(48, UInt(1.W)))
  val N = Wire(Vec(48, UInt(1.W)))
  val Z = Wire(Vec(48, UInt(1.W)))

  g := io.Gin
  e := io.Ein
  s := io.Sin
  io.Pout := P
  io.Nout := N
  io.Zout := Z

  val Gp0 = Module(new Gp)
  Gp0.io.Epre := 0.U
  Gp0.io.Gcur := g(0)
  Gp0.io.Scur := s(0)
  Gp0.io.Snext := s(1)
  P(0) := Gp0.io.pout
  N(0) := Gp0.io.nout
  Z(0) := Gp0.io.zout
  val Gp1 = Module(new Gp)
  Gp1.io.Epre := e(0)
  Gp1.io.Gcur := g(1)
  Gp1.io.Scur := s(1)
  Gp1.io.Snext := s(2)
  P(1) := Gp1.io.pout
  N(1) := Gp1.io.nout
  Z(1) := Gp1.io.zout
  val Gp2 = Module(new Gp)
  Gp2.io.Epre := e(1)
  Gp2.io.Gcur := g(2)
  Gp2.io.Scur := s(2)
  Gp2.io.Snext := s(3)
  P(2) := Gp2.io.pout
  N(2) := Gp2.io.nout
  Z(2) := Gp2.io.zout
  val Gp3 = Module(new Gp)
  Gp3.io.Epre := e(2)
  Gp3.io.Gcur := g(3)
  Gp3.io.Scur := s(3)
  Gp3.io.Snext := s(4)
  P(3) := Gp3.io.pout
  N(3) := Gp3.io.nout
  Z(3) := Gp3.io.zout
  val Gp4 = Module(new Gp)
  Gp4.io.Epre := e(3)
  Gp4.io.Gcur := g(4)
  Gp4.io.Scur := s(4)
  Gp4.io.Snext := s(5)
  P(4) := Gp4.io.pout
  N(4) := Gp4.io.nout
  Z(4) := Gp4.io.zout
  val Gp5 = Module(new Gp)
  Gp5.io.Epre := e(4)
  Gp5.io.Gcur := g(5)
  Gp5.io.Scur := s(5)
  Gp5.io.Snext := s(6)
  P(5) := Gp5.io.pout
  N(5) := Gp5.io.nout
  Z(5) := Gp5.io.zout
  val Gp6 = Module(new Gp)
  Gp6.io.Epre := e(5)
  Gp6.io.Gcur := g(6)
  Gp6.io.Scur := s(6)
  Gp6.io.Snext := s(7)
  P(6) := Gp6.io.pout
  N(6) := Gp6.io.nout
  Z(6) := Gp6.io.zout
  val Gp7 = Module(new Gp)
  Gp7.io.Epre := e(6)
  Gp7.io.Gcur := g(7)
  Gp7.io.Scur := s(7)
  Gp7.io.Snext := s(8)
  P(7) := Gp7.io.pout
  N(7) := Gp7.io.nout
  Z(7) := Gp7.io.zout
  val Gp8 = Module(new Gp)
  Gp8.io.Epre := e(7)
  Gp8.io.Gcur := g(8)
  Gp8.io.Scur := s(8)
  Gp8.io.Snext := s(9)
  P(8) := Gp8.io.pout
  N(8) := Gp8.io.nout
  Z(8) := Gp8.io.zout
  val Gp9 = Module(new Gp)
  Gp9.io.Epre := e(8)
  Gp9.io.Gcur := g(9)
  Gp9.io.Scur := s(9)
  Gp9.io.Snext := s(10)
  P(9) := Gp9.io.pout
  N(9) := Gp9.io.nout
  Z(9) := Gp9.io.zout
  val Gp10 = Module(new Gp)
  Gp10.io.Epre := e(9)
  Gp10.io.Gcur := g(10)
  Gp10.io.Scur := s(10)
  Gp10.io.Snext := s(11)
  P(10) := Gp10.io.pout
  N(10) := Gp10.io.nout
  Z(10) := Gp10.io.zout
  val Gp11 = Module(new Gp)
  Gp11.io.Epre := e(10)
  Gp11.io.Gcur := g(11)
  Gp11.io.Scur := s(11)
  Gp11.io.Snext := s(12)
  P(11) := Gp11.io.pout
  N(11) := Gp11.io.nout
  Z(11) := Gp11.io.zout
  val Gp12 = Module(new Gp)
  Gp12.io.Epre := e(11)
  Gp12.io.Gcur := g(12)
  Gp12.io.Scur := s(12)
  Gp12.io.Snext := s(13)
  P(12) := Gp12.io.pout
  N(12) := Gp12.io.nout
  Z(12) := Gp12.io.zout
  val Gp13 = Module(new Gp)
  Gp13.io.Epre := e(12)
  Gp13.io.Gcur := g(13)
  Gp13.io.Scur := s(13)
  Gp13.io.Snext := s(14)
  P(13) := Gp13.io.pout
  N(13) := Gp13.io.nout
  Z(13) := Gp13.io.zout
  val Gp14 = Module(new Gp)
  Gp14.io.Epre := e(13)
  Gp14.io.Gcur := g(14)
  Gp14.io.Scur := s(14)
  Gp14.io.Snext := s(15)
  P(14) := Gp14.io.pout
  N(14) := Gp14.io.nout
  Z(14) := Gp14.io.zout
  val Gp15 = Module(new Gp)
  Gp15.io.Epre := e(14)
  Gp15.io.Gcur := g(15)
  Gp15.io.Scur := s(15)
  Gp15.io.Snext := s(16)
  P(15) := Gp15.io.pout
  N(15) := Gp15.io.nout
  Z(15) := Gp15.io.zout
  val Gp16 = Module(new Gp)
  Gp16.io.Epre := e(15)
  Gp16.io.Gcur := g(16)
  Gp16.io.Scur := s(16)
  Gp16.io.Snext := s(17)
  P(16) := Gp16.io.pout
  N(16) := Gp16.io.nout
  Z(16) := Gp16.io.zout
  val Gp17 = Module(new Gp)
  Gp17.io.Epre := e(16)
  Gp17.io.Gcur := g(17)
  Gp17.io.Scur := s(17)
  Gp17.io.Snext := s(18)
  P(17) := Gp17.io.pout
  N(17) := Gp17.io.nout
  Z(17) := Gp17.io.zout
  val Gp18 = Module(new Gp)
  Gp18.io.Epre := e(17)
  Gp18.io.Gcur := g(18)
  Gp18.io.Scur := s(18)
  Gp18.io.Snext := s(19)
  P(18) := Gp18.io.pout
  N(18) := Gp18.io.nout
  Z(18) := Gp18.io.zout
  val Gp19 = Module(new Gp)
  Gp19.io.Epre := e(18)
  Gp19.io.Gcur := g(19)
  Gp19.io.Scur := s(19)
  Gp19.io.Snext := s(20)
  P(19) := Gp19.io.pout
  N(19) := Gp19.io.nout
  Z(19) := Gp19.io.zout
  val Gp20 = Module(new Gp)
  Gp20.io.Epre := e(19)
  Gp20.io.Gcur := g(20)
  Gp20.io.Scur := s(20)
  Gp20.io.Snext := s(21)
  P(20) := Gp20.io.pout
  N(20) := Gp20.io.nout
  Z(20) := Gp20.io.zout
  val Gp21 = Module(new Gp)
  Gp21.io.Epre := e(20)
  Gp21.io.Gcur := g(21)
  Gp21.io.Scur := s(21)
  Gp21.io.Snext := s(22)
  P(21) := Gp21.io.pout
  N(21) := Gp21.io.nout
  Z(21) := Gp21.io.zout
  val Gp22 = Module(new Gp)
  Gp22.io.Epre := e(21)
  Gp22.io.Gcur := g(22)
  Gp22.io.Scur := s(22)
  Gp22.io.Snext := s(23)
  P(22) := Gp22.io.pout
  N(22) := Gp22.io.nout
  Z(22) := Gp22.io.zout
  val Gp23 = Module(new Gp)
  Gp23.io.Epre := e(22)
  Gp23.io.Gcur := g(23)
  Gp23.io.Scur := s(23)
  Gp23.io.Snext := s(24)
  P(23) := Gp23.io.pout
  N(23) := Gp23.io.nout
  Z(23) := Gp23.io.zout
  val Gp24 = Module(new Gp)
  Gp24.io.Epre := e(23)
  Gp24.io.Gcur := g(24)
  Gp24.io.Scur := s(24)
  Gp24.io.Snext := s(25)
  P(24) := Gp24.io.pout
  N(24) := Gp24.io.nout
  Z(24) := Gp24.io.zout
  val Gp25 = Module(new Gp)
  Gp25.io.Epre := e(24)
  Gp25.io.Gcur := g(25)
  Gp25.io.Scur := s(25)
  Gp25.io.Snext := s(26)
  P(25) := Gp25.io.pout
  N(25) := Gp25.io.nout
  Z(25) := Gp25.io.zout
  val Gp26 = Module(new Gp)
  Gp26.io.Epre := e(25)
  Gp26.io.Gcur := g(26)
  Gp26.io.Scur := s(26)
  Gp26.io.Snext := s(27)
  P(26) := Gp26.io.pout
  N(26) := Gp26.io.nout
  Z(26) := Gp26.io.zout
  val Gp27 = Module(new Gp)
  Gp27.io.Epre := e(26)
  Gp27.io.Gcur := g(27)
  Gp27.io.Scur := s(27)
  Gp27.io.Snext := s(28)
  P(27) := Gp27.io.pout
  N(27) := Gp27.io.nout
  Z(27) := Gp27.io.zout
  val Gp28 = Module(new Gp)
  Gp28.io.Epre := e(27)
  Gp28.io.Gcur := g(28)
  Gp28.io.Scur := s(28)
  Gp28.io.Snext := s(29)
  P(28) := Gp28.io.pout
  N(28) := Gp28.io.nout
  Z(28) := Gp28.io.zout
  val Gp29 = Module(new Gp)
  Gp29.io.Epre := e(28)
  Gp29.io.Gcur := g(29)
  Gp29.io.Scur := s(29)
  Gp29.io.Snext := s(30)
  P(29) := Gp29.io.pout
  N(29) := Gp29.io.nout
  Z(29) := Gp29.io.zout
  val Gp30 = Module(new Gp)
  Gp30.io.Epre := e(29)
  Gp30.io.Gcur := g(30)
  Gp30.io.Scur := s(30)
  Gp30.io.Snext := s(31)
  P(30) := Gp30.io.pout
  N(30) := Gp30.io.nout
  Z(30) := Gp30.io.zout
  val Gp31 = Module(new Gp)
  Gp31.io.Epre := e(30)
  Gp31.io.Gcur := g(31)
  Gp31.io.Scur := s(31)
  Gp31.io.Snext := s(32)
  P(31) := Gp31.io.pout
  N(31) := Gp31.io.nout
  Z(31) := Gp31.io.zout
  val Gp32 = Module(new Gp)
  Gp32.io.Epre := e(31)
  Gp32.io.Gcur := g(32)
  Gp32.io.Scur := s(32)
  Gp32.io.Snext := s(33)
  P(32) := Gp32.io.pout
  N(32) := Gp32.io.nout
  Z(32) := Gp32.io.zout
  val Gp33 = Module(new Gp)
  Gp33.io.Epre := e(32)
  Gp33.io.Gcur := g(33)
  Gp33.io.Scur := s(33)
  Gp33.io.Snext := s(34)
  P(33) := Gp33.io.pout
  N(33) := Gp33.io.nout
  Z(33) := Gp33.io.zout
  val Gp34 = Module(new Gp)
  Gp34.io.Epre := e(33)
  Gp34.io.Gcur := g(34)
  Gp34.io.Scur := s(34)
  Gp34.io.Snext := s(35)
  P(34) := Gp34.io.pout
  N(34) := Gp34.io.nout
  Z(34) := Gp34.io.zout
  val Gp35 = Module(new Gp)
  Gp35.io.Epre := e(34)
  Gp35.io.Gcur := g(35)
  Gp35.io.Scur := s(35)
  Gp35.io.Snext := s(36)
  P(35) := Gp35.io.pout
  N(35) := Gp35.io.nout
  Z(35) := Gp35.io.zout
  val Gp36 = Module(new Gp)
  Gp36.io.Epre := e(35)
  Gp36.io.Gcur := g(36)
  Gp36.io.Scur := s(36)
  Gp36.io.Snext := s(37)
  P(36) := Gp36.io.pout
  N(36) := Gp36.io.nout
  Z(36) := Gp36.io.zout
  val Gp37 = Module(new Gp)
  Gp37.io.Epre := e(36)
  Gp37.io.Gcur := g(37)
  Gp37.io.Scur := s(37)
  Gp37.io.Snext := s(38)
  P(37) := Gp37.io.pout
  N(37) := Gp37.io.nout
  Z(37) := Gp37.io.zout
  val Gp38 = Module(new Gp)
  Gp38.io.Epre := e(37)
  Gp38.io.Gcur := g(38)
  Gp38.io.Scur := s(38)
  Gp38.io.Snext := s(39)
  P(38) := Gp38.io.pout
  N(38) := Gp38.io.nout
  Z(38) := Gp38.io.zout
  val Gp39 = Module(new Gp)
  Gp39.io.Epre := e(38)
  Gp39.io.Gcur := g(39)
  Gp39.io.Scur := s(39)
  Gp39.io.Snext := s(40)
  P(39) := Gp39.io.pout
  N(39) := Gp39.io.nout
  Z(39) := Gp39.io.zout
  val Gp40 = Module(new Gp)
  Gp40.io.Epre := e(39)
  Gp40.io.Gcur := g(40)
  Gp40.io.Scur := s(40)
  Gp40.io.Snext := s(41)
  P(40) := Gp40.io.pout
  N(40) := Gp40.io.nout
  Z(40) := Gp40.io.zout
  val Gp41 = Module(new Gp)
  Gp41.io.Epre := e(40)
  Gp41.io.Gcur := g(41)
  Gp41.io.Scur := s(41)
  Gp41.io.Snext := s(42)
  P(41) := Gp41.io.pout
  N(41) := Gp41.io.nout
  Z(41) := Gp41.io.zout
  val Gp42 = Module(new Gp)
  Gp42.io.Epre := e(41)
  Gp42.io.Gcur := g(42)
  Gp42.io.Scur := s(42)
  Gp42.io.Snext := s(43)
  P(42) := Gp42.io.pout
  N(42) := Gp42.io.nout
  Z(42) := Gp42.io.zout
  val Gp43 = Module(new Gp)
  Gp43.io.Epre := e(42)
  Gp43.io.Gcur := g(43)
  Gp43.io.Scur := s(43)
  Gp43.io.Snext := s(44)
  P(43) := Gp43.io.pout
  N(43) := Gp43.io.nout
  Z(43) := Gp43.io.zout
  val Gp44 = Module(new Gp)
  Gp44.io.Epre := e(44)
  Gp44.io.Gcur := g(44)
  Gp44.io.Scur := s(44)
  Gp44.io.Snext := s(45)
  P(44) := Gp44.io.pout
  N(44) := Gp44.io.nout
  Z(44) := Gp44.io.zout
  val Gp45 = Module(new Gp)
  Gp45.io.Epre := e(44)
  Gp45.io.Gcur := g(45)
  Gp45.io.Scur := s(45)
  Gp45.io.Snext := s(46)
  P(45) := Gp45.io.pout
  N(45) := Gp45.io.nout
  Z(45) := Gp45.io.zout
  val Gp46 = Module(new Gp)
  Gp46.io.Epre := e(45)
  Gp46.io.Gcur := g(46)
  Gp46.io.Scur := s(46)
  Gp46.io.Snext := s(47)
  P(46) := Gp46.io.pout
  N(46) := Gp46.io.nout
  Z(46) := Gp46.io.zout
  val Gp47 = Module(new Gp)
  Gp47.io.Epre := e(46)
  Gp47.io.Gcur := g(47)
  Gp47.io.Scur := s(47)
  Gp47.io.Snext := 0.U
  P(47) := Gp47.io.pout
  N(47) := Gp47.io.nout
  Z(47) := Gp47.io.zout
}
*/
class Gp48 extends Module {
  val io = IO(new Bundle {
    val Gin = Input(Vec(48, UInt(1.W)))
    val Ein = Input(Vec(48, UInt(1.W)))
    val Sin = Input(Vec(48, UInt(1.W)))
    val Pout = Output(Vec(48, UInt(1.W)))
    val Nout = Output(Vec(48, UInt(1.W)))
    val Zout = Output(Vec(48, UInt(1.W)))
  })
  val g = Wire(Vec(48, UInt(1.W)))
  val e = Wire(Vec(48, UInt(1.W)))
  val s = Wire(Vec(48, UInt(1.W)))
  val P = Wire(Vec(48, UInt(1.W)))
  val N = Wire(Vec(48, UInt(1.W)))
  val Z = Wire(Vec(48, UInt(1.W)))

  g := io.Gin
  e := io.Ein
  s := io.Sin
  io.Pout := P
  io.Nout := N
  io.Zout := Z

  val Gp0 = Module(new Gp)
  Gp0.io.Epre := e(1)
  Gp0.io.Gcur := g(0)
  Gp0.io.Scur := s(0)
  Gp0.io.Snext := 1.U
  P(0) := Gp0.io.pout
  N(0) := Gp0.io.nout
  Z(0) := Gp0.io.zout
  val Gp1 = Module(new Gp)
  Gp1.io.Epre := e(2)
  Gp1.io.Gcur := g(1)
  Gp1.io.Scur := s(1)
  Gp1.io.Snext := s(0)
  P(1) := Gp1.io.pout
  N(1) := Gp1.io.nout
  Z(1) := Gp1.io.zout
  val Gp2 = Module(new Gp)
  Gp2.io.Epre := e(3)
  Gp2.io.Gcur := g(2)
  Gp2.io.Scur := s(2)
  Gp2.io.Snext := s(1)
  P(2) := Gp2.io.pout
  N(2) := Gp2.io.nout
  Z(2) := Gp2.io.zout
  val Gp3 = Module(new Gp)
  Gp3.io.Epre := e(4)
  Gp3.io.Gcur := g(3)
  Gp3.io.Scur := s(3)
  Gp3.io.Snext := s(2)
  P(3) := Gp3.io.pout
  N(3) := Gp3.io.nout
  Z(3) := Gp3.io.zout
  val Gp4 = Module(new Gp)
  Gp4.io.Epre := e(5)
  Gp4.io.Gcur := g(4)
  Gp4.io.Scur := s(4)
  Gp4.io.Snext := s(3)
  P(4) := Gp4.io.pout
  N(4) := Gp4.io.nout
  Z(4) := Gp4.io.zout
  val Gp5 = Module(new Gp)
  Gp5.io.Epre := e(6)
  Gp5.io.Gcur := g(5)
  Gp5.io.Scur := s(5)
  Gp5.io.Snext := s(4)
  P(5) := Gp5.io.pout
  N(5) := Gp5.io.nout
  Z(5) := Gp5.io.zout
  val Gp6 = Module(new Gp)
  Gp6.io.Epre := e(7)
  Gp6.io.Gcur := g(6)
  Gp6.io.Scur := s(6)
  Gp6.io.Snext := s(5)
  P(6) := Gp6.io.pout
  N(6) := Gp6.io.nout
  Z(6) := Gp6.io.zout
  val Gp7 = Module(new Gp)
  Gp7.io.Epre := e(8)
  Gp7.io.Gcur := g(7)
  Gp7.io.Scur := s(7)
  Gp7.io.Snext := s(6)
  P(7) := Gp7.io.pout
  N(7) := Gp7.io.nout
  Z(7) := Gp7.io.zout
  val Gp8 = Module(new Gp)
  Gp8.io.Epre := e(9)
  Gp8.io.Gcur := g(8)
  Gp8.io.Scur := s(8)
  Gp8.io.Snext := s(7)
  P(8) := Gp8.io.pout
  N(8) := Gp8.io.nout
  Z(8) := Gp8.io.zout
  val Gp9 = Module(new Gp)
  Gp9.io.Epre := e(10)
  Gp9.io.Gcur := g(9)
  Gp9.io.Scur := s(9)
  Gp9.io.Snext := s(8)
  P(9) := Gp9.io.pout
  N(9) := Gp9.io.nout
  Z(9) := Gp9.io.zout
  val Gp10 = Module(new Gp)
  Gp10.io.Epre := e(11)
  Gp10.io.Gcur := g(10)
  Gp10.io.Scur := s(10)
  Gp10.io.Snext := s(9)
  P(10) := Gp10.io.pout
  N(10) := Gp10.io.nout
  Z(10) := Gp10.io.zout
  val Gp11 = Module(new Gp)
  Gp11.io.Epre := e(12)
  Gp11.io.Gcur := g(11)
  Gp11.io.Scur := s(11)
  Gp11.io.Snext := s(10)
  P(11) := Gp11.io.pout
  N(11) := Gp11.io.nout
  Z(11) := Gp11.io.zout
  val Gp12 = Module(new Gp)
  Gp12.io.Epre := e(13)
  Gp12.io.Gcur := g(12)
  Gp12.io.Scur := s(12)
  Gp12.io.Snext := s(11)
  P(12) := Gp12.io.pout
  N(12) := Gp12.io.nout
  Z(12) := Gp12.io.zout
  val Gp13 = Module(new Gp)
  Gp13.io.Epre := e(14)
  Gp13.io.Gcur := g(13)
  Gp13.io.Scur := s(13)
  Gp13.io.Snext := s(12)
  P(13) := Gp13.io.pout
  N(13) := Gp13.io.nout
  Z(13) := Gp13.io.zout
  val Gp14 = Module(new Gp)
  Gp14.io.Epre := e(15)
  Gp14.io.Gcur := g(14)
  Gp14.io.Scur := s(14)
  Gp14.io.Snext := s(13)
  P(14) := Gp14.io.pout
  N(14) := Gp14.io.nout
  Z(14) := Gp14.io.zout
  val Gp15 = Module(new Gp)
  Gp15.io.Epre := e(16)
  Gp15.io.Gcur := g(15)
  Gp15.io.Scur := s(15)
  Gp15.io.Snext := s(14)
  P(15) := Gp15.io.pout
  N(15) := Gp15.io.nout
  Z(15) := Gp15.io.zout
  val Gp16 = Module(new Gp)
  Gp16.io.Epre := e(17)
  Gp16.io.Gcur := g(16)
  Gp16.io.Scur := s(16)
  Gp16.io.Snext := s(15)
  P(16) := Gp16.io.pout
  N(16) := Gp16.io.nout
  Z(16) := Gp16.io.zout
  val Gp17 = Module(new Gp)
  Gp17.io.Epre := e(18)
  Gp17.io.Gcur := g(17)
  Gp17.io.Scur := s(17)
  Gp17.io.Snext := s(16)
  P(17) := Gp17.io.pout
  N(17) := Gp17.io.nout
  Z(17) := Gp17.io.zout
  val Gp18 = Module(new Gp)
  Gp18.io.Epre := e(19)
  Gp18.io.Gcur := g(18)
  Gp18.io.Scur := s(18)
  Gp18.io.Snext := s(17)
  P(18) := Gp18.io.pout
  N(18) := Gp18.io.nout
  Z(18) := Gp18.io.zout
  val Gp19 = Module(new Gp)
  Gp19.io.Epre := e(20)
  Gp19.io.Gcur := g(19)
  Gp19.io.Scur := s(19)
  Gp19.io.Snext := s(18)
  P(19) := Gp19.io.pout
  N(19) := Gp19.io.nout
  Z(19) := Gp19.io.zout
  val Gp20 = Module(new Gp)
  Gp20.io.Epre := e(21)
  Gp20.io.Gcur := g(20)
  Gp20.io.Scur := s(20)
  Gp20.io.Snext := s(19)
  P(20) := Gp20.io.pout
  N(20) := Gp20.io.nout
  Z(20) := Gp20.io.zout
  val Gp21 = Module(new Gp)
  Gp21.io.Epre := e(22)
  Gp21.io.Gcur := g(21)
  Gp21.io.Scur := s(21)
  Gp21.io.Snext := s(20)
  P(21) := Gp21.io.pout
  N(21) := Gp21.io.nout
  Z(21) := Gp21.io.zout
  val Gp22 = Module(new Gp)
  Gp22.io.Epre := e(23)
  Gp22.io.Gcur := g(22)
  Gp22.io.Scur := s(22)
  Gp22.io.Snext := s(21)
  P(22) := Gp22.io.pout
  N(22) := Gp22.io.nout
  Z(22) := Gp22.io.zout
  val Gp23 = Module(new Gp)
  Gp23.io.Epre := e(24)
  Gp23.io.Gcur := g(23)
  Gp23.io.Scur := s(23)
  Gp23.io.Snext := s(22)
  P(23) := Gp23.io.pout
  N(23) := Gp23.io.nout
  Z(23) := Gp23.io.zout
  val Gp24 = Module(new Gp)
  Gp24.io.Epre := e(25)
  Gp24.io.Gcur := g(24)
  Gp24.io.Scur := s(24)
  Gp24.io.Snext := s(23)
  P(24) := Gp24.io.pout
  N(24) := Gp24.io.nout
  Z(24) := Gp24.io.zout
  val Gp25 = Module(new Gp)
  Gp25.io.Epre := e(26)
  Gp25.io.Gcur := g(25)
  Gp25.io.Scur := s(25)
  Gp25.io.Snext := s(24)
  P(25) := Gp25.io.pout
  N(25) := Gp25.io.nout
  Z(25) := Gp25.io.zout
  val Gp26 = Module(new Gp)
  Gp26.io.Epre := e(27)
  Gp26.io.Gcur := g(26)
  Gp26.io.Scur := s(26)
  Gp26.io.Snext := s(25)
  P(26) := Gp26.io.pout
  N(26) := Gp26.io.nout
  Z(26) := Gp26.io.zout
  val Gp27 = Module(new Gp)
  Gp27.io.Epre := e(28)
  Gp27.io.Gcur := g(27)
  Gp27.io.Scur := s(27)
  Gp27.io.Snext := s(26)
  P(27) := Gp27.io.pout
  N(27) := Gp27.io.nout
  Z(27) := Gp27.io.zout
  val Gp28 = Module(new Gp)
  Gp28.io.Epre := e(29)
  Gp28.io.Gcur := g(28)
  Gp28.io.Scur := s(28)
  Gp28.io.Snext := s(27)
  P(28) := Gp28.io.pout
  N(28) := Gp28.io.nout
  Z(28) := Gp28.io.zout
  val Gp29 = Module(new Gp)
  Gp29.io.Epre := e(30)
  Gp29.io.Gcur := g(29)
  Gp29.io.Scur := s(29)
  Gp29.io.Snext := s(28)
  P(29) := Gp29.io.pout
  N(29) := Gp29.io.nout
  Z(29) := Gp29.io.zout
  val Gp30 = Module(new Gp)
  Gp30.io.Epre := e(31)
  Gp30.io.Gcur := g(30)
  Gp30.io.Scur := s(30)
  Gp30.io.Snext := s(29)
  P(30) := Gp30.io.pout
  N(30) := Gp30.io.nout
  Z(30) := Gp30.io.zout
  val Gp31 = Module(new Gp)
  Gp31.io.Epre := e(32)
  Gp31.io.Gcur := g(31)
  Gp31.io.Scur := s(31)
  Gp31.io.Snext := s(30)
  P(31) := Gp31.io.pout
  N(31) := Gp31.io.nout
  Z(31) := Gp31.io.zout
  val Gp32 = Module(new Gp)
  Gp32.io.Epre := e(33)
  Gp32.io.Gcur := g(32)
  Gp32.io.Scur := s(32)
  Gp32.io.Snext := s(31)
  P(32) := Gp32.io.pout
  N(32) := Gp32.io.nout
  Z(32) := Gp32.io.zout
  val Gp33 = Module(new Gp)
  Gp33.io.Epre := e(34)
  Gp33.io.Gcur := g(33)
  Gp33.io.Scur := s(33)
  Gp33.io.Snext := s(32)
  P(33) := Gp33.io.pout
  N(33) := Gp33.io.nout
  Z(33) := Gp33.io.zout
  val Gp34 = Module(new Gp)
  Gp34.io.Epre := e(35)
  Gp34.io.Gcur := g(34)
  Gp34.io.Scur := s(34)
  Gp34.io.Snext := s(33)
  P(34) := Gp34.io.pout
  N(34) := Gp34.io.nout
  Z(34) := Gp34.io.zout
  val Gp35 = Module(new Gp)
  Gp35.io.Epre := e(36)
  Gp35.io.Gcur := g(35)
  Gp35.io.Scur := s(35)
  Gp35.io.Snext := s(34)
  P(35) := Gp35.io.pout
  N(35) := Gp35.io.nout
  Z(35) := Gp35.io.zout
  val Gp36 = Module(new Gp)
  Gp36.io.Epre := e(37)
  Gp36.io.Gcur := g(36)
  Gp36.io.Scur := s(36)
  Gp36.io.Snext := s(35)
  P(36) := Gp36.io.pout
  N(36) := Gp36.io.nout
  Z(36) := Gp36.io.zout
  val Gp37 = Module(new Gp)
  Gp37.io.Epre := e(38)
  Gp37.io.Gcur := g(37)
  Gp37.io.Scur := s(37)
  Gp37.io.Snext := s(36)
  P(37) := Gp37.io.pout
  N(37) := Gp37.io.nout
  Z(37) := Gp37.io.zout
  val Gp38 = Module(new Gp)
  Gp38.io.Epre := e(39)
  Gp38.io.Gcur := g(38)
  Gp38.io.Scur := s(38)
  Gp38.io.Snext := s(37)
  P(38) := Gp38.io.pout
  N(38) := Gp38.io.nout
  Z(38) := Gp38.io.zout
  val Gp39 = Module(new Gp)
  Gp39.io.Epre := e(40)
  Gp39.io.Gcur := g(39)
  Gp39.io.Scur := s(39)
  Gp39.io.Snext := s(38)
  P(39) := Gp39.io.pout
  N(39) := Gp39.io.nout
  Z(39) := Gp39.io.zout
  val Gp40 = Module(new Gp)
  Gp40.io.Epre := e(41)
  Gp40.io.Gcur := g(40)
  Gp40.io.Scur := s(40)
  Gp40.io.Snext := s(39)
  P(40) := Gp40.io.pout
  N(40) := Gp40.io.nout
  Z(40) := Gp40.io.zout
  val Gp41 = Module(new Gp)
  Gp41.io.Epre := e(42)
  Gp41.io.Gcur := g(41)
  Gp41.io.Scur := s(41)
  Gp41.io.Snext := s(40)
  P(41) := Gp41.io.pout
  N(41) := Gp41.io.nout
  Z(41) := Gp41.io.zout
  val Gp42 = Module(new Gp)
  Gp42.io.Epre := e(43)
  Gp42.io.Gcur := g(42)
  Gp42.io.Scur := s(42)
  Gp42.io.Snext := s(41)
  P(42) := Gp42.io.pout
  N(42) := Gp42.io.nout
  Z(42) := Gp42.io.zout
  val Gp43 = Module(new Gp)
  Gp43.io.Epre := e(44)
  Gp43.io.Gcur := g(43)
  Gp43.io.Scur := s(43)
  Gp43.io.Snext := s(42)
  P(43) := Gp43.io.pout
  N(43) := Gp43.io.nout
  Z(43) := Gp43.io.zout
  val Gp44 = Module(new Gp)
  Gp44.io.Epre := e(46)
  Gp44.io.Gcur := g(44)
  Gp44.io.Scur := s(44)
  Gp44.io.Snext := s(43)
  P(44) := Gp44.io.pout
  N(44) := Gp44.io.nout
  Z(44) := Gp44.io.zout
  val Gp45 = Module(new Gp)
  Gp45.io.Epre := e(46)
  Gp45.io.Gcur := g(45)
  Gp45.io.Scur := s(45)
  Gp45.io.Snext := s(44)
  P(45) := Gp45.io.pout
  N(45) := Gp45.io.nout
  Z(45) := Gp45.io.zout
  val Gp46 = Module(new Gp)
  Gp46.io.Epre := e(47)
  Gp46.io.Gcur := g(46)
  Gp46.io.Scur := s(46)
  Gp46.io.Snext := s(45)
  P(46) := Gp46.io.pout
  N(46) := Gp46.io.nout
  Z(46) := Gp46.io.zout
  val Gp47 = Module(new Gp)
  Gp47.io.Epre := 1.U
  Gp47.io.Gcur := g(47)
  Gp47.io.Scur := s(47)
  Gp47.io.Snext := s(46)
  P(47) := Gp47.io.pout
  N(47) := Gp47.io.nout
  Z(47) := Gp47.io.zout
}

class Gn extends Module {
  val io = IO(new Bundle {
    val Epre = Input(UInt(1.W))
    val Gcur = Input(UInt(1.W))
    val Scur = Input(UInt(1.W))
    val Gnext = Input(UInt(1.W))
    val pout = Output(UInt(1.W))
    val nout = Output(UInt(1.W))
    val zout = Output(UInt(1.W))
  })
  val n = Wire(UInt(1.W))
  n := io.Epre & io.Gcur
  io.nout := n
  /*
    val p = Wire(UInt(1.W))
    p := !io.Gnext & ((!io.Epre & io.Gcur) | io.Scur)
    io.pout := p
    io.zout := !(p | n)
     */

  //// Tao's method ////
  io.pout := io.Scur
  io.zout := !(io.Scur | n)
  //// Tao's method ////
}
/*
class Gn48 extends Module {
  val io = IO(new Bundle {
    val Gin = Input(Vec(48, UInt(1.W)))
    val Ein = Input(Vec(48, UInt(1.W)))
    val Sin = Input(Vec(48, UInt(1.W)))
    val Pout = Output(Vec(48, UInt(1.W)))
    val Nout = Output(Vec(48, UInt(1.W)))
    val Zout = Output(Vec(48, UInt(1.W)))
  })
  val g = Wire(Vec(48, UInt(1.W)))
  val e = Wire(Vec(48, UInt(1.W)))
  val s = Wire(Vec(48, UInt(1.W)))
  val P = Wire(Vec(48, UInt(1.W)))
  val N = Wire(Vec(48, UInt(1.W)))
  val Z = Wire(Vec(48, UInt(1.W)))

  g := io.Gin
  e := io.Ein
  s := io.Sin
  io.Pout := P
  io.Nout := N
  io.Zout := Z

  val Gn0 = Module(new Gn)
  Gn0.io.Epre := 0.U
  Gn0.io.Gcur := g(0)
  Gn0.io.Scur := s(0)
  Gn0.io.Gnext := g(1)
  P(0) := Gn0.io.pout
  N(0) := Gn0.io.nout
  Z(0) := Gn0.io.zout
  val Gn1 = Module(new Gn)
  Gn1.io.Epre := e(0)
  Gn1.io.Gcur := g(1)
  Gn1.io.Scur := s(1)
  Gn1.io.Gnext := g(2)
  P(1) := Gn1.io.pout
  N(1) := Gn1.io.nout
  Z(1) := Gn1.io.zout
  val Gn2 = Module(new Gn)
  Gn2.io.Epre := e(1)
  Gn2.io.Gcur := g(2)
  Gn2.io.Scur := s(2)
  Gn2.io.Gnext := g(3)
  P(2) := Gn2.io.pout
  N(2) := Gn2.io.nout
  Z(2) := Gn2.io.zout
  val Gn3 = Module(new Gn)
  Gn3.io.Epre := e(2)
  Gn3.io.Gcur := g(3)
  Gn3.io.Scur := s(3)
  Gn3.io.Gnext := g(4)
  P(3) := Gn3.io.pout
  N(3) := Gn3.io.nout
  Z(3) := Gn3.io.zout
  val Gn4 = Module(new Gn)
  Gn4.io.Epre := e(3)
  Gn4.io.Gcur := g(4)
  Gn4.io.Scur := s(4)
  Gn4.io.Gnext := g(5)
  P(4) := Gn4.io.pout
  N(4) := Gn4.io.nout
  Z(4) := Gn4.io.zout
  val Gn5 = Module(new Gn)
  Gn5.io.Epre := e(4)
  Gn5.io.Gcur := g(5)
  Gn5.io.Scur := s(5)
  Gn5.io.Gnext := g(6)
  P(5) := Gn5.io.pout
  N(5) := Gn5.io.nout
  Z(5) := Gn5.io.zout
  val Gn6 = Module(new Gn)
  Gn6.io.Epre := e(5)
  Gn6.io.Gcur := g(6)
  Gn6.io.Scur := s(6)
  Gn6.io.Gnext := g(7)
  P(6) := Gn6.io.pout
  N(6) := Gn6.io.nout
  Z(6) := Gn6.io.zout
  val Gn7 = Module(new Gn)
  Gn7.io.Epre := e(6)
  Gn7.io.Gcur := g(7)
  Gn7.io.Scur := s(7)
  Gn7.io.Gnext := g(8)
  P(7) := Gn7.io.pout
  N(7) := Gn7.io.nout
  Z(7) := Gn7.io.zout
  val Gn8 = Module(new Gn)
  Gn8.io.Epre := e(7)
  Gn8.io.Gcur := g(8)
  Gn8.io.Scur := s(8)
  Gn8.io.Gnext := g(9)
  P(8) := Gn8.io.pout
  N(8) := Gn8.io.nout
  Z(8) := Gn8.io.zout
  val Gn9 = Module(new Gn)
  Gn9.io.Epre := e(8)
  Gn9.io.Gcur := g(9)
  Gn9.io.Scur := s(9)
  Gn9.io.Gnext := g(10)
  P(9) := Gn9.io.pout
  N(9) := Gn9.io.nout
  Z(9) := Gn9.io.zout
  val Gn10 = Module(new Gn)
  Gn10.io.Epre := e(9)
  Gn10.io.Gcur := g(10)
  Gn10.io.Scur := s(10)
  Gn10.io.Gnext := g(11)
  P(10) := Gn10.io.pout
  N(10) := Gn10.io.nout
  Z(10) := Gn10.io.zout
  val Gn11 = Module(new Gn)
  Gn11.io.Epre := e(10)
  Gn11.io.Gcur := g(11)
  Gn11.io.Scur := s(11)
  Gn11.io.Gnext := g(12)
  P(11) := Gn11.io.pout
  N(11) := Gn11.io.nout
  Z(11) := Gn11.io.zout
  val Gn12 = Module(new Gn)
  Gn12.io.Epre := e(11)
  Gn12.io.Gcur := g(12)
  Gn12.io.Scur := s(12)
  Gn12.io.Gnext := g(13)
  P(12) := Gn12.io.pout
  N(12) := Gn12.io.nout
  Z(12) := Gn12.io.zout
  val Gn13 = Module(new Gn)
  Gn13.io.Epre := e(12)
  Gn13.io.Gcur := g(13)
  Gn13.io.Scur := s(13)
  Gn13.io.Gnext := g(14)
  P(13) := Gn13.io.pout
  N(13) := Gn13.io.nout
  Z(13) := Gn13.io.zout
  val Gn14 = Module(new Gn)
  Gn14.io.Epre := e(13)
  Gn14.io.Gcur := g(14)
  Gn14.io.Scur := s(14)
  Gn14.io.Gnext := g(15)
  P(14) := Gn14.io.pout
  N(14) := Gn14.io.nout
  Z(14) := Gn14.io.zout
  val Gn15 = Module(new Gn)
  Gn15.io.Epre := e(14)
  Gn15.io.Gcur := g(15)
  Gn15.io.Scur := s(15)
  Gn15.io.Gnext := g(16)
  P(15) := Gn15.io.pout
  N(15) := Gn15.io.nout
  Z(15) := Gn15.io.zout
  val Gn16 = Module(new Gn)
  Gn16.io.Epre := e(15)
  Gn16.io.Gcur := g(16)
  Gn16.io.Scur := s(16)
  Gn16.io.Gnext := g(17)
  P(16) := Gn16.io.pout
  N(16) := Gn16.io.nout
  Z(16) := Gn16.io.zout
  val Gn17 = Module(new Gn)
  Gn17.io.Epre := e(16)
  Gn17.io.Gcur := g(17)
  Gn17.io.Scur := s(17)
  Gn17.io.Gnext := g(18)
  P(17) := Gn17.io.pout
  N(17) := Gn17.io.nout
  Z(17) := Gn17.io.zout
  val Gn18 = Module(new Gn)
  Gn18.io.Epre := e(17)
  Gn18.io.Gcur := g(18)
  Gn18.io.Scur := s(18)
  Gn18.io.Gnext := g(19)
  P(18) := Gn18.io.pout
  N(18) := Gn18.io.nout
  Z(18) := Gn18.io.zout
  val Gn19 = Module(new Gn)
  Gn19.io.Epre := e(18)
  Gn19.io.Gcur := g(19)
  Gn19.io.Scur := s(19)
  Gn19.io.Gnext := g(20)
  P(19) := Gn19.io.pout
  N(19) := Gn19.io.nout
  Z(19) := Gn19.io.zout
  val Gn20 = Module(new Gn)
  Gn20.io.Epre := e(19)
  Gn20.io.Gcur := g(20)
  Gn20.io.Scur := s(20)
  Gn20.io.Gnext := g(21)
  P(20) := Gn20.io.pout
  N(20) := Gn20.io.nout
  Z(20) := Gn20.io.zout
  val Gn21 = Module(new Gn)
  Gn21.io.Epre := e(20)
  Gn21.io.Gcur := g(21)
  Gn21.io.Scur := s(21)
  Gn21.io.Gnext := g(22)
  P(21) := Gn21.io.pout
  N(21) := Gn21.io.nout
  Z(21) := Gn21.io.zout
  val Gn22 = Module(new Gn)
  Gn22.io.Epre := e(21)
  Gn22.io.Gcur := g(22)
  Gn22.io.Scur := s(22)
  Gn22.io.Gnext := g(23)
  P(22) := Gn22.io.pout
  N(22) := Gn22.io.nout
  Z(22) := Gn22.io.zout
  val Gn23 = Module(new Gn)
  Gn23.io.Epre := e(22)
  Gn23.io.Gcur := g(23)
  Gn23.io.Scur := s(23)
  Gn23.io.Gnext := g(24)
  P(23) := Gn23.io.pout
  N(23) := Gn23.io.nout
  Z(23) := Gn23.io.zout
  val Gn24 = Module(new Gn)
  Gn24.io.Epre := e(23)
  Gn24.io.Gcur := g(24)
  Gn24.io.Scur := s(24)
  Gn24.io.Gnext := g(25)
  P(24) := Gn24.io.pout
  N(24) := Gn24.io.nout
  Z(24) := Gn24.io.zout
  val Gn25 = Module(new Gn)
  Gn25.io.Epre := e(24)
  Gn25.io.Gcur := g(25)
  Gn25.io.Scur := s(25)
  Gn25.io.Gnext := g(26)
  P(25) := Gn25.io.pout
  N(25) := Gn25.io.nout
  Z(25) := Gn25.io.zout
  val Gn26 = Module(new Gn)
  Gn26.io.Epre := e(25)
  Gn26.io.Gcur := g(26)
  Gn26.io.Scur := s(26)
  Gn26.io.Gnext := g(27)
  P(26) := Gn26.io.pout
  N(26) := Gn26.io.nout
  Z(26) := Gn26.io.zout
  val Gn27 = Module(new Gn)
  Gn27.io.Epre := e(26)
  Gn27.io.Gcur := g(27)
  Gn27.io.Scur := s(27)
  Gn27.io.Gnext := g(28)
  P(27) := Gn27.io.pout
  N(27) := Gn27.io.nout
  Z(27) := Gn27.io.zout
  val Gn28 = Module(new Gn)
  Gn28.io.Epre := e(27)
  Gn28.io.Gcur := g(28)
  Gn28.io.Scur := s(28)
  Gn28.io.Gnext := g(29)
  P(28) := Gn28.io.pout
  N(28) := Gn28.io.nout
  Z(28) := Gn28.io.zout
  val Gn29 = Module(new Gn)
  Gn29.io.Epre := e(28)
  Gn29.io.Gcur := g(29)
  Gn29.io.Scur := s(29)
  Gn29.io.Gnext := g(30)
  P(29) := Gn29.io.pout
  N(29) := Gn29.io.nout
  Z(29) := Gn29.io.zout
  val Gn30 = Module(new Gn)
  Gn30.io.Epre := e(29)
  Gn30.io.Gcur := g(30)
  Gn30.io.Scur := s(30)
  Gn30.io.Gnext := g(31)
  P(30) := Gn30.io.pout
  N(30) := Gn30.io.nout
  Z(30) := Gn30.io.zout
  val Gn31 = Module(new Gn)
  Gn31.io.Epre := e(30)
  Gn31.io.Gcur := g(31)
  Gn31.io.Scur := s(31)
  Gn31.io.Gnext := g(32)
  P(31) := Gn31.io.pout
  N(31) := Gn31.io.nout
  Z(31) := Gn31.io.zout
  val Gn32 = Module(new Gn)
  Gn32.io.Epre := e(31)
  Gn32.io.Gcur := g(32)
  Gn32.io.Scur := s(32)
  Gn32.io.Gnext := g(33)
  P(32) := Gn32.io.pout
  N(32) := Gn32.io.nout
  Z(32) := Gn32.io.zout
  val Gn33 = Module(new Gn)
  Gn33.io.Epre := e(32)
  Gn33.io.Gcur := g(33)
  Gn33.io.Scur := s(33)
  Gn33.io.Gnext := g(34)
  P(33) := Gn33.io.pout
  N(33) := Gn33.io.nout
  Z(33) := Gn33.io.zout
  val Gn34 = Module(new Gn)
  Gn34.io.Epre := e(33)
  Gn34.io.Gcur := g(34)
  Gn34.io.Scur := s(34)
  Gn34.io.Gnext := g(35)
  P(34) := Gn34.io.pout
  N(34) := Gn34.io.nout
  Z(34) := Gn34.io.zout
  val Gn35 = Module(new Gn)
  Gn35.io.Epre := e(34)
  Gn35.io.Gcur := g(35)
  Gn35.io.Scur := s(35)
  Gn35.io.Gnext := g(36)
  P(35) := Gn35.io.pout
  N(35) := Gn35.io.nout
  Z(35) := Gn35.io.zout
  val Gn36 = Module(new Gn)
  Gn36.io.Epre := e(35)
  Gn36.io.Gcur := g(36)
  Gn36.io.Scur := s(36)
  Gn36.io.Gnext := g(37)
  P(36) := Gn36.io.pout
  N(36) := Gn36.io.nout
  Z(36) := Gn36.io.zout
  val Gn37 = Module(new Gn)
  Gn37.io.Epre := e(36)
  Gn37.io.Gcur := g(37)
  Gn37.io.Scur := s(37)
  Gn37.io.Gnext := g(38)
  P(37) := Gn37.io.pout
  N(37) := Gn37.io.nout
  Z(37) := Gn37.io.zout
  val Gn38 = Module(new Gn)
  Gn38.io.Epre := e(37)
  Gn38.io.Gcur := g(38)
  Gn38.io.Scur := s(38)
  Gn38.io.Gnext := g(39)
  P(38) := Gn38.io.pout
  N(38) := Gn38.io.nout
  Z(38) := Gn38.io.zout
  val Gn39 = Module(new Gn)
  Gn39.io.Epre := e(38)
  Gn39.io.Gcur := g(39)
  Gn39.io.Scur := s(39)
  Gn39.io.Gnext := g(40)
  P(39) := Gn39.io.pout
  N(39) := Gn39.io.nout
  Z(39) := Gn39.io.zout
  val Gn40 = Module(new Gn)
  Gn40.io.Epre := e(39)
  Gn40.io.Gcur := g(40)
  Gn40.io.Scur := s(40)
  Gn40.io.Gnext := g(41)
  P(40) := Gn40.io.pout
  N(40) := Gn40.io.nout
  Z(40) := Gn40.io.zout
  val Gn41 = Module(new Gn)
  Gn41.io.Epre := e(40)
  Gn41.io.Gcur := g(41)
  Gn41.io.Scur := s(41)
  Gn41.io.Gnext := g(42)
  P(41) := Gn41.io.pout
  N(41) := Gn41.io.nout
  Z(41) := Gn41.io.zout
  val Gn42 = Module(new Gn)
  Gn42.io.Epre := e(41)
  Gn42.io.Gcur := g(42)
  Gn42.io.Scur := s(42)
  Gn42.io.Gnext := g(43)
  P(42) := Gn42.io.pout
  N(42) := Gn42.io.nout
  Z(42) := Gn42.io.zout
  val Gn43 = Module(new Gn)
  Gn43.io.Epre := e(42)
  Gn43.io.Gcur := g(43)
  Gn43.io.Scur := s(43)
  Gn43.io.Gnext := g(44)
  P(43) := Gn43.io.pout
  N(43) := Gn43.io.nout
  Z(43) := Gn43.io.zout
  val Gn44 = Module(new Gn)
  Gn44.io.Epre := e(44)
  Gn44.io.Gcur := g(44)
  Gn44.io.Scur := s(44)
  Gn44.io.Gnext := g(45)
  P(44) := Gn44.io.pout
  N(44) := Gn44.io.nout
  Z(44) := Gn44.io.zout
  val Gn45 = Module(new Gn)
  Gn45.io.Epre := e(44)
  Gn45.io.Gcur := g(45)
  Gn45.io.Scur := s(45)
  Gn45.io.Gnext := g(46)
  P(45) := Gn45.io.pout
  N(45) := Gn45.io.nout
  Z(45) := Gn45.io.zout
  val Gn46 = Module(new Gn)
  Gn46.io.Epre := e(45)
  Gn46.io.Gcur := g(46)
  Gn46.io.Scur := s(46)
  Gn46.io.Gnext := g(47)
  P(46) := Gn46.io.pout
  N(46) := Gn46.io.nout
  Z(46) := Gn46.io.zout
  val Gn47 = Module(new Gn)
  Gn47.io.Epre := e(46)
  Gn47.io.Gcur := g(47)
  Gn47.io.Scur := s(47)
  Gn47.io.Gnext := 0.U
  P(47) := Gn47.io.pout
  N(47) := Gn47.io.nout
  Z(47) := Gn47.io.zout
}
*/
class Gn48 extends Module {
  val io = IO(new Bundle {
    val Gin = Input(Vec(48, UInt(1.W)))
    val Ein = Input(Vec(48, UInt(1.W)))
    val Sin = Input(Vec(48, UInt(1.W)))
    val Pout = Output(Vec(48, UInt(1.W)))
    val Nout = Output(Vec(48, UInt(1.W)))
    val Zout = Output(Vec(48, UInt(1.W)))
  })
  val g = Wire(Vec(48, UInt(1.W)))
  val e = Wire(Vec(48, UInt(1.W)))
  val s = Wire(Vec(48, UInt(1.W)))
  val P = Wire(Vec(48, UInt(1.W)))
  val N = Wire(Vec(48, UInt(1.W)))
  val Z = Wire(Vec(48, UInt(1.W)))

  g := io.Gin
  e := io.Ein
  s := io.Sin
  io.Pout := P
  io.Nout := N
  io.Zout := Z

  val Gn0 = Module(new Gn)
  Gn0.io.Epre := e(1)
  Gn0.io.Gcur := g(0)
  Gn0.io.Scur := s(0)
  Gn0.io.Gnext := 0.U
  P(0) := Gn0.io.pout
  N(0) := Gn0.io.nout
  Z(0) := Gn0.io.zout
  val Gn1 = Module(new Gn)
  Gn1.io.Epre := e(2)
  Gn1.io.Gcur := g(1)
  Gn1.io.Scur := s(1)
  Gn1.io.Gnext := g(0)
  P(1) := Gn1.io.pout
  N(1) := Gn1.io.nout
  Z(1) := Gn1.io.zout
  val Gn2 = Module(new Gn)
  Gn2.io.Epre := e(3)
  Gn2.io.Gcur := g(2)
  Gn2.io.Scur := s(2)
  Gn2.io.Gnext := g(1)
  P(2) := Gn2.io.pout
  N(2) := Gn2.io.nout
  Z(2) := Gn2.io.zout
  val Gn3 = Module(new Gn)
  Gn3.io.Epre := e(4)
  Gn3.io.Gcur := g(3)
  Gn3.io.Scur := s(3)
  Gn3.io.Gnext := g(2)
  P(3) := Gn3.io.pout
  N(3) := Gn3.io.nout
  Z(3) := Gn3.io.zout
  val Gn4 = Module(new Gn)
  Gn4.io.Epre := e(5)
  Gn4.io.Gcur := g(4)
  Gn4.io.Scur := s(4)
  Gn4.io.Gnext := g(3)
  P(4) := Gn4.io.pout
  N(4) := Gn4.io.nout
  Z(4) := Gn4.io.zout
  val Gn5 = Module(new Gn)
  Gn5.io.Epre := e(6)
  Gn5.io.Gcur := g(5)
  Gn5.io.Scur := s(5)
  Gn5.io.Gnext := g(4)
  P(5) := Gn5.io.pout
  N(5) := Gn5.io.nout
  Z(5) := Gn5.io.zout
  val Gn6 = Module(new Gn)
  Gn6.io.Epre := e(7)
  Gn6.io.Gcur := g(6)
  Gn6.io.Scur := s(6)
  Gn6.io.Gnext := g(5)
  P(6) := Gn6.io.pout
  N(6) := Gn6.io.nout
  Z(6) := Gn6.io.zout
  val Gn7 = Module(new Gn)
  Gn7.io.Epre := e(8)
  Gn7.io.Gcur := g(7)
  Gn7.io.Scur := s(7)
  Gn7.io.Gnext := g(6)
  P(7) := Gn7.io.pout
  N(7) := Gn7.io.nout
  Z(7) := Gn7.io.zout
  val Gn8 = Module(new Gn)
  Gn8.io.Epre := e(9)
  Gn8.io.Gcur := g(8)
  Gn8.io.Scur := s(8)
  Gn8.io.Gnext := g(7)
  P(8) := Gn8.io.pout
  N(8) := Gn8.io.nout
  Z(8) := Gn8.io.zout
  val Gn9 = Module(new Gn)
  Gn9.io.Epre := e(10)
  Gn9.io.Gcur := g(9)
  Gn9.io.Scur := s(9)
  Gn9.io.Gnext := g(8)
  P(9) := Gn9.io.pout
  N(9) := Gn9.io.nout
  Z(9) := Gn9.io.zout
  val Gn10 = Module(new Gn)
  Gn10.io.Epre := e(11)
  Gn10.io.Gcur := g(10)
  Gn10.io.Scur := s(10)
  Gn10.io.Gnext := g(9)
  P(10) := Gn10.io.pout
  N(10) := Gn10.io.nout
  Z(10) := Gn10.io.zout
  val Gn11 = Module(new Gn)
  Gn11.io.Epre := e(12)
  Gn11.io.Gcur := g(11)
  Gn11.io.Scur := s(11)
  Gn11.io.Gnext := g(10)
  P(11) := Gn11.io.pout
  N(11) := Gn11.io.nout
  Z(11) := Gn11.io.zout
  val Gn12 = Module(new Gn)
  Gn12.io.Epre := e(13)
  Gn12.io.Gcur := g(12)
  Gn12.io.Scur := s(12)
  Gn12.io.Gnext := g(11)
  P(12) := Gn12.io.pout
  N(12) := Gn12.io.nout
  Z(12) := Gn12.io.zout
  val Gn13 = Module(new Gn)
  Gn13.io.Epre := e(14)
  Gn13.io.Gcur := g(13)
  Gn13.io.Scur := s(13)
  Gn13.io.Gnext := g(12)
  P(13) := Gn13.io.pout
  N(13) := Gn13.io.nout
  Z(13) := Gn13.io.zout
  val Gn14 = Module(new Gn)
  Gn14.io.Epre := e(15)
  Gn14.io.Gcur := g(14)
  Gn14.io.Scur := s(14)
  Gn14.io.Gnext := g(13)
  P(14) := Gn14.io.pout
  N(14) := Gn14.io.nout
  Z(14) := Gn14.io.zout
  val Gn15 = Module(new Gn)
  Gn15.io.Epre := e(16)
  Gn15.io.Gcur := g(15)
  Gn15.io.Scur := s(15)
  Gn15.io.Gnext := g(14)
  P(15) := Gn15.io.pout
  N(15) := Gn15.io.nout
  Z(15) := Gn15.io.zout
  val Gn16 = Module(new Gn)
  Gn16.io.Epre := e(17)
  Gn16.io.Gcur := g(16)
  Gn16.io.Scur := s(16)
  Gn16.io.Gnext := g(15)
  P(16) := Gn16.io.pout
  N(16) := Gn16.io.nout
  Z(16) := Gn16.io.zout
  val Gn17 = Module(new Gn)
  Gn17.io.Epre := e(18)
  Gn17.io.Gcur := g(17)
  Gn17.io.Scur := s(17)
  Gn17.io.Gnext := g(16)
  P(17) := Gn17.io.pout
  N(17) := Gn17.io.nout
  Z(17) := Gn17.io.zout
  val Gn18 = Module(new Gn)
  Gn18.io.Epre := e(19)
  Gn18.io.Gcur := g(18)
  Gn18.io.Scur := s(18)
  Gn18.io.Gnext := g(17)
  P(18) := Gn18.io.pout
  N(18) := Gn18.io.nout
  Z(18) := Gn18.io.zout
  val Gn19 = Module(new Gn)
  Gn19.io.Epre := e(20)
  Gn19.io.Gcur := g(19)
  Gn19.io.Scur := s(19)
  Gn19.io.Gnext := g(18)
  P(19) := Gn19.io.pout
  N(19) := Gn19.io.nout
  Z(19) := Gn19.io.zout
  val Gn20 = Module(new Gn)
  Gn20.io.Epre := e(21)
  Gn20.io.Gcur := g(20)
  Gn20.io.Scur := s(20)
  Gn20.io.Gnext := g(19)
  P(20) := Gn20.io.pout
  N(20) := Gn20.io.nout
  Z(20) := Gn20.io.zout
  val Gn21 = Module(new Gn)
  Gn21.io.Epre := e(22)
  Gn21.io.Gcur := g(21)
  Gn21.io.Scur := s(21)
  Gn21.io.Gnext := g(20)
  P(21) := Gn21.io.pout
  N(21) := Gn21.io.nout
  Z(21) := Gn21.io.zout
  val Gn22 = Module(new Gn)
  Gn22.io.Epre := e(23)
  Gn22.io.Gcur := g(22)
  Gn22.io.Scur := s(22)
  Gn22.io.Gnext := g(21)
  P(22) := Gn22.io.pout
  N(22) := Gn22.io.nout
  Z(22) := Gn22.io.zout
  val Gn23 = Module(new Gn)
  Gn23.io.Epre := e(24)
  Gn23.io.Gcur := g(23)
  Gn23.io.Scur := s(23)
  Gn23.io.Gnext := g(22)
  P(23) := Gn23.io.pout
  N(23) := Gn23.io.nout
  Z(23) := Gn23.io.zout
  val Gn24 = Module(new Gn)
  Gn24.io.Epre := e(25)
  Gn24.io.Gcur := g(24)
  Gn24.io.Scur := s(24)
  Gn24.io.Gnext := g(23)
  P(24) := Gn24.io.pout
  N(24) := Gn24.io.nout
  Z(24) := Gn24.io.zout
  val Gn25 = Module(new Gn)
  Gn25.io.Epre := e(26)
  Gn25.io.Gcur := g(25)
  Gn25.io.Scur := s(25)
  Gn25.io.Gnext := g(24)
  P(25) := Gn25.io.pout
  N(25) := Gn25.io.nout
  Z(25) := Gn25.io.zout
  val Gn26 = Module(new Gn)
  Gn26.io.Epre := e(27)
  Gn26.io.Gcur := g(26)
  Gn26.io.Scur := s(26)
  Gn26.io.Gnext := g(25)
  P(26) := Gn26.io.pout
  N(26) := Gn26.io.nout
  Z(26) := Gn26.io.zout
  val Gn27 = Module(new Gn)
  Gn27.io.Epre := e(28)
  Gn27.io.Gcur := g(27)
  Gn27.io.Scur := s(27)
  Gn27.io.Gnext := g(26)
  P(27) := Gn27.io.pout
  N(27) := Gn27.io.nout
  Z(27) := Gn27.io.zout
  val Gn28 = Module(new Gn)
  Gn28.io.Epre := e(29)
  Gn28.io.Gcur := g(28)
  Gn28.io.Scur := s(28)
  Gn28.io.Gnext := g(27)
  P(28) := Gn28.io.pout
  N(28) := Gn28.io.nout
  Z(28) := Gn28.io.zout
  val Gn29 = Module(new Gn)
  Gn29.io.Epre := e(30)
  Gn29.io.Gcur := g(29)
  Gn29.io.Scur := s(29)
  Gn29.io.Gnext := g(28)
  P(29) := Gn29.io.pout
  N(29) := Gn29.io.nout
  Z(29) := Gn29.io.zout
  val Gn30 = Module(new Gn)
  Gn30.io.Epre := e(31)
  Gn30.io.Gcur := g(30)
  Gn30.io.Scur := s(30)
  Gn30.io.Gnext := g(29)
  P(30) := Gn30.io.pout
  N(30) := Gn30.io.nout
  Z(30) := Gn30.io.zout
  val Gn31 = Module(new Gn)
  Gn31.io.Epre := e(32)
  Gn31.io.Gcur := g(31)
  Gn31.io.Scur := s(31)
  Gn31.io.Gnext := g(30)
  P(31) := Gn31.io.pout
  N(31) := Gn31.io.nout
  Z(31) := Gn31.io.zout
  val Gn32 = Module(new Gn)
  Gn32.io.Epre := e(33)
  Gn32.io.Gcur := g(32)
  Gn32.io.Scur := s(32)
  Gn32.io.Gnext := g(31)
  P(32) := Gn32.io.pout
  N(32) := Gn32.io.nout
  Z(32) := Gn32.io.zout
  val Gn33 = Module(new Gn)
  Gn33.io.Epre := e(34)
  Gn33.io.Gcur := g(33)
  Gn33.io.Scur := s(33)
  Gn33.io.Gnext := g(32)
  P(33) := Gn33.io.pout
  N(33) := Gn33.io.nout
  Z(33) := Gn33.io.zout
  val Gn34 = Module(new Gn)
  Gn34.io.Epre := e(35)
  Gn34.io.Gcur := g(34)
  Gn34.io.Scur := s(34)
  Gn34.io.Gnext := g(33)
  P(34) := Gn34.io.pout
  N(34) := Gn34.io.nout
  Z(34) := Gn34.io.zout
  val Gn35 = Module(new Gn)
  Gn35.io.Epre := e(36)
  Gn35.io.Gcur := g(35)
  Gn35.io.Scur := s(35)
  Gn35.io.Gnext := g(34)
  P(35) := Gn35.io.pout
  N(35) := Gn35.io.nout
  Z(35) := Gn35.io.zout
  val Gn36 = Module(new Gn)
  Gn36.io.Epre := e(37)
  Gn36.io.Gcur := g(36)
  Gn36.io.Scur := s(36)
  Gn36.io.Gnext := g(35)
  P(36) := Gn36.io.pout
  N(36) := Gn36.io.nout
  Z(36) := Gn36.io.zout
  val Gn37 = Module(new Gn)
  Gn37.io.Epre := e(38)
  Gn37.io.Gcur := g(37)
  Gn37.io.Scur := s(37)
  Gn37.io.Gnext := g(36)
  P(37) := Gn37.io.pout
  N(37) := Gn37.io.nout
  Z(37) := Gn37.io.zout
  val Gn38 = Module(new Gn)
  Gn38.io.Epre := e(39)
  Gn38.io.Gcur := g(38)
  Gn38.io.Scur := s(38)
  Gn38.io.Gnext := g(37)
  P(38) := Gn38.io.pout
  N(38) := Gn38.io.nout
  Z(38) := Gn38.io.zout
  val Gn39 = Module(new Gn)
  Gn39.io.Epre := e(40)
  Gn39.io.Gcur := g(39)
  Gn39.io.Scur := s(39)
  Gn39.io.Gnext := g(38)
  P(39) := Gn39.io.pout
  N(39) := Gn39.io.nout
  Z(39) := Gn39.io.zout
  val Gn40 = Module(new Gn)
  Gn40.io.Epre := e(41)
  Gn40.io.Gcur := g(40)
  Gn40.io.Scur := s(40)
  Gn40.io.Gnext := g(39)
  P(40) := Gn40.io.pout
  N(40) := Gn40.io.nout
  Z(40) := Gn40.io.zout
  val Gn41 = Module(new Gn)
  Gn41.io.Epre := e(42)
  Gn41.io.Gcur := g(41)
  Gn41.io.Scur := s(41)
  Gn41.io.Gnext := g(40)
  P(41) := Gn41.io.pout
  N(41) := Gn41.io.nout
  Z(41) := Gn41.io.zout
  val Gn42 = Module(new Gn)
  Gn42.io.Epre := e(43)
  Gn42.io.Gcur := g(42)
  Gn42.io.Scur := s(42)
  Gn42.io.Gnext := g(41)
  P(42) := Gn42.io.pout
  N(42) := Gn42.io.nout
  Z(42) := Gn42.io.zout
  val Gn43 = Module(new Gn)
  Gn43.io.Epre := e(44)
  Gn43.io.Gcur := g(43)
  Gn43.io.Scur := s(43)
  Gn43.io.Gnext := g(42)
  P(43) := Gn43.io.pout
  N(43) := Gn43.io.nout
  Z(43) := Gn43.io.zout
  val Gn44 = Module(new Gn)
  Gn44.io.Epre := e(45)
  Gn44.io.Gcur := g(44)
  Gn44.io.Scur := s(44)
  Gn44.io.Gnext := g(43)
  P(44) := Gn44.io.pout
  N(44) := Gn44.io.nout
  Z(44) := Gn44.io.zout
  val Gn45 = Module(new Gn)
  Gn45.io.Epre := e(46)
  Gn45.io.Gcur := g(45)
  Gn45.io.Scur := s(45)
  Gn45.io.Gnext := g(44)
  P(45) := Gn45.io.pout
  N(45) := Gn45.io.nout
  Z(45) := Gn45.io.zout
  val Gn46 = Module(new Gn)
  Gn46.io.Epre := e(47)
  Gn46.io.Gcur := g(46)
  Gn46.io.Scur := s(46)
  Gn46.io.Gnext := g(45)
  P(46) := Gn46.io.pout
  N(46) := Gn46.io.nout
  Z(46) := Gn46.io.zout
  val Gn47 = Module(new Gn)
  Gn47.io.Epre := 0.U
  Gn47.io.Gcur := g(47)
  Gn47.io.Scur := s(47)
  Gn47.io.Gnext := g(46)
  P(47) := Gn47.io.pout
  N(47) := Gn47.io.nout
  Z(47) := Gn47.io.zout
}

class PositiveDetectionTree extends Module {
  val io = IO(new Bundle {
    val Pin = Input(UInt(2.W))
    val Nin = Input(UInt(2.W))
    val Zin = Input(UInt(2.W))
    val Yin = Input(UInt(2.W))
    val Pout = Output(UInt(1.W))
    val Nout = Output(UInt(1.W))
    val Zout = Output(UInt(1.W))
    val Yout = Output(UInt(1.W))

    /*
    val Pin = Input(Vec(2, UInt(1.W)))
    val Nin = Input(Vec(2, UInt(1.W)))
    val Zin = Input(Vec(2, UInt(1.W)))
    val Yin = Input(Vec(2, UInt(1.W)))
    val Pout = Output(Vec(1, UInt(1.W)))
    val Nout = Output(Vec(1, UInt(1.W)))
    val Zout = Output(Vec(1, UInt(1.W)))
    val Yout = Output(Vec(1, UInt(1.W)))
         */
  })
  //io.Fout := (io.Epre & ((io.Gcur & !io.Snext) | (io.Scur & !io.Gnext))) | (!io.Epre & ((io.Scur & !io.Snext) | (io.Gcur & !io.Gnext)))
  io.Zout := io.Zin(1) & io.Zin(0)
  io.Pout := (io.Zin(1) & io.Pin(0)) | (io.Pin(1) & io.Zin(0))
  io.Nout := io.Nin(1) | (io.Zin(1) & io.Nin(0))
  io.Yout := io.Yin(1) | (io.Zin(1) & io.Yin(0)) | (io.Pin(1) & io.Nin(0))
}

class PositiveDetectionTree0 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(48, UInt(1.W)))
    val Nin = Input(Vec(48, UInt(1.W)))
    val Zin = Input(Vec(48, UInt(1.W)))
    // val Yin = Input(Vec(48, UInt(1.W)))
    val Pout = Output(Vec(24, UInt(1.W)))
    val Nout = Output(Vec(24, UInt(1.W)))
    val Zout = Output(Vec(24, UInt(1.W)))
    val Yout = Output(Vec(24, UInt(1.W)))
  })
  val PDT0 = Module(new PositiveDetectionTree)
  PDT0.io.Pin := io.Pin(47) ## io.Pin(46)
  PDT0.io.Nin := io.Nin(47) ## io.Nin(46)
  PDT0.io.Zin := io.Zin(47) ## io.Zin(46)
  PDT0.io.Yin := 0.U
  io.Pout(23) := PDT0.io.Pout
  io.Nout(23) := PDT0.io.Nout
  io.Zout(23) := PDT0.io.Zout
  io.Yout(23) := PDT0.io.Yout

  val PDT1 = Module(new PositiveDetectionTree)
  PDT1.io.Pin := io.Pin(45) ## io.Pin(44)
  PDT1.io.Nin := io.Nin(45) ## io.Nin(44)
  PDT1.io.Zin := io.Zin(45) ## io.Zin(44)
  PDT1.io.Yin := 0.U
  io.Pout(22) := PDT1.io.Pout
  io.Nout(22) := PDT1.io.Nout
  io.Zout(22) := PDT1.io.Zout
  io.Yout(22) := PDT1.io.Yout

  val PDT2 = Module(new PositiveDetectionTree)
  PDT2.io.Pin := io.Pin(43) ## io.Pin(42)
  PDT2.io.Nin := io.Nin(43) ## io.Nin(42)
  PDT2.io.Zin := io.Zin(43) ## io.Zin(42)
  PDT2.io.Yin := 0.U
  io.Pout(21) := PDT2.io.Pout
  io.Nout(21) := PDT2.io.Nout
  io.Zout(21) := PDT2.io.Zout
  io.Yout(21) := PDT2.io.Yout

  val PDT3 = Module(new PositiveDetectionTree)
  PDT3.io.Pin := io.Pin(41) ## io.Pin(40)
  PDT3.io.Nin := io.Nin(41) ## io.Nin(40)
  PDT3.io.Zin := io.Zin(41) ## io.Zin(40)
  PDT3.io.Yin := 0.U
  io.Pout(20) := PDT3.io.Pout
  io.Nout(20) := PDT3.io.Nout
  io.Zout(20) := PDT3.io.Zout
  io.Yout(20) := PDT3.io.Yout

  val PDT4 = Module(new PositiveDetectionTree)
  PDT4.io.Pin := io.Pin(39) ## io.Pin(38)
  PDT4.io.Nin := io.Nin(39) ## io.Nin(38)
  PDT4.io.Zin := io.Zin(39) ## io.Zin(38)
  PDT4.io.Yin := 0.U
  io.Pout(19) := PDT4.io.Pout
  io.Nout(19) := PDT4.io.Nout
  io.Zout(19) := PDT4.io.Zout
  io.Yout(19) := PDT4.io.Yout

  val PDT5 = Module(new PositiveDetectionTree)
  PDT5.io.Pin := io.Pin(37) ## io.Pin(36)
  PDT5.io.Nin := io.Nin(37) ## io.Nin(36)
  PDT5.io.Zin := io.Zin(37) ## io.Zin(36)
  PDT5.io.Yin := 0.U
  io.Pout(18) := PDT5.io.Pout
  io.Nout(18) := PDT5.io.Nout
  io.Zout(18) := PDT5.io.Zout
  io.Yout(18) := PDT5.io.Yout

  val PDT6 = Module(new PositiveDetectionTree)
  PDT6.io.Pin := io.Pin(35) ## io.Pin(34)
  PDT6.io.Nin := io.Nin(35) ## io.Nin(34)
  PDT6.io.Zin := io.Zin(35) ## io.Zin(34)
  PDT6.io.Yin := 0.U
  io.Pout(17) := PDT6.io.Pout
  io.Nout(17) := PDT6.io.Nout
  io.Zout(17) := PDT6.io.Zout
  io.Yout(17) := PDT6.io.Yout

  val PDT7 = Module(new PositiveDetectionTree)
  PDT7.io.Pin := io.Pin(33) ## io.Pin(32)
  PDT7.io.Nin := io.Nin(33) ## io.Nin(32)
  PDT7.io.Zin := io.Zin(33) ## io.Zin(32)
  PDT7.io.Yin := 0.U
  io.Pout(16) := PDT7.io.Pout
  io.Nout(16) := PDT7.io.Nout
  io.Zout(16) := PDT7.io.Zout
  io.Yout(16) := PDT7.io.Yout

  val PDT8 = Module(new PositiveDetectionTree)
  PDT8.io.Pin := io.Pin(31) ## io.Pin(30)
  PDT8.io.Nin := io.Nin(31) ## io.Nin(30)
  PDT8.io.Zin := io.Zin(31) ## io.Zin(30)
  PDT8.io.Yin := 0.U
  io.Pout(15) := PDT8.io.Pout
  io.Nout(15) := PDT8.io.Nout
  io.Zout(15) := PDT8.io.Zout
  io.Yout(15) := PDT8.io.Yout

  val PDT9 = Module(new PositiveDetectionTree)
  PDT9.io.Pin := io.Pin(29) ## io.Pin(28)
  PDT9.io.Nin := io.Nin(29) ## io.Nin(28)
  PDT9.io.Zin := io.Zin(29) ## io.Zin(28)
  PDT9.io.Yin := 0.U
  io.Pout(14) := PDT9.io.Pout
  io.Nout(14) := PDT9.io.Nout
  io.Zout(14) := PDT9.io.Zout
  io.Yout(14) := PDT9.io.Yout

  val PDT10 = Module(new PositiveDetectionTree)
  PDT10.io.Pin := io.Pin(27) ## io.Pin(26)
  PDT10.io.Nin := io.Nin(27) ## io.Nin(26)
  PDT10.io.Zin := io.Zin(27) ## io.Zin(26)
  PDT10.io.Yin := 0.U
  io.Pout(13) := PDT10.io.Pout
  io.Nout(13) := PDT10.io.Nout
  io.Zout(13) := PDT10.io.Zout
  io.Yout(13) := PDT10.io.Yout

  val PDT11 = Module(new PositiveDetectionTree)
  PDT11.io.Pin := io.Pin(25) ## io.Pin(24)
  PDT11.io.Nin := io.Nin(25) ## io.Nin(24)
  PDT11.io.Zin := io.Zin(25) ## io.Zin(24)
  PDT11.io.Yin := 0.U
  io.Pout(12) := PDT11.io.Pout
  io.Nout(12) := PDT11.io.Nout
  io.Zout(12) := PDT11.io.Zout
  io.Yout(12) := PDT11.io.Yout

  val PDT12 = Module(new PositiveDetectionTree)
  PDT12.io.Pin := io.Pin(23) ## io.Pin(22)
  PDT12.io.Nin := io.Nin(23) ## io.Nin(22)
  PDT12.io.Zin := io.Zin(23) ## io.Zin(22)
  PDT12.io.Yin := 0.U
  io.Pout(11) := PDT12.io.Pout
  io.Nout(11) := PDT12.io.Nout
  io.Zout(11) := PDT12.io.Zout
  io.Yout(11) := PDT12.io.Yout

  val PDT13 = Module(new PositiveDetectionTree)
  PDT13.io.Pin := io.Pin(21) ## io.Pin(20)
  PDT13.io.Nin := io.Nin(21) ## io.Nin(20)
  PDT13.io.Zin := io.Zin(21) ## io.Zin(20)
  PDT13.io.Yin := 0.U
  io.Pout(10) := PDT13.io.Pout
  io.Nout(10) := PDT13.io.Nout
  io.Zout(10) := PDT13.io.Zout
  io.Yout(10) := PDT13.io.Yout

  val PDT14 = Module(new PositiveDetectionTree)
  PDT14.io.Pin := io.Pin(19) ## io.Pin(18)
  PDT14.io.Nin := io.Nin(19) ## io.Nin(18)
  PDT14.io.Zin := io.Zin(19) ## io.Zin(18)
  PDT14.io.Yin := 0.U
  io.Pout(9) := PDT14.io.Pout
  io.Nout(9) := PDT14.io.Nout
  io.Zout(9) := PDT14.io.Zout
  io.Yout(9) := PDT14.io.Yout

  val PDT15 = Module(new PositiveDetectionTree)
  PDT15.io.Pin := io.Pin(17) ## io.Pin(16)
  PDT15.io.Nin := io.Nin(17) ## io.Nin(16)
  PDT15.io.Zin := io.Zin(17) ## io.Zin(16)
  PDT15.io.Yin := 0.U
  io.Pout(8) := PDT15.io.Pout
  io.Nout(8) := PDT15.io.Nout
  io.Zout(8) := PDT15.io.Zout
  io.Yout(8) := PDT15.io.Yout

  val PDT16 = Module(new PositiveDetectionTree)
  PDT16.io.Pin := io.Pin(15) ## io.Pin(14)
  PDT16.io.Nin := io.Nin(15) ## io.Nin(14)
  PDT16.io.Zin := io.Zin(15) ## io.Zin(14)
  PDT16.io.Yin := 0.U
  io.Pout(7) := PDT16.io.Pout
  io.Nout(7) := PDT16.io.Nout
  io.Zout(7) := PDT16.io.Zout
  io.Yout(7) := PDT16.io.Yout

  val PDT17 = Module(new PositiveDetectionTree)
  PDT17.io.Pin := io.Pin(13) ## io.Pin(12)
  PDT17.io.Nin := io.Nin(13) ## io.Nin(12)
  PDT17.io.Zin := io.Zin(13) ## io.Zin(12)
  PDT17.io.Yin := 0.U
  io.Pout(6) := PDT17.io.Pout
  io.Nout(6) := PDT17.io.Nout
  io.Zout(6) := PDT17.io.Zout
  io.Yout(6) := PDT17.io.Yout

  val PDT18 = Module(new PositiveDetectionTree)
  PDT18.io.Pin := io.Pin(11) ## io.Pin(10)
  PDT18.io.Nin := io.Nin(11) ## io.Nin(10)
  PDT18.io.Zin := io.Zin(11) ## io.Zin(10)
  PDT18.io.Yin := 0.U
  io.Pout(5) := PDT18.io.Pout
  io.Nout(5) := PDT18.io.Nout
  io.Zout(5) := PDT18.io.Zout
  io.Yout(5) := PDT18.io.Yout

  val PDT19 = Module(new PositiveDetectionTree)
  PDT19.io.Pin := io.Pin(9) ## io.Pin(8)
  PDT19.io.Nin := io.Nin(9) ## io.Nin(8)
  PDT19.io.Zin := io.Zin(9) ## io.Zin(8)
  PDT19.io.Yin := 0.U
  io.Pout(4) := PDT19.io.Pout
  io.Nout(4) := PDT19.io.Nout
  io.Zout(4) := PDT19.io.Zout
  io.Yout(4) := PDT19.io.Yout

  val PDT20 = Module(new PositiveDetectionTree)
  PDT20.io.Pin := io.Pin(7) ## io.Pin(6)
  PDT20.io.Nin := io.Nin(7) ## io.Nin(6)
  PDT20.io.Zin := io.Zin(7) ## io.Zin(6)
  PDT20.io.Yin := 0.U
  io.Pout(3) := PDT20.io.Pout
  io.Nout(3) := PDT20.io.Nout
  io.Zout(3) := PDT20.io.Zout
  io.Yout(3) := PDT20.io.Yout

  val PDT21 = Module(new PositiveDetectionTree)
  PDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  PDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  PDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  PDT21.io.Yin := 0.U
  io.Pout(2) := PDT21.io.Pout
  io.Nout(2) := PDT21.io.Nout
  io.Zout(2) := PDT21.io.Zout
  io.Yout(2) := PDT21.io.Yout

  val PDT22 = Module(new PositiveDetectionTree)
  PDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  PDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  PDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  PDT22.io.Yin := 0.U
  io.Pout(1) := PDT22.io.Pout
  io.Nout(1) := PDT22.io.Nout
  io.Zout(1) := PDT22.io.Zout
  io.Yout(1) := PDT22.io.Yout

  val PDT23 = Module(new PositiveDetectionTree)
  PDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  PDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  PDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  PDT23.io.Yin := 0.U
  io.Pout(0) := PDT23.io.Pout
  io.Nout(0) := PDT23.io.Nout
  io.Zout(0) := PDT23.io.Zout
  io.Yout(0) := PDT23.io.Yout
}

class PositiveDetectionTree1 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(24, UInt(1.W)))
    val Nin = Input(Vec(24, UInt(1.W)))
    val Zin = Input(Vec(24, UInt(1.W)))
    val Yin = Input(Vec(24, UInt(1.W)))
    val Pout = Output(Vec(12, UInt(1.W)))
    val Nout = Output(Vec(12, UInt(1.W)))
    val Zout = Output(Vec(12, UInt(1.W)))
    val Yout = Output(Vec(12, UInt(1.W)))
  })

  val PDT12 = Module(new PositiveDetectionTree)
  PDT12.io.Pin := io.Pin(23) ## io.Pin(22)
  PDT12.io.Nin := io.Nin(23) ## io.Nin(22)
  PDT12.io.Zin := io.Zin(23) ## io.Zin(22)
  PDT12.io.Yin := io.Yin(23) ## io.Yin(22)
  io.Pout(11) := PDT12.io.Pout
  io.Nout(11) := PDT12.io.Nout
  io.Zout(11) := PDT12.io.Zout
  io.Yout(11) := PDT12.io.Yout

  val PDT13 = Module(new PositiveDetectionTree)
  PDT13.io.Pin := io.Pin(21) ## io.Pin(20)
  PDT13.io.Nin := io.Nin(21) ## io.Nin(20)
  PDT13.io.Zin := io.Zin(21) ## io.Zin(20)
  PDT13.io.Yin := io.Yin(21) ## io.Yin(20)
  io.Pout(10) := PDT13.io.Pout
  io.Nout(10) := PDT13.io.Nout
  io.Zout(10) := PDT13.io.Zout
  io.Yout(10) := PDT13.io.Yout

  val PDT14 = Module(new PositiveDetectionTree)
  PDT14.io.Pin := io.Pin(19) ## io.Pin(18)
  PDT14.io.Nin := io.Nin(19) ## io.Nin(18)
  PDT14.io.Zin := io.Zin(19) ## io.Zin(18)
  PDT14.io.Yin := io.Yin(19) ## io.Yin(18)
  io.Pout(9) := PDT14.io.Pout
  io.Nout(9) := PDT14.io.Nout
  io.Zout(9) := PDT14.io.Zout
  io.Yout(9) := PDT14.io.Yout

  val PDT15 = Module(new PositiveDetectionTree)
  PDT15.io.Pin := io.Pin(17) ## io.Pin(16)
  PDT15.io.Nin := io.Nin(17) ## io.Nin(16)
  PDT15.io.Zin := io.Zin(17) ## io.Zin(16)
  PDT15.io.Yin := io.Yin(17) ## io.Yin(16)
  io.Pout(8) := PDT15.io.Pout
  io.Nout(8) := PDT15.io.Nout
  io.Zout(8) := PDT15.io.Zout
  io.Yout(8) := PDT15.io.Yout

  val PDT16 = Module(new PositiveDetectionTree)
  PDT16.io.Pin := io.Pin(15) ## io.Pin(14)
  PDT16.io.Nin := io.Nin(15) ## io.Nin(14)
  PDT16.io.Zin := io.Zin(15) ## io.Zin(14)
  PDT16.io.Yin := io.Yin(15) ## io.Yin(14)
  io.Pout(7) := PDT16.io.Pout
  io.Nout(7) := PDT16.io.Nout
  io.Zout(7) := PDT16.io.Zout
  io.Yout(7) := PDT16.io.Yout

  val PDT17 = Module(new PositiveDetectionTree)
  PDT17.io.Pin := io.Pin(13) ## io.Pin(12)
  PDT17.io.Nin := io.Nin(13) ## io.Nin(12)
  PDT17.io.Zin := io.Zin(13) ## io.Zin(12)
  PDT17.io.Yin := io.Yin(13) ## io.Yin(12)
  io.Pout(6) := PDT17.io.Pout
  io.Nout(6) := PDT17.io.Nout
  io.Zout(6) := PDT17.io.Zout
  io.Yout(6) := PDT17.io.Yout

  val PDT18 = Module(new PositiveDetectionTree)
  PDT18.io.Pin := io.Pin(11) ## io.Pin(10)
  PDT18.io.Nin := io.Nin(11) ## io.Nin(10)
  PDT18.io.Zin := io.Zin(11) ## io.Zin(10)
  PDT18.io.Yin := io.Yin(11) ## io.Yin(10)
  io.Pout(5) := PDT18.io.Pout
  io.Nout(5) := PDT18.io.Nout
  io.Zout(5) := PDT18.io.Zout
  io.Yout(5) := PDT18.io.Yout

  val PDT19 = Module(new PositiveDetectionTree)
  PDT19.io.Pin := io.Pin(9) ## io.Pin(8)
  PDT19.io.Nin := io.Nin(9) ## io.Nin(8)
  PDT19.io.Zin := io.Zin(9) ## io.Zin(8)
  PDT19.io.Yin := io.Yin(9) ## io.Yin(8)
  io.Pout(4) := PDT19.io.Pout
  io.Nout(4) := PDT19.io.Nout
  io.Zout(4) := PDT19.io.Zout
  io.Yout(4) := PDT19.io.Yout

  val PDT20 = Module(new PositiveDetectionTree)
  PDT20.io.Pin := io.Pin(7) ## io.Pin(6)
  PDT20.io.Nin := io.Nin(7) ## io.Nin(6)
  PDT20.io.Zin := io.Zin(7) ## io.Zin(6)
  PDT20.io.Yin := io.Yin(7) ## io.Yin(6)
  io.Pout(3) := PDT20.io.Pout
  io.Nout(3) := PDT20.io.Nout
  io.Zout(3) := PDT20.io.Zout
  io.Yout(3) := PDT20.io.Yout

  val PDT21 = Module(new PositiveDetectionTree)
  PDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  PDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  PDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  PDT21.io.Yin := io.Yin(5) ## io.Yin(4)
  io.Pout(2) := PDT21.io.Pout
  io.Nout(2) := PDT21.io.Nout
  io.Zout(2) := PDT21.io.Zout
  io.Yout(2) := PDT21.io.Yout

  val PDT22 = Module(new PositiveDetectionTree)
  PDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  PDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  PDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  PDT22.io.Yin := io.Yin(3) ## io.Yin(2)
  io.Pout(1) := PDT22.io.Pout
  io.Nout(1) := PDT22.io.Nout
  io.Zout(1) := PDT22.io.Zout
  io.Yout(1) := PDT22.io.Yout

  val PDT23 = Module(new PositiveDetectionTree)
  PDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  PDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  PDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  PDT23.io.Yin := io.Yin(1) ## io.Yin(0)
  io.Pout(0) := PDT23.io.Pout
  io.Nout(0) := PDT23.io.Nout
  io.Zout(0) := PDT23.io.Zout
  io.Yout(0) := PDT23.io.Yout
}

class PositiveDetectionTree2 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(12, UInt(1.W)))
    val Nin = Input(Vec(12, UInt(1.W)))
    val Zin = Input(Vec(12, UInt(1.W)))
    val Yin = Input(Vec(12, UInt(1.W)))
    val Pout = Output(Vec(6, UInt(1.W)))
    val Nout = Output(Vec(6, UInt(1.W)))
    val Zout = Output(Vec(6, UInt(1.W)))
    val Yout = Output(Vec(6, UInt(1.W)))
  })
  val PDT18 = Module(new PositiveDetectionTree)
  PDT18.io.Pin := io.Pin(11) ## io.Pin(10)
  PDT18.io.Nin := io.Nin(11) ## io.Nin(10)
  PDT18.io.Zin := io.Zin(11) ## io.Zin(10)
  PDT18.io.Yin := io.Yin(11) ## io.Yin(10)
  io.Pout(5) := PDT18.io.Pout
  io.Nout(5) := PDT18.io.Nout
  io.Zout(5) := PDT18.io.Zout
  io.Yout(5) := PDT18.io.Yout

  val PDT19 = Module(new PositiveDetectionTree)
  PDT19.io.Pin := io.Pin(9) ## io.Pin(8)
  PDT19.io.Nin := io.Nin(9) ## io.Nin(8)
  PDT19.io.Zin := io.Zin(9) ## io.Zin(8)
  PDT19.io.Yin := io.Yin(9) ## io.Yin(8)
  io.Pout(4) := PDT19.io.Pout
  io.Nout(4) := PDT19.io.Nout
  io.Zout(4) := PDT19.io.Zout
  io.Yout(4) := PDT19.io.Yout

  val PDT20 = Module(new PositiveDetectionTree)
  PDT20.io.Pin := io.Pin(7) ## io.Pin(6)
  PDT20.io.Nin := io.Nin(7) ## io.Nin(6)
  PDT20.io.Zin := io.Zin(7) ## io.Zin(6)
  PDT20.io.Yin := io.Yin(7) ## io.Yin(6)
  io.Pout(3) := PDT20.io.Pout
  io.Nout(3) := PDT20.io.Nout
  io.Zout(3) := PDT20.io.Zout
  io.Yout(3) := PDT20.io.Yout

  val PDT21 = Module(new PositiveDetectionTree)
  PDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  PDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  PDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  PDT21.io.Yin := io.Yin(5) ## io.Yin(4)
  io.Pout(2) := PDT21.io.Pout
  io.Nout(2) := PDT21.io.Nout
  io.Zout(2) := PDT21.io.Zout
  io.Yout(2) := PDT21.io.Yout

  val PDT22 = Module(new PositiveDetectionTree)
  PDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  PDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  PDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  PDT22.io.Yin := io.Yin(3) ## io.Yin(2)
  io.Pout(1) := PDT22.io.Pout
  io.Nout(1) := PDT22.io.Nout
  io.Zout(1) := PDT22.io.Zout
  io.Yout(1) := PDT22.io.Yout

  val PDT23 = Module(new PositiveDetectionTree)
  PDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  PDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  PDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  PDT23.io.Yin := io.Yin(1) ## io.Yin(0)
  io.Pout(0) := PDT23.io.Pout
  io.Nout(0) := PDT23.io.Nout
  io.Zout(0) := PDT23.io.Zout
  io.Yout(0) := PDT23.io.Yout
}

class PositiveDetectionTree3 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(6, UInt(1.W)))
    val Nin = Input(Vec(6, UInt(1.W)))
    val Zin = Input(Vec(6, UInt(1.W)))
    val Yin = Input(Vec(6, UInt(1.W)))
    val Pout = Output(Vec(3, UInt(1.W)))
    val Nout = Output(Vec(3, UInt(1.W)))
    val Zout = Output(Vec(3, UInt(1.W)))
    val Yout = Output(Vec(3, UInt(1.W)))
  })

  val PDT21 = Module(new PositiveDetectionTree)
  PDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  PDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  PDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  PDT21.io.Yin := io.Yin(5) ## io.Yin(4)
  io.Pout(2) := PDT21.io.Pout
  io.Nout(2) := PDT21.io.Nout
  io.Zout(2) := PDT21.io.Zout
  io.Yout(2) := PDT21.io.Yout

  val PDT22 = Module(new PositiveDetectionTree)
  PDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  PDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  PDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  PDT22.io.Yin := io.Yin(3) ## io.Yin(2)
  io.Pout(1) := PDT22.io.Pout
  io.Nout(1) := PDT22.io.Nout
  io.Zout(1) := PDT22.io.Zout
  io.Yout(1) := PDT22.io.Yout

  val PDT23 = Module(new PositiveDetectionTree)
  PDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  PDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  PDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  PDT23.io.Yin := io.Yin(1) ## io.Yin(0)
  io.Pout(0) := PDT23.io.Pout
  io.Nout(0) := PDT23.io.Nout
  io.Zout(0) := PDT23.io.Zout
  io.Yout(0) := PDT23.io.Yout
}

class NegativeDetectionTree extends Module {
  val io = IO(new Bundle {
    val Pin = Input(UInt(2.W))
    val Nin = Input(UInt(2.W))
    val Zin = Input(UInt(2.W))
    val Yin = Input(UInt(2.W))
    val Pout = Output(UInt(1.W))
    val Nout = Output(UInt(1.W))
    val Zout = Output(UInt(1.W))
    val Yout = Output(UInt(1.W))

    /*
    val Pin = Input(Vec(2, UInt(1.W)))
    val Nin = Input(Vec(2, UInt(1.W)))
    val Zin = Input(Vec(2, UInt(1.W)))
    val Yin = Input(Vec(2, UInt(1.W)))
    val Pout = Output(Vec(1, UInt(1.W)))
    val Nout = Output(Vec(1, UInt(1.W)))
    val Zout = Output(Vec(1, UInt(1.W)))
    val Yout = Output(Vec(1, UInt(1.W)))
         */
  })
  //io.Fout := (io.Epre & ((io.Gcur & !io.Snext) | (io.Scur & !io.Gnext))) | (!io.Epre & ((io.Scur & !io.Snext) | (io.Gcur & !io.Gnext)))
  /*
  io.Zout := io.Zin(1) & io.Zin(0)
  io.Pout := io.Pin(1) | (io.Zin(1) & io.Pin(0))
  io.Nout := (io.Nin(1) & io.Zin(0)) | (io.Zin(1) & io.Nin(0))
  io.Yout := io.Yin(1) | (io.Nin(1) & io.Pin(0)) | (io.Zin(1) & io.Yin(0))
     */
  io.Zout := io.Zin(1) & io.Zin(0)
  //io.Pout := (io.Zin(1) & io.Nin(0)) | (io.Nin(1) & io.Zin(0))
  //io.Nout := io.Pin(1) | (io.Zin(1) & io.Pin(0))
  io.Pout := io.Pin(1) | (io.Zin(1) & io.Pin(0))
  io.Nout := (io.Zin(1) & io.Nin(0)) | (io.Nin(1) & io.Zin(0))
  io.Yout := io.Yin(1) | (io.Zin(1) & io.Yin(0)) | (io.Nin(1) & io.Pin(0))
}

class NegativeDetectionTree0 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(48, UInt(1.W)))
    val Nin = Input(Vec(48, UInt(1.W)))
    val Zin = Input(Vec(48, UInt(1.W)))
    // val Yin = Input(Vec(48, UInt(1.W)))
    val Pout = Output(Vec(24, UInt(1.W)))
    val Nout = Output(Vec(24, UInt(1.W)))
    val Zout = Output(Vec(24, UInt(1.W)))
    val Yout = Output(Vec(24, UInt(1.W)))
  })
  val NDT0 = Module(new NegativeDetectionTree)
  NDT0.io.Pin := io.Pin(47) ## io.Pin(46)
  NDT0.io.Nin := io.Nin(47) ## io.Nin(46)
  NDT0.io.Zin := io.Zin(47) ## io.Zin(46)
  NDT0.io.Yin := 0.U
  io.Pout(23) := NDT0.io.Pout
  io.Nout(23) := NDT0.io.Nout
  io.Zout(23) := NDT0.io.Zout
  io.Yout(23) := NDT0.io.Yout

  val NDT1 = Module(new NegativeDetectionTree)
  NDT1.io.Pin := io.Pin(45) ## io.Pin(44)
  NDT1.io.Nin := io.Nin(45) ## io.Nin(44)
  NDT1.io.Zin := io.Zin(45) ## io.Zin(44)
  NDT1.io.Yin := 0.U
  io.Pout(22) := NDT1.io.Pout
  io.Nout(22) := NDT1.io.Nout
  io.Zout(22) := NDT1.io.Zout
  io.Yout(22) := NDT1.io.Yout

  val NDT2 = Module(new NegativeDetectionTree)
  NDT2.io.Pin := io.Pin(43) ## io.Pin(42)
  NDT2.io.Nin := io.Nin(43) ## io.Nin(42)
  NDT2.io.Zin := io.Zin(43) ## io.Zin(42)
  NDT2.io.Yin := 0.U
  io.Pout(21) := NDT2.io.Pout
  io.Nout(21) := NDT2.io.Nout
  io.Zout(21) := NDT2.io.Zout
  io.Yout(21) := NDT2.io.Yout

  val NDT3 = Module(new NegativeDetectionTree)
  NDT3.io.Pin := io.Pin(41) ## io.Pin(40)
  NDT3.io.Nin := io.Nin(41) ## io.Nin(40)
  NDT3.io.Zin := io.Zin(41) ## io.Zin(40)
  NDT3.io.Yin := 0.U
  io.Pout(20) := NDT3.io.Pout
  io.Nout(20) := NDT3.io.Nout
  io.Zout(20) := NDT3.io.Zout
  io.Yout(20) := NDT3.io.Yout

  val NDT4 = Module(new NegativeDetectionTree)
  NDT4.io.Pin := io.Pin(39) ## io.Pin(38)
  NDT4.io.Nin := io.Nin(39) ## io.Nin(38)
  NDT4.io.Zin := io.Zin(39) ## io.Zin(38)
  NDT4.io.Yin := 0.U
  io.Pout(19) := NDT4.io.Pout
  io.Nout(19) := NDT4.io.Nout
  io.Zout(19) := NDT4.io.Zout
  io.Yout(19) := NDT4.io.Yout

  val NDT5 = Module(new NegativeDetectionTree)
  NDT5.io.Pin := io.Pin(37) ## io.Pin(36)
  NDT5.io.Nin := io.Nin(37) ## io.Nin(36)
  NDT5.io.Zin := io.Zin(37) ## io.Zin(36)
  NDT5.io.Yin := 0.U
  io.Pout(18) := NDT5.io.Pout
  io.Nout(18) := NDT5.io.Nout
  io.Zout(18) := NDT5.io.Zout
  io.Yout(18) := NDT5.io.Yout

  val NDT6 = Module(new NegativeDetectionTree)
  NDT6.io.Pin := io.Pin(35) ## io.Pin(34)
  NDT6.io.Nin := io.Nin(35) ## io.Nin(34)
  NDT6.io.Zin := io.Zin(35) ## io.Zin(34)
  NDT6.io.Yin := 0.U
  io.Pout(17) := NDT6.io.Pout
  io.Nout(17) := NDT6.io.Nout
  io.Zout(17) := NDT6.io.Zout
  io.Yout(17) := NDT6.io.Yout

  val NDT7 = Module(new NegativeDetectionTree)
  NDT7.io.Pin := io.Pin(33) ## io.Pin(32)
  NDT7.io.Nin := io.Nin(33) ## io.Nin(32)
  NDT7.io.Zin := io.Zin(33) ## io.Zin(32)
  NDT7.io.Yin := 0.U
  io.Pout(16) := NDT7.io.Pout
  io.Nout(16) := NDT7.io.Nout
  io.Zout(16) := NDT7.io.Zout
  io.Yout(16) := NDT7.io.Yout

  val NDT8 = Module(new NegativeDetectionTree)
  NDT8.io.Pin := io.Pin(31) ## io.Pin(30)
  NDT8.io.Nin := io.Nin(31) ## io.Nin(30)
  NDT8.io.Zin := io.Zin(31) ## io.Zin(30)
  NDT8.io.Yin := 0.U
  io.Pout(15) := NDT8.io.Pout
  io.Nout(15) := NDT8.io.Nout
  io.Zout(15) := NDT8.io.Zout
  io.Yout(15) := NDT8.io.Yout

  val NDT9 = Module(new NegativeDetectionTree)
  NDT9.io.Pin := io.Pin(29) ## io.Pin(28)
  NDT9.io.Nin := io.Nin(29) ## io.Nin(28)
  NDT9.io.Zin := io.Zin(29) ## io.Zin(28)
  NDT9.io.Yin := 0.U
  io.Pout(14) := NDT9.io.Pout
  io.Nout(14) := NDT9.io.Nout
  io.Zout(14) := NDT9.io.Zout
  io.Yout(14) := NDT9.io.Yout

  val NDT10 = Module(new NegativeDetectionTree)
  NDT10.io.Pin := io.Pin(27) ## io.Pin(26)
  NDT10.io.Nin := io.Nin(27) ## io.Nin(26)
  NDT10.io.Zin := io.Zin(27) ## io.Zin(26)
  NDT10.io.Yin := 0.U
  io.Pout(13) := NDT10.io.Pout
  io.Nout(13) := NDT10.io.Nout
  io.Zout(13) := NDT10.io.Zout
  io.Yout(13) := NDT10.io.Yout

  val NDT11 = Module(new NegativeDetectionTree)
  NDT11.io.Pin := io.Pin(25) ## io.Pin(24)
  NDT11.io.Nin := io.Nin(25) ## io.Nin(24)
  NDT11.io.Zin := io.Zin(25) ## io.Zin(24)
  NDT11.io.Yin := 0.U
  io.Pout(12) := NDT11.io.Pout
  io.Nout(12) := NDT11.io.Nout
  io.Zout(12) := NDT11.io.Zout
  io.Yout(12) := NDT11.io.Yout

  val NDT12 = Module(new NegativeDetectionTree)
  NDT12.io.Pin := io.Pin(23) ## io.Pin(22)
  NDT12.io.Nin := io.Nin(23) ## io.Nin(22)
  NDT12.io.Zin := io.Zin(23) ## io.Zin(22)
  NDT12.io.Yin := 0.U
  io.Pout(11) := NDT12.io.Pout
  io.Nout(11) := NDT12.io.Nout
  io.Zout(11) := NDT12.io.Zout
  io.Yout(11) := NDT12.io.Yout

  val NDT13 = Module(new NegativeDetectionTree)
  NDT13.io.Pin := io.Pin(21) ## io.Pin(20)
  NDT13.io.Nin := io.Nin(21) ## io.Nin(20)
  NDT13.io.Zin := io.Zin(21) ## io.Zin(20)
  NDT13.io.Yin := 0.U
  io.Pout(10) := NDT13.io.Pout
  io.Nout(10) := NDT13.io.Nout
  io.Zout(10) := NDT13.io.Zout
  io.Yout(10) := NDT13.io.Yout

  val NDT14 = Module(new NegativeDetectionTree)
  NDT14.io.Pin := io.Pin(19) ## io.Pin(18)
  NDT14.io.Nin := io.Nin(19) ## io.Nin(18)
  NDT14.io.Zin := io.Zin(19) ## io.Zin(18)
  NDT14.io.Yin := 0.U
  io.Pout(9) := NDT14.io.Pout
  io.Nout(9) := NDT14.io.Nout
  io.Zout(9) := NDT14.io.Zout
  io.Yout(9) := NDT14.io.Yout

  val NDT15 = Module(new NegativeDetectionTree)
  NDT15.io.Pin := io.Pin(17) ## io.Pin(16)
  NDT15.io.Nin := io.Nin(17) ## io.Nin(16)
  NDT15.io.Zin := io.Zin(17) ## io.Zin(16)
  NDT15.io.Yin := 0.U
  io.Pout(8) := NDT15.io.Pout
  io.Nout(8) := NDT15.io.Nout
  io.Zout(8) := NDT15.io.Zout
  io.Yout(8) := NDT15.io.Yout

  val NDT16 = Module(new NegativeDetectionTree)
  NDT16.io.Pin := io.Pin(15) ## io.Pin(14)
  NDT16.io.Nin := io.Nin(15) ## io.Nin(14)
  NDT16.io.Zin := io.Zin(15) ## io.Zin(14)
  NDT16.io.Yin := 0.U
  io.Pout(7) := NDT16.io.Pout
  io.Nout(7) := NDT16.io.Nout
  io.Zout(7) := NDT16.io.Zout
  io.Yout(7) := NDT16.io.Yout

  val NDT17 = Module(new NegativeDetectionTree)
  NDT17.io.Pin := io.Pin(13) ## io.Pin(12)
  NDT17.io.Nin := io.Nin(13) ## io.Nin(12)
  NDT17.io.Zin := io.Zin(13) ## io.Zin(12)
  NDT17.io.Yin := 0.U
  io.Pout(6) := NDT17.io.Pout
  io.Nout(6) := NDT17.io.Nout
  io.Zout(6) := NDT17.io.Zout
  io.Yout(6) := NDT17.io.Yout

  val NDT18 = Module(new NegativeDetectionTree)
  NDT18.io.Pin := io.Pin(11) ## io.Pin(10)
  NDT18.io.Nin := io.Nin(11) ## io.Nin(10)
  NDT18.io.Zin := io.Zin(11) ## io.Zin(10)
  NDT18.io.Yin := 0.U
  io.Pout(5) := NDT18.io.Pout
  io.Nout(5) := NDT18.io.Nout
  io.Zout(5) := NDT18.io.Zout
  io.Yout(5) := NDT18.io.Yout

  val NDT19 = Module(new NegativeDetectionTree)
  NDT19.io.Pin := io.Pin(9) ## io.Pin(8)
  NDT19.io.Nin := io.Nin(9) ## io.Nin(8)
  NDT19.io.Zin := io.Zin(9) ## io.Zin(8)
  NDT19.io.Yin := 0.U
  io.Pout(4) := NDT19.io.Pout
  io.Nout(4) := NDT19.io.Nout
  io.Zout(4) := NDT19.io.Zout
  io.Yout(4) := NDT19.io.Yout

  val NDT20 = Module(new NegativeDetectionTree)
  NDT20.io.Pin := io.Pin(7) ## io.Pin(6)
  NDT20.io.Nin := io.Nin(7) ## io.Nin(6)
  NDT20.io.Zin := io.Zin(7) ## io.Zin(6)
  NDT20.io.Yin := 0.U
  io.Pout(3) := NDT20.io.Pout
  io.Nout(3) := NDT20.io.Nout
  io.Zout(3) := NDT20.io.Zout
  io.Yout(3) := NDT20.io.Yout

  val NDT21 = Module(new NegativeDetectionTree)
  NDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  NDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  NDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  NDT21.io.Yin := 0.U
  io.Pout(2) := NDT21.io.Pout
  io.Nout(2) := NDT21.io.Nout
  io.Zout(2) := NDT21.io.Zout
  io.Yout(2) := NDT21.io.Yout

  val NDT22 = Module(new NegativeDetectionTree)
  NDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  NDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  NDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  NDT22.io.Yin := 0.U
  io.Pout(1) := NDT22.io.Pout
  io.Nout(1) := NDT22.io.Nout
  io.Zout(1) := NDT22.io.Zout
  io.Yout(1) := NDT22.io.Yout

  val NDT23 = Module(new NegativeDetectionTree)
  NDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  NDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  NDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  NDT23.io.Yin := 0.U
  io.Pout(0) := NDT23.io.Pout
  io.Nout(0) := NDT23.io.Nout
  io.Zout(0) := NDT23.io.Zout
  io.Yout(0) := NDT23.io.Yout
}

class NegativeDetectionTree1 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(24, UInt(1.W)))
    val Nin = Input(Vec(24, UInt(1.W)))
    val Zin = Input(Vec(24, UInt(1.W)))
    val Yin = Input(Vec(24, UInt(1.W)))
    val Pout = Output(Vec(12, UInt(1.W)))
    val Nout = Output(Vec(12, UInt(1.W)))
    val Zout = Output(Vec(12, UInt(1.W)))
    val Yout = Output(Vec(12, UInt(1.W)))
  })

  val NDT12 = Module(new NegativeDetectionTree)
  NDT12.io.Pin := io.Pin(23) ## io.Pin(22)
  NDT12.io.Nin := io.Nin(23) ## io.Nin(22)
  NDT12.io.Zin := io.Zin(23) ## io.Zin(22)
  NDT12.io.Yin := io.Yin(23) ## io.Yin(22)
  io.Pout(11) := NDT12.io.Pout
  io.Nout(11) := NDT12.io.Nout
  io.Zout(11) := NDT12.io.Zout
  io.Yout(11) := NDT12.io.Yout

  val NDT13 = Module(new NegativeDetectionTree)
  NDT13.io.Pin := io.Pin(21) ## io.Pin(20)
  NDT13.io.Nin := io.Nin(21) ## io.Nin(20)
  NDT13.io.Zin := io.Zin(21) ## io.Zin(20)
  NDT13.io.Yin := io.Yin(21) ## io.Yin(20)
  io.Pout(10) := NDT13.io.Pout
  io.Nout(10) := NDT13.io.Nout
  io.Zout(10) := NDT13.io.Zout
  io.Yout(10) := NDT13.io.Yout

  val NDT14 = Module(new NegativeDetectionTree)
  NDT14.io.Pin := io.Pin(19) ## io.Pin(18)
  NDT14.io.Nin := io.Nin(19) ## io.Nin(18)
  NDT14.io.Zin := io.Zin(19) ## io.Zin(18)
  NDT14.io.Yin := io.Yin(19) ## io.Yin(18)
  io.Pout(9) := NDT14.io.Pout
  io.Nout(9) := NDT14.io.Nout
  io.Zout(9) := NDT14.io.Zout
  io.Yout(9) := NDT14.io.Yout

  val NDT15 = Module(new NegativeDetectionTree)
  NDT15.io.Pin := io.Pin(17) ## io.Pin(16)
  NDT15.io.Nin := io.Nin(17) ## io.Nin(16)
  NDT15.io.Zin := io.Zin(17) ## io.Zin(16)
  NDT15.io.Yin := io.Yin(17) ## io.Yin(16)
  io.Pout(8) := NDT15.io.Pout
  io.Nout(8) := NDT15.io.Nout
  io.Zout(8) := NDT15.io.Zout
  io.Yout(8) := NDT15.io.Yout

  val NDT16 = Module(new NegativeDetectionTree)
  NDT16.io.Pin := io.Pin(15) ## io.Pin(14)
  NDT16.io.Nin := io.Nin(15) ## io.Nin(14)
  NDT16.io.Zin := io.Zin(15) ## io.Zin(14)
  NDT16.io.Yin := io.Yin(15) ## io.Yin(14)
  io.Pout(7) := NDT16.io.Pout
  io.Nout(7) := NDT16.io.Nout
  io.Zout(7) := NDT16.io.Zout
  io.Yout(7) := NDT16.io.Yout

  val NDT17 = Module(new NegativeDetectionTree)
  NDT17.io.Pin := io.Pin(13) ## io.Pin(12)
  NDT17.io.Nin := io.Nin(13) ## io.Nin(12)
  NDT17.io.Zin := io.Zin(13) ## io.Zin(12)
  NDT17.io.Yin := io.Yin(13) ## io.Yin(12)
  io.Pout(6) := NDT17.io.Pout
  io.Nout(6) := NDT17.io.Nout
  io.Zout(6) := NDT17.io.Zout
  io.Yout(6) := NDT17.io.Yout

  val NDT18 = Module(new NegativeDetectionTree)
  NDT18.io.Pin := io.Pin(11) ## io.Pin(10)
  NDT18.io.Nin := io.Nin(11) ## io.Nin(10)
  NDT18.io.Zin := io.Zin(11) ## io.Zin(10)
  NDT18.io.Yin := io.Yin(11) ## io.Yin(10)
  io.Pout(5) := NDT18.io.Pout
  io.Nout(5) := NDT18.io.Nout
  io.Zout(5) := NDT18.io.Zout
  io.Yout(5) := NDT18.io.Yout

  val NDT19 = Module(new NegativeDetectionTree)
  NDT19.io.Pin := io.Pin(9) ## io.Pin(8)
  NDT19.io.Nin := io.Nin(9) ## io.Nin(8)
  NDT19.io.Zin := io.Zin(9) ## io.Zin(8)
  NDT19.io.Yin := io.Yin(9) ## io.Yin(8)
  io.Pout(4) := NDT19.io.Pout
  io.Nout(4) := NDT19.io.Nout
  io.Zout(4) := NDT19.io.Zout
  io.Yout(4) := NDT19.io.Yout

  val NDT20 = Module(new NegativeDetectionTree)
  NDT20.io.Pin := io.Pin(7) ## io.Pin(6)
  NDT20.io.Nin := io.Nin(7) ## io.Nin(6)
  NDT20.io.Zin := io.Zin(7) ## io.Zin(6)
  NDT20.io.Yin := io.Yin(7) ## io.Yin(6)
  io.Pout(3) := NDT20.io.Pout
  io.Nout(3) := NDT20.io.Nout
  io.Zout(3) := NDT20.io.Zout
  io.Yout(3) := NDT20.io.Yout

  val NDT21 = Module(new NegativeDetectionTree)
  NDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  NDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  NDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  NDT21.io.Yin := io.Yin(5) ## io.Yin(4)
  io.Pout(2) := NDT21.io.Pout
  io.Nout(2) := NDT21.io.Nout
  io.Zout(2) := NDT21.io.Zout
  io.Yout(2) := NDT21.io.Yout

  val NDT22 = Module(new NegativeDetectionTree)
  NDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  NDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  NDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  NDT22.io.Yin := io.Yin(3) ## io.Yin(2)
  io.Pout(1) := NDT22.io.Pout
  io.Nout(1) := NDT22.io.Nout
  io.Zout(1) := NDT22.io.Zout
  io.Yout(1) := NDT22.io.Yout

  val NDT23 = Module(new NegativeDetectionTree)
  NDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  NDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  NDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  NDT23.io.Yin := io.Yin(1) ## io.Yin(0)
  io.Pout(0) := NDT23.io.Pout
  io.Nout(0) := NDT23.io.Nout
  io.Zout(0) := NDT23.io.Zout
  io.Yout(0) := NDT23.io.Yout
}

class NegativeDetectionTree2 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(12, UInt(1.W)))
    val Nin = Input(Vec(12, UInt(1.W)))
    val Zin = Input(Vec(12, UInt(1.W)))
    val Yin = Input(Vec(12, UInt(1.W)))
    val Pout = Output(Vec(6, UInt(1.W)))
    val Nout = Output(Vec(6, UInt(1.W)))
    val Zout = Output(Vec(6, UInt(1.W)))
    val Yout = Output(Vec(6, UInt(1.W)))
  })
  val NDT18 = Module(new NegativeDetectionTree)
  NDT18.io.Pin := io.Pin(11) ## io.Pin(10)
  NDT18.io.Nin := io.Nin(11) ## io.Nin(10)
  NDT18.io.Zin := io.Zin(11) ## io.Zin(10)
  NDT18.io.Yin := io.Yin(11) ## io.Yin(10)
  io.Pout(5) := NDT18.io.Pout
  io.Nout(5) := NDT18.io.Nout
  io.Zout(5) := NDT18.io.Zout
  io.Yout(5) := NDT18.io.Yout

  val NDT19 = Module(new NegativeDetectionTree)
  NDT19.io.Pin := io.Pin(9) ## io.Pin(8)
  NDT19.io.Nin := io.Nin(9) ## io.Nin(8)
  NDT19.io.Zin := io.Zin(9) ## io.Zin(8)
  NDT19.io.Yin := io.Yin(9) ## io.Yin(8)
  io.Pout(4) := NDT19.io.Pout
  io.Nout(4) := NDT19.io.Nout
  io.Zout(4) := NDT19.io.Zout
  io.Yout(4) := NDT19.io.Yout

  val NDT20 = Module(new NegativeDetectionTree)
  NDT20.io.Pin := io.Pin(7) ## io.Pin(6)
  NDT20.io.Nin := io.Nin(7) ## io.Nin(6)
  NDT20.io.Zin := io.Zin(7) ## io.Zin(6)
  NDT20.io.Yin := io.Yin(7) ## io.Yin(6)
  io.Pout(3) := NDT20.io.Pout
  io.Nout(3) := NDT20.io.Nout
  io.Zout(3) := NDT20.io.Zout
  io.Yout(3) := NDT20.io.Yout

  val NDT21 = Module(new NegativeDetectionTree)
  NDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  NDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  NDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  NDT21.io.Yin := io.Yin(5) ## io.Yin(4)
  io.Pout(2) := NDT21.io.Pout
  io.Nout(2) := NDT21.io.Nout
  io.Zout(2) := NDT21.io.Zout
  io.Yout(2) := NDT21.io.Yout

  val NDT22 = Module(new NegativeDetectionTree)
  NDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  NDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  NDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  NDT22.io.Yin := io.Yin(3) ## io.Yin(2)
  io.Pout(1) := NDT22.io.Pout
  io.Nout(1) := NDT22.io.Nout
  io.Zout(1) := NDT22.io.Zout
  io.Yout(1) := NDT22.io.Yout

  val NDT23 = Module(new NegativeDetectionTree)
  NDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  NDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  NDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  NDT23.io.Yin := io.Yin(1) ## io.Yin(0)
  io.Pout(0) := NDT23.io.Pout
  io.Nout(0) := NDT23.io.Nout
  io.Zout(0) := NDT23.io.Zout
  io.Yout(0) := NDT23.io.Yout
}

class NegativeDetectionTree3 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(6, UInt(1.W)))
    val Nin = Input(Vec(6, UInt(1.W)))
    val Zin = Input(Vec(6, UInt(1.W)))
    val Yin = Input(Vec(6, UInt(1.W)))
    val Pout = Output(Vec(3, UInt(1.W)))
    val Nout = Output(Vec(3, UInt(1.W)))
    val Zout = Output(Vec(3, UInt(1.W)))
    val Yout = Output(Vec(3, UInt(1.W)))
  })

  val NDT21 = Module(new NegativeDetectionTree)
  NDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  NDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  NDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  NDT21.io.Yin := io.Yin(5) ## io.Yin(4)
  io.Pout(2) := NDT21.io.Pout
  io.Nout(2) := NDT21.io.Nout
  io.Zout(2) := NDT21.io.Zout
  io.Yout(2) := NDT21.io.Yout

  val NDT22 = Module(new NegativeDetectionTree)
  NDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  NDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  NDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  NDT22.io.Yin := io.Yin(3) ## io.Yin(2)
  io.Pout(1) := NDT22.io.Pout
  io.Nout(1) := NDT22.io.Nout
  io.Zout(1) := NDT22.io.Zout
  io.Yout(1) := NDT22.io.Yout

  val NDT23 = Module(new NegativeDetectionTree)
  NDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  NDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  NDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  NDT23.io.Yin := io.Yin(1) ## io.Yin(0)
  io.Pout(0) := NDT23.io.Pout
  io.Nout(0) := NDT23.io.Nout
  io.Zout(0) := NDT23.io.Zout
  io.Yout(0) := NDT23.io.Yout
}
class LODinLZA extends Module {
  val io = IO(new Bundle {
    //val IN = Input(UInt(48.W))
    val OUT = Output(UInt(48.W))
    val IN = Input(Vec(48, UInt(1.W)))
    //val OUT = Output(Vec(48, UInt(1.W)))
    //val value = Output(UInt(8.W))
  })

  val result = Wire(Vec(48, UInt(1.W)))
  //io.OUT := result
  val wire = Wire(Vec(46, UInt(1.W)))

  //wire(46) := !io.IN(48) & !io.IN(47)
  //wire(45) := wire(46) & !io.IN(46)
  wire(45) := !io.IN(47) & !io.IN(46)
  wire(44) := wire(45) & !io.IN(45)
  wire(43) := wire(44) & !io.IN(44)
  wire(42) := wire(43) & !io.IN(43)
  wire(41) := wire(42) & !io.IN(42)
  wire(40) := wire(41) & !io.IN(41)
  wire(39) := wire(40) & !io.IN(40)
  wire(38) := wire(39) & !io.IN(39)
  wire(37) := wire(38) & !io.IN(38)
  wire(36) := wire(37) & !io.IN(37)
  wire(35) := wire(36) & !io.IN(36)
  wire(34) := wire(35) & !io.IN(35)
  wire(33) := wire(34) & !io.IN(34)
  wire(32) := wire(33) & !io.IN(33)
  wire(31) := wire(32) & !io.IN(32)
  wire(30) := wire(31) & !io.IN(31)
  wire(29) := wire(30) & !io.IN(30)
  wire(28) := wire(29) & !io.IN(29)
  wire(27) := wire(28) & !io.IN(28)
  wire(26) := wire(27) & !io.IN(27)
  wire(25) := wire(26) & !io.IN(26)
  wire(24) := wire(25) & !io.IN(25)
  wire(23) := wire(24) & !io.IN(24)
  wire(22) := wire(23) & !io.IN(23)
  wire(21) := wire(22) & !io.IN(22)
  wire(20) := wire(21) & !io.IN(21)
  wire(19) := wire(20) & !io.IN(20)
  wire(18) := wire(19) & !io.IN(19)
  wire(17) := wire(18) & !io.IN(18)
  wire(16) := wire(17) & !io.IN(17)
  wire(15) := wire(16) & !io.IN(16)
  wire(14) := wire(15) & !io.IN(15)
  wire(13) := wire(14) & !io.IN(14)
  wire(12) := wire(13) & !io.IN(13)
  wire(11) := wire(12) & !io.IN(12)
  wire(10) := wire(11) & !io.IN(11)
  wire(9) := wire(10) & !io.IN(10)
  wire(8) := wire(9) & !io.IN(9)
  wire(7) := wire(8) & !io.IN(8)
  wire(6) := wire(7) & !io.IN(7)
  wire(5) := wire(6) & !io.IN(6)
  wire(4) := wire(5) & !io.IN(5)
  wire(3) := wire(4) & !io.IN(4)
  wire(2) := wire(3) & !io.IN(3)
  wire(1) := wire(2) & !io.IN(2)
  wire(0) := wire(1) & !io.IN(1)

  //result(48) := io.IN(48)
  //result(47) := !io.IN(48) & io.IN(47)
  //result(46) := wire(46) & io.IN(46)
  result(47) := io.IN(47)
  result(46) := !io.IN(47) & io.IN(46)
  result(45) := wire(45) & io.IN(45)
  result(44) := wire(44) & io.IN(44)
  result(43) := wire(43) & io.IN(43)
  result(42) := wire(42) & io.IN(42)
  result(41) := wire(41) & io.IN(41)
  result(40) := wire(40) & io.IN(40)
  result(39) := wire(39) & io.IN(39)
  result(38) := wire(38) & io.IN(38)
  result(37) := wire(37) & io.IN(37)
  result(36) := wire(36) & io.IN(36)
  result(35) := wire(35) & io.IN(35)
  result(34) := wire(34) & io.IN(34)
  result(33) := wire(33) & io.IN(33)
  result(32) := wire(32) & io.IN(32)
  result(31) := wire(31) & io.IN(31)
  result(30) := wire(30) & io.IN(30)
  result(29) := wire(29) & io.IN(29)
  result(28) := wire(28) & io.IN(28)
  result(27) := wire(27) & io.IN(27)
  result(26) := wire(26) & io.IN(26)
  result(25) := wire(25) & io.IN(25)
  result(24) := wire(24) & io.IN(24)
  result(23) := wire(23) & io.IN(23)
  result(22) := wire(22) & io.IN(22)
  result(21) := wire(21) & io.IN(21)
  result(20) := wire(20) & io.IN(20)
  result(19) := wire(19) & io.IN(19)
  result(18) := wire(18) & io.IN(18)
  result(17) := wire(17) & io.IN(17)
  result(16) := wire(16) & io.IN(16)
  result(15) := wire(15) & io.IN(15)
  result(14) := wire(14) & io.IN(14)
  result(13) := wire(13) & io.IN(13)
  result(12) := wire(12) & io.IN(12)
  result(11) := wire(11) & io.IN(11)
  result(10) := wire(10) & io.IN(10)
  result(9) := wire(9) & io.IN(9)
  result(8) := wire(8) & io.IN(8)
  result(7) := wire(7) & io.IN(7)
  result(6) := wire(6) & io.IN(6)
  result(5) := wire(5) & io.IN(5)
  result(4) := wire(4) & io.IN(4)
  result(3) := wire(3) & io.IN(3)
  result(2) := wire(2) & io.IN(2)
  result(1) := wire(1) & io.IN(1)
  result(0) := wire(0) & io.IN(0)

  io.OUT := result(47) ## result(46) ## result(45) ## result(44) ## result(43) ## result(42) ## result(41) ## result(40) ##
    result(39) ## result(38) ## result(37) ## result(36) ## result(35) ## result(34) ## result(33) ## result(32) ## result(31) ## result(30) ##
    result(29) ## result(28) ## result(27) ## result(26) ## result(25) ## result(24) ## result(23) ## result(22) ## result(21) ## result(20) ##
    result(19) ## result(18) ## result(17) ## result(16) ## result(15) ## result(14) ## result(13) ## result(12) ## result(11) ## result(10) ##
    result(9) ## result(8) ## result(7) ## result(6) ## result(5) ## result(4) ## result(3) ## result(2) ## result(1) ## result(0)

}
/*
class LODinLZA extends Module {
  val io = IO(new Bundle {
    //val IN = Input(UInt(48.W))
    val OUT = Output(UInt(51.W))
    val IN = Input(Vec(51, UInt(1.W)))
    //val OUT = Output(Vec(48, UInt(1.W)))
    //val value = Output(UInt(8.W))
  })

  val result = Wire(Vec(51, UInt(1.W)))
  //io.OUT := result
  val wire = Wire(Vec(49, UInt(1.W)))

  //wire(46) := !io.IN(48) & !io.IN(47)
  //wire(45) := wire(46) & !io.IN(46)
  wire(48) := !io.IN(50) & !io.IN(49)
  wire(47) := wire(48) & !io.IN(48)
  wire(46) := wire(47) & !io.IN(47)
  wire(45) := wire(46) & !io.IN(46)
  wire(44) := wire(45) & !io.IN(45)
  wire(43) := wire(44) & !io.IN(44)
  wire(42) := wire(43) & !io.IN(43)
  wire(41) := wire(42) & !io.IN(42)
  wire(40) := wire(41) & !io.IN(41)
  wire(39) := wire(40) & !io.IN(40)
  wire(38) := wire(39) & !io.IN(39)
  wire(37) := wire(38) & !io.IN(38)
  wire(36) := wire(37) & !io.IN(37)
  wire(35) := wire(36) & !io.IN(36)
  wire(34) := wire(35) & !io.IN(35)
  wire(33) := wire(34) & !io.IN(34)
  wire(32) := wire(33) & !io.IN(33)
  wire(31) := wire(32) & !io.IN(32)
  wire(30) := wire(31) & !io.IN(31)
  wire(29) := wire(30) & !io.IN(30)
  wire(28) := wire(29) & !io.IN(29)
  wire(27) := wire(28) & !io.IN(28)
  wire(26) := wire(27) & !io.IN(27)
  wire(25) := wire(26) & !io.IN(26)
  wire(24) := wire(25) & !io.IN(25)
  wire(23) := wire(24) & !io.IN(24)
  wire(22) := wire(23) & !io.IN(23)
  wire(21) := wire(22) & !io.IN(22)
  wire(20) := wire(21) & !io.IN(21)
  wire(19) := wire(20) & !io.IN(20)
  wire(18) := wire(19) & !io.IN(19)
  wire(17) := wire(18) & !io.IN(18)
  wire(16) := wire(17) & !io.IN(17)
  wire(15) := wire(16) & !io.IN(16)
  wire(14) := wire(15) & !io.IN(15)
  wire(13) := wire(14) & !io.IN(14)
  wire(12) := wire(13) & !io.IN(13)
  wire(11) := wire(12) & !io.IN(12)
  wire(10) := wire(11) & !io.IN(11)
  wire(9) := wire(10) & !io.IN(10)
  wire(8) := wire(9) & !io.IN(9)
  wire(7) := wire(8) & !io.IN(8)
  wire(6) := wire(7) & !io.IN(7)
  wire(5) := wire(6) & !io.IN(6)
  wire(4) := wire(5) & !io.IN(5)
  wire(3) := wire(4) & !io.IN(4)
  wire(2) := wire(3) & !io.IN(3)
  wire(1) := wire(2) & !io.IN(2)
  wire(0) := wire(1) & !io.IN(1)

  //result(48) := io.IN(48)
  //result(47) := !io.IN(48) & io.IN(47)
  //result(46) := wire(46) & io.IN(46)
  result(50) := io.IN(50)
  result(49) := !io.IN(50) & io.IN(49)
  result(48) := wire(48) & io.IN(48)
  result(47) := wire(47) & io.IN(47)
  result(46) := wire(46) & io.IN(46)
  result(45) := wire(45) & io.IN(45)
  result(44) := wire(44) & io.IN(44)
  result(43) := wire(43) & io.IN(43)
  result(42) := wire(42) & io.IN(42)
  result(41) := wire(41) & io.IN(41)
  result(40) := wire(40) & io.IN(40)
  result(39) := wire(39) & io.IN(39)
  result(38) := wire(38) & io.IN(38)
  result(37) := wire(37) & io.IN(37)
  result(36) := wire(36) & io.IN(36)
  result(35) := wire(35) & io.IN(35)
  result(34) := wire(34) & io.IN(34)
  result(33) := wire(33) & io.IN(33)
  result(32) := wire(32) & io.IN(32)
  result(31) := wire(31) & io.IN(31)
  result(30) := wire(30) & io.IN(30)
  result(29) := wire(29) & io.IN(29)
  result(28) := wire(28) & io.IN(28)
  result(27) := wire(27) & io.IN(27)
  result(26) := wire(26) & io.IN(26)
  result(25) := wire(25) & io.IN(25)
  result(24) := wire(24) & io.IN(24)
  result(23) := wire(23) & io.IN(23)
  result(22) := wire(22) & io.IN(22)
  result(21) := wire(21) & io.IN(21)
  result(20) := wire(20) & io.IN(20)
  result(19) := wire(19) & io.IN(19)
  result(18) := wire(18) & io.IN(18)
  result(17) := wire(17) & io.IN(17)
  result(16) := wire(16) & io.IN(16)
  result(15) := wire(15) & io.IN(15)
  result(14) := wire(14) & io.IN(14)
  result(13) := wire(13) & io.IN(13)
  result(12) := wire(12) & io.IN(12)
  result(11) := wire(11) & io.IN(11)
  result(10) := wire(10) & io.IN(10)
  result(9) := wire(9) & io.IN(9)
  result(8) := wire(8) & io.IN(8)
  result(7) := wire(7) & io.IN(7)
  result(6) := wire(6) & io.IN(6)
  result(5) := wire(5) & io.IN(5)
  result(4) := wire(4) & io.IN(4)
  result(3) := wire(3) & io.IN(3)
  result(2) := wire(2) & io.IN(2)
  result(1) := wire(1) & io.IN(1)
  result(0) := wire(0) & io.IN(0)

  io.OUT := result(50) ## result(49) ## result(48) ## result(47) ## result(46) ## result(45) ## result(44) ## result(43) ## result(42) ## result(41) ## result(40) ##
    result(39) ## result(38) ## result(37) ## result(36) ## result(35) ## result(34) ## result(33) ## result(32) ## result(31) ## result(30) ##
    result(29) ## result(28) ## result(27) ## result(26) ## result(25) ## result(24) ## result(23) ## result(22) ## result(21) ## result(20) ##
    result(19) ## result(18) ## result(17) ## result(16) ## result(15) ## result(14) ## result(13) ## result(12) ## result(11) ## result(10) ##
    result(9) ## result(8) ## result(7) ## result(6) ## result(5) ## result(4) ## result(3) ## result(2) ## result(1) ## result(0)

  //val value_reg = Reg(UInt(8.W))
  //io.value := value_reg
  /*
    //switch (io.OUT) {
    switch (result_wire) {
      is ("b1000000000000000000000000".U) { value_reg := 0.U}
      is ("b0100000000000000000000000".U) { value_reg := 1.U}
      is ("b0010000000000000000000000".U) { value_reg := 2.U}
      is ("b0001000000000000000000000".U) { value_reg := 3.U}
      is ("b0000100000000000000000000".U) { value_reg := 4.U}
      is ("b0000010000000000000000000".U) { value_reg := 5.U}
      is ("b0000001000000000000000000".U) { value_reg := 6.U}
      is ("b0000000100000000000000000".U) { value_reg := 7.U}
      is ("b0000000010000000000000000".U) { value_reg := 8.U}
      is ("b0000000001000000000000000".U) { value_reg := 9.U}
      is ("b0000000000100000000000000".U) { value_reg := 10.U}
      is ("b0000000000010000000000000".U) { value_reg := 11.U}
      is ("b0000000000001000000000000".U) { value_reg := 12.U}
      is ("b0000000000000100000000000".U) { value_reg := 13.U}
      is ("b0000000000000010000000000".U) { value_reg := 14.U}
      is ("b0000000000000001000000000".U) { value_reg := 15.U}
      is ("b0000000000000000100000000".U) { value_reg := 16.U}
      is ("b0000000000000000010000000".U) { value_reg := 17.U}
      is ("b0000000000000000001000000".U) { value_reg := 18.U}
      is ("b0000000000000000000100000".U) { value_reg := 19.U}
      is ("b0000000000000000000010000".U) { value_reg := 20.U}
      is ("b0000000000000000000001000".U) { value_reg := 21.U}
      is ("b0000000000000000000000100".U) { value_reg := 22.U}
      is ("b0000000000000000000000010".U) { value_reg := 23.U}
      is ("b0000000000000000000000001".U) { value_reg := 24.U}
    }*/
}
*/
/*
class LZA4 extends Module{
  val io = IO(new Bundle {
    //val enable = Input(Bool())
    //val INA = Input(UInt(48.W))
    //val INB = Input(UInt(39.W))
    //val INC = Input(UInt(48.W))
    //val IND = Input(UInt(39.W))
    val INA = Input(UInt(51.W))
    val INB = Input(UInt(51.W))
    val INC = Input(UInt(51.W))
    val IND = Input(UInt(51.W))
    //val OUT = Output(UInt(48.W))
    val SHIFT_VALUE = Output(UInt(6.W))
    val CorrectionFlag = Output(UInt(1.W))
  })

  //val Wout = VecInit(Seq.fill(48)(0.U))
  val Wout = Wire(Vec(48, UInt(5.W)))
  val g = Wire(Vec(48, UInt(1.W)))
  val e = Wire(Vec(48, UInt(1.W)))
  val s = Wire(Vec(48, UInt(1.W)))
  val f = Wire(Vec(48, UInt(1.W)))

  val LODout = Wire(Vec(48, UInt(1.W)))
  //io.OUT := LODout

  val pp = Wire(Vec(48, UInt(1.W)))
  val pn = Wire(Vec(48, UInt(1.W)))
  val pz = Wire(Vec(48, UInt(1.W)))
  val np = Wire(Vec(48, UInt(1.W)))
  val nn = Wire(Vec(48, UInt(1.W)))
  val nz = Wire(Vec(48, UInt(1.W)))

  val PP0 = Wire(Vec(24, UInt(1.W)))
  val PN0 = Wire(Vec(24, UInt(1.W)))
  val PZ0 = Wire(Vec(24, UInt(1.W)))
  val PY0 = Wire(Vec(24, UInt(1.W)))

  val PP1 = Wire(Vec(12, UInt(1.W)))
  val PN1 = Wire(Vec(12, UInt(1.W)))
  val PZ1 = Wire(Vec(12, UInt(1.W)))
  val PY1 = Wire(Vec(12, UInt(1.W)))

  val PP2 = Wire(Vec(6, UInt(1.W)))
  val PN2 = Wire(Vec(6, UInt(1.W)))
  val PZ2 = Wire(Vec(6, UInt(1.W)))
  val PY2 = Wire(Vec(6, UInt(1.W)))

  val PP3 = Wire(Vec(3, UInt(1.W)))
  val PN3 = Wire(Vec(3, UInt(1.W)))
  val PZ3 = Wire(Vec(3, UInt(1.W)))
  val PY3 = Wire(Vec(3, UInt(1.W)))

  val PP4 = Wire(UInt(1.W))
  val PN4 = Wire(UInt(1.W))
  val PZ4 = Wire(UInt(1.W))
  val PY4 = Wire(UInt(1.W))

  val PP5 = Wire(UInt(1.W))
  val PN5 = Wire(UInt(1.W))
  val PZ5 = Wire(UInt(1.W))
  val PY5 = Wire(UInt(1.W))

  val NP0 = Wire(Vec(24, UInt(1.W)))
  val NN0 = Wire(Vec(24, UInt(1.W)))
  val NZ0 = Wire(Vec(24, UInt(1.W)))
  val NY0 = Wire(Vec(24, UInt(1.W)))

  val NP1 = Wire(Vec(12, UInt(1.W)))
  val NN1 = Wire(Vec(12, UInt(1.W)))
  val NZ1 = Wire(Vec(12, UInt(1.W)))
  val NY1 = Wire(Vec(12, UInt(1.W)))

  val NP2 = Wire(Vec(6, UInt(1.W)))
  val NN2 = Wire(Vec(6, UInt(1.W)))
  val NZ2 = Wire(Vec(6, UInt(1.W)))
  val NY2 = Wire(Vec(6, UInt(1.W)))

  val NP3 = Wire(Vec(3, UInt(1.W)))
  val NN3 = Wire(Vec(3, UInt(1.W)))
  val NZ3 = Wire(Vec(3, UInt(1.W)))
  val NY3 = Wire(Vec(3, UInt(1.W)))

  val NP4 = Wire(UInt(1.W))
  val NN4 = Wire(UInt(1.W))
  val NZ4 = Wire(UInt(1.W))
  val NY4 = Wire(UInt(1.W))

  val NP5 = Wire(UInt(1.W))
  val NN5 = Wire(UInt(1.W))
  val NZ5 = Wire(UInt(1.W))
  val NY5 = Wire(UInt(1.W))

  printf("shift_value = %b\n", io.SHIFT_VALUE)
/*
  io.OUT := f(47) ## f(46) ## f(45) ## f(44) ## f(43) ## f(42) ## f(41) ## f(40) ##
    f(39) ## f(38) ## f(37) ## f(36) ## f(35) ## f(34) ## f(33) ## f(32) ## f(31) ## f(30) ##
    f(29) ## f(28) ## f(27) ## f(26) ## f(25) ## f(24) ## f(23) ## f(22) ## f(21) ## f(20) ##
    f(19) ## f(18) ## f(17) ## f(16) ## f(15) ## f(14) ## f(13) ## f(12) ## f(11) ## f(10) ##
    f(9) ## f(8) ## f(7) ## f(6) ## f(5) ## f(4) ## f(3) ## f(2) ## f(1) ## f(0)

 */
  val Wgen = Module(new W48)
  Wgen.io.INA := io.INA
  Wgen.io.INB := io.INB
  Wgen.io.INC := io.INC
  Wgen.io.IND := io.IND
  Wout := Wgen.io.OUT
  val GESgen = Module(new GES48)
  GESgen.io.Win := Wout
  g := GESgen.io.Gout
  e := GESgen.io.Eout
  s := GESgen.io.Sout
  val Fgen = Module(new F48)
  Fgen.io.Gin := g
  Fgen.io.Ein := e
  Fgen.io.Sin := s
  f := Fgen.io.Fout

  val LOD = Module(new LODinLZA)
  LOD.io.IN := f
  LODout := LOD.io.OUT

  val shift_value = Wire(Vec(6, UInt(1.W)))
  shift_value(5) := LODout(15) | LODout(14) | LODout(13) | LODout(12) | LODout(11) | LODout(10) | LODout(9) | LODout(8) |
    LODout(7) | LODout(6) | LODout(5) | LODout(4) | LODout(3) | LODout(2) | LODout(1) | LODout(0)
  shift_value(4) := LODout(31) | LODout(30) | LODout(29) | LODout(28) | LODout(27) | LODout(26) | LODout(25) | LODout(24) |
    LODout(23) | LODout(22) | LODout(21) | LODout(20) | LODout(19) | LODout(18) | LODout(17) | LODout(16) | LODout(0)
  shift_value(3) := LODout(39) | LODout(38) | LODout(37) | LODout(36) | LODout(35) | LODout(34) | LODout(33) | LODout(32) |
    LODout(23) | LODout(22) | LODout(21) | LODout(20) | LODout(19) | LODout(18) | LODout(17) | LODout(16) |
    LODout(7) | LODout(6) | LODout(5) | LODout(4) | LODout(3) | LODout(2) | LODout(1) | LODout(0)
  shift_value(2) := LODout(43) | LODout(42) | LODout(41) | LODout(40) | LODout(35) | LODout(34) | LODout(33) | LODout(32) |
    LODout(27) | LODout(26) | LODout(25) | LODout(24) | LODout(19) | LODout(18) | LODout(17) | LODout(16) |
    LODout(11) | LODout(10) | LODout(9) | LODout(8) | LODout(3) | LODout(2) | LODout(1) | LODout(0)
  shift_value(1) := LODout(45) | LODout(44) | LODout(41) | LODout(40) | LODout(37) | LODout(36) | LODout(33) | LODout(32) |
    LODout(29) | LODout(28) | LODout(25) | LODout(24) | LODout(21) | LODout(20) | LODout(17) | LODout(16) |
    LODout(13) | LODout(12) | LODout(9) | LODout(8) | LODout(5) | LODout(4) | LODout(1) | LODout(0)
  shift_value(0) := LODout(46) | LODout(44) | LODout(42) | LODout(40) | LODout(38) | LODout(36) | LODout(34) | LODout(32) |
    LODout(30) | LODout(28) | LODout(26) | LODout(24) | LODout(22) | LODout(20) | LODout(18) | LODout(16) |
    LODout(14) | LODout(12) | LODout(10) | LODout(8) | LODout(6) | LODout(4) | LODout(2) | LODout(0)

  io.SHIFT_VALUE := shift_value(5) ## shift_value(4) ## shift_value(3) ## shift_value(2) ## shift_value(1) ## shift_value(0)

  val Gpgen = Module(new Gp48)
  Gpgen.io.Gin := g
  Gpgen.io.Ein := e
  Gpgen.io.Sin := s
  pp := Gpgen.io.Pout
  pn := Gpgen.io.Nout
  pz := Gpgen.io.Zout

  val PDTst0 = Module(new PositiveDetectionTree0)
  PDTst0.io.Pin := pp
  PDTst0.io.Nin := pn
  PDTst0.io.Zin := pz
  PP0 := PDTst0.io.Pout
  PN0 := PDTst0.io.Nout
  PZ0 := PDTst0.io.Zout
  PY0 := PDTst0.io.Yout

  val PDTst1 = Module(new PositiveDetectionTree1)
  PDTst1.io.Pin := PP0
  PDTst1.io.Nin := PN0
  PDTst1.io.Zin := PZ0
  PDTst1.io.Yin := PY0
  PP1 := PDTst1.io.Pout
  PN1 := PDTst1.io.Nout
  PZ1 := PDTst1.io.Zout
  PY1 := PDTst1.io.Yout

  val PDTst2 = Module(new PositiveDetectionTree2)
  PDTst2.io.Pin := PP1
  PDTst2.io.Nin := PN1
  PDTst2.io.Zin := PZ1
  PDTst2.io.Yin := PY1
  PP2 := PDTst2.io.Pout
  PN2 := PDTst2.io.Nout
  PZ2 := PDTst2.io.Zout
  PY2 := PDTst2.io.Yout

  val PDTst3 = Module(new PositiveDetectionTree3)
  PDTst3.io.Pin := PP2
  PDTst3.io.Nin := PN2
  PDTst3.io.Zin := PZ2
  PDTst3.io.Yin := PY2
  PP3 := PDTst3.io.Pout
  PN3 := PDTst3.io.Nout
  PZ3 := PDTst3.io.Zout
  PY3 := PDTst3.io.Yout

  val PDTst4 = Module(new PositiveDetectionTree)

  PDTst4.io.Pin := PP3(2) ## PP3(1)
  PDTst4.io.Nin := PN3(2) ## PN3(1)
  PDTst4.io.Zin := PZ3(2) ## PZ3(1)
  PDTst4.io.Yin := PY3(2) ## PY3(1)

  PP4 := PDTst4.io.Pout
  PN4 := PDTst4.io.Nout
  PZ4 := PDTst4.io.Zout
  PY4 := PDTst4.io.Yout

  val PDTst5 = Module(new PositiveDetectionTree)

  PDTst5.io.Pin := PP4 ## PP3(0)
  PDTst5.io.Nin := PN4 ## PN3(0)
  PDTst5.io.Zin := PZ4 ## PZ3(0)
  PDTst5.io.Yin := PY4 ## PY3(0)

  PP5 := PDTst5.io.Pout
  PN5 := PDTst5.io.Nout
  PZ5 := PDTst5.io.Zout
  PY5 := PDTst5.io.Yout

  val Gngen = Module(new Gn48)
  Gngen.io.Gin := g
  Gngen.io.Ein := e
  Gngen.io.Sin := s
  np := Gngen.io.Pout
  nn := Gngen.io.Nout
  nz := Gngen.io.Zout

  val NDTst0 = Module(new NegativeDetectionTree0)
  NDTst0.io.Pin := np
  NDTst0.io.Nin := nn
  NDTst0.io.Zin := nz
  NP0 := NDTst0.io.Pout
  NN0 := NDTst0.io.Nout
  NZ0 := NDTst0.io.Zout
  NY0 := NDTst0.io.Yout

  val NDTst1 = Module(new NegativeDetectionTree1)
  NDTst1.io.Pin := NP0
  NDTst1.io.Nin := NN0
  NDTst1.io.Zin := NZ0
  NDTst1.io.Yin := NY0
  NP1 := NDTst1.io.Pout
  NN1 := NDTst1.io.Nout
  NZ1 := NDTst1.io.Zout
  NY1 := NDTst1.io.Yout

  val NDTst2 = Module(new NegativeDetectionTree2)
  NDTst2.io.Pin := NP1
  NDTst2.io.Nin := NN1
  NDTst2.io.Zin := NZ1
  NDTst2.io.Yin := NY1
  NP2 := NDTst2.io.Pout
  NN2 := NDTst2.io.Nout
  NZ2 := NDTst2.io.Zout
  NY2 := NDTst2.io.Yout

  val NDTst3 = Module(new NegativeDetectionTree3)
  NDTst3.io.Pin := NP2
  NDTst3.io.Nin := NN2
  NDTst3.io.Zin := NZ2
  NDTst3.io.Yin := NY2
  NP3 := NDTst3.io.Pout
  NN3 := NDTst3.io.Nout
  NZ3 := NDTst3.io.Zout
  NY3 := NDTst3.io.Yout

  val NDTst4 = Module(new NegativeDetectionTree)

  NDTst4.io.Pin := NP3(2) ## NP3(1)
  NDTst4.io.Nin := NN3(2) ## NN3(1)
  NDTst4.io.Zin := NZ3(2) ## NZ3(1)
  NDTst4.io.Yin := NY3(2) ## NY3(1)

  NP4 := NDTst4.io.Pout
  NN4 := NDTst4.io.Nout
  NZ4 := NDTst4.io.Zout
  NY4 := NDTst4.io.Yout

  val NDTst5 = Module(new NegativeDetectionTree)

  NDTst5.io.Pin := NP4 ## NP3(0)
  NDTst5.io.Nin := NN4 ## NN3(0)
  NDTst5.io.Zin := NZ4 ## NZ3(0)
  NDTst5.io.Yin := NY4 ## NY3(0)

  NP5 := NDTst5.io.Pout
  NN5 := NDTst5.io.Nout
  NZ5 := NDTst5.io.Zout
  NY5 := NDTst5.io.Yout

  io.CorrectionFlag := PY5 | NY5


/*
  val PP0wire = Wire(UInt(24.W))
  val PN0wire = Wire(UInt(24.W))
  val PZ0wire = Wire(UInt(24.W))
  val PY0wire = Wire(UInt(24.W))
  PP0wire := PP0(23) ## PP0(22) ## PP0(21) ## PP0(20) ##
    PP0(19) ## PP0(18) ## PP0(17) ## PP0(16) ## PP0(15) ## PP0(14) ## PP0(13) ## PP0(12) ## PP0(11) ## PP0(10) ##
    PP0(9) ## PP0(8) ## PP0(7) ## PP0(6) ## PP0(5) ## PP0(4) ## PP0(3) ## PP0(2) ## PP0(1) ## PP0(0)
  PN0wire := PN0(23) ## PN0(22) ## PN0(21) ## PN0(20) ##
    PN0(19) ## PN0(18) ## PN0(17) ## PN0(16) ## PN0(15) ## PN0(14) ## PN0(13) ## PN0(12) ## PN0(11) ## PN0(10) ##
    PN0(9) ## PN0(8) ## PN0(7) ## PN0(6) ## PN0(5) ## PN0(4) ## PN0(3) ## PN0(2) ## PN0(1) ## PN0(0)
  PZ0wire := PZ0(23) ## PZ0(22) ## PZ0(21) ## PZ0(20) ##
    PZ0(19) ## PZ0(18) ## PZ0(17) ## PZ0(16) ## PZ0(15) ## PZ0(14) ## PZ0(13) ## PZ0(12) ## PZ0(11) ## PZ0(10) ##
    PZ0(9) ## PZ0(8) ## PZ0(7) ## PZ0(6) ## PZ0(5) ## PZ0(4) ## PZ0(3) ## PZ0(2) ## PZ0(1) ## PZ0(0)
  PY0wire := PY0(23) ## PY0(22) ## PY0(21) ## PY0(20) ##
    PY0(19) ## PY0(18) ## PY0(17) ## PY0(16) ## PY0(15) ## PY0(14) ## PY0(13) ## PY0(12) ## PY0(11) ## PY0(10) ##
    PY0(9) ## PY0(8) ## PY0(7) ## PY0(6) ## PY0(5) ## PY0(4) ## PY0(3) ## PY0(2) ## PY0(1) ## PY0(0)
  printf("PP0 = %b\n", PP0wire)
  printf("PN0 = %b\n", PN0wire)
  printf("PZ0 = %b\n", PZ0wire)
  printf("PY0 = %b\n", PY0wire)
  val PP1wire = Wire(UInt(12.W))
  val PN1wire = Wire(UInt(12.W))
  val PZ1wire = Wire(UInt(12.W))
  val PY1wire = Wire(UInt(12.W))
  PP1wire := PP1(11) ## PP1(10) ##
    PP1(9) ## PP1(8) ## PP1(7) ## PP1(6) ## PP1(5) ## PP1(4) ## PP1(3) ## PP1(2) ## PP1(1) ## PP1(0)
  PN1wire := PN1(11) ## PN1(10) ##
    PN1(9) ## PN1(8) ## PN1(7) ## PN1(6) ## PN1(5) ## PN1(4) ## PN1(3) ## PN1(2) ## PN1(1) ## PN1(0)
  PZ1wire := PZ1(11) ## PZ1(10) ##
    PZ1(9) ## PZ1(8) ## PZ1(7) ## PZ1(6) ## PZ1(5) ## PZ1(4) ## PZ1(3) ## PZ1(2) ## PZ1(1) ## PZ1(0)
  PY1wire := PY1(11) ## PY1(10) ##
    PY1(9) ## PY1(8) ## PY1(7) ## PY1(6) ## PY1(5) ## PY1(4) ## PY1(3) ## PY1(2) ## PY1(1) ## PY1(0)
  printf("PP1 = %b\n", PP1wire)
  printf("PN1 = %b\n", PN1wire)
  printf("PZ1 = %b\n", PZ1wire)
  printf("PY1 = %b\n", PY1wire)

  val PY2wire = Wire(UInt(6.W))
  PY2wire := PY2(5) ## PY2(4) ## PY2(3) ## PY2(2) ## PY2(1) ## PY2(0)
  printf("PY2 = %b\n", PY2wire)

  val PY3wire = Wire(UInt(3.W))
  PY3wire := PY3(2) ## PY3(1) ## PY3(0)
  printf("PY3 = %b\n", PY3wire)
  printf("PY4 = %b\n", PY4)
  printf("PY5 = %b\n", PY5)

 */
}


class W extends Module{
  val io = IO(new Bundle {
    val INA = Input(UInt(1.W))
    val INB = Input(UInt(1.W))
    val INC = Input(UInt(1.W))
    val IND = Input(UInt(1.W))
    val OUT = Output(UInt(5.W))
  })

  val result = Wire(Vec(5, UInt(1.W)))
  io.OUT := result(4) ## result(3) ##  result(2) ## result(1) ## result(0)
  /*
  printf("A = %b\n", io.INA)
  printf("B = %b\n", io.INB)
  printf("C = %b\n", io.INC)
  printf("D = %b\n", io.IND)
  printf("OUT = %b\n", io.OUT)
   */

  result(4) := (io.INA & io.INB) & (!io.INC & !io.IND) //2
  result(3) := ((io.INA & io.INB) & (io.INC ^ io.IND)) | ((io.INA ^ io.INB) & (!io.INC & !io.IND)) //1
  result(2) := ((io.INA & io.INB) & (io.INC & io.IND)) | ((io.INA ^ io.INB) & (io.INC ^ io.IND)) | !((io.INA | io.INB) | (io.INC | io.IND)) //0
  result(1) := ((!io.INA & !io.INB) & (io.INC ^ io.IND)) | ((io.INA ^ io.INB) & (io.INC & io.IND)) //-1
  result(0) := (!io.INA & !io.INB) & (io.INC & io.IND) //-2
  //result(1) := (((io.INA & io.INB) & (!io.INC ^ !io.IND)) | ((io.INA ^ io.INB) & (!io.INC & !io.IND))) | (((io.INA & io.INB) & (io.INC & io.IND)) | ((io.INA ^ io.INB) & (io.INC ^ io.IND)))
  //result(0) := (((!io.INA & !io.INB) & (io.INC ^ io.IND)) | ((!io.INA ^ !io.INB) & (io.INC & io.IND))) | ((!io.INA & !io.INB) & (io.INC & io.IND))

}

class W48 extends Module {
  val io = IO(new Bundle {
    val INA = Input(UInt(48.W))
    val INB = Input(UInt(39.W))
    val INC = Input(UInt(48.W))
    val IND = Input(UInt(39.W))
    val OUT = Output(Vec(48, UInt(5.W)))
  })

  val Wout = Wire(Vec(48, UInt(5.W)))

  io.OUT := Wout

  val W47 = Module(new W)
  W47.io.INA := io.INA(47)
  W47.io.INB := io.INB(37)
  W47.io.INC := io.INC(47)
  W47.io.IND := io.IND(37)
  Wout(47) := W47.io.OUT
  val W46 = Module(new W)
  W46.io.INA := io.INA(46)
  W46.io.INB := io.INB(36)
  W46.io.INC := io.INC(46)
  W46.io.IND := io.IND(36)
  Wout(46) := W46.io.OUT
  val W45 = Module(new W)
  W45.io.INA := io.INA(45)
  W45.io.INB := io.INB(35)
  W45.io.INC := io.INC(45)
  W45.io.IND := io.IND(35)
  Wout(45) := W45.io.OUT
  val W44 = Module(new W)
  W44.io.INA := io.INA(44)
  W44.io.INB := io.INB(34)
  W44.io.INC := io.INC(44)
  W44.io.IND := io.IND(34)
  Wout(44) := W44.io.OUT
  val W43 = Module(new W)
  W43.io.INA := io.INA(43)
  W43.io.INB := io.INB(33)
  W43.io.INC := io.INC(43)
  W43.io.IND := io.IND(33)
  Wout(43) := W43.io.OUT
  val W42 = Module(new W)
  W42.io.INA := io.INA(42)
  W42.io.INB := io.INB(32)
  W42.io.INC := io.INC(42)
  W42.io.IND := io.INC(32)
  Wout(42) := W42.io.OUT
  val W41 = Module(new W)
  W41.io.INA := io.INA(41)
  W41.io.INB := io.INB(31)
  W41.io.INC := io.INC(41)
  W41.io.IND := io.IND(31)
  Wout(41) := W41.io.OUT
  val W40 = Module(new W)
  W40.io.INA := io.INA(40)
  W40.io.INB := io.INB(30)
  W40.io.INC := io.INC(40)
  W40.io.IND := io.IND(30)
  Wout(40) := W40.io.OUT
  val W39 = Module(new W)
  W39.io.INA := io.INA(39)
  W39.io.INB := io.INB(29)
  W39.io.INC := io.INC(39)
  W39.io.IND := io.IND(29)
  Wout(39) := W39.io.OUT
  val W38 = Module(new W)
  W38.io.INA := io.INA(38)
  W38.io.INB := io.INB(28)
  W38.io.INC := io.INC(38)
  W38.io.IND := io.IND(28)
  Wout(38) := W38.io.OUT
  val W37 = Module(new W)
  W37.io.INA := io.INA(37)
  W37.io.INB := io.INB(27)
  W37.io.INC := io.INC(37)
  W37.io.IND := io.IND(27)
  Wout(37) := W37.io.OUT
  val W36 = Module(new W)
  W36.io.INA := io.INA(36)
  W36.io.INB := io.INB(26)
  W36.io.INC := io.INC(36)
  W36.io.IND := io.IND(26)
  Wout(36) := W36.io.OUT
  val W35 = Module(new W)
  W35.io.INA := io.INA(35)
  W35.io.INB := io.INB(25)
  W35.io.INC := io.INC(35)
  W35.io.IND := io.IND(25)
  Wout(35) := W35.io.OUT
  val W34 = Module(new W)
  W34.io.INA := io.INA(34)
  W34.io.INB := io.INB(24)
  W34.io.INC := io.INC(34)
  W34.io.IND := io.IND(24)
  Wout(34) := W34.io.OUT
  val W33 = Module(new W)
  W33.io.INA := io.INA(33)
  W33.io.INB := io.INB(23)
  W33.io.INC := io.INC(33)
  W33.io.IND := io.IND(23)
  Wout(33) := W33.io.OUT
  val W32 = Module(new W)
  W32.io.INA := io.INA(32)
  W32.io.INB := io.INB(22)
  W32.io.INC := io.INC(32)
  W32.io.IND := io.IND(22)
  Wout(32) := W32.io.OUT
  val W31 = Module(new W)
  W31.io.INA := io.INA(31)
  W31.io.INB := io.INB(21)
  W31.io.INC := io.INC(31)
  W31.io.IND := io.IND(21)
  Wout(31) := W31.io.OUT
  val W30 = Module(new W)
  W30.io.INA := io.INA(30)
  W30.io.INB := io.INB(20)
  W30.io.INC := io.INC(30)
  W30.io.IND := io.IND(20)
  Wout(30) := W30.io.OUT
  val W29 = Module(new W)
  W29.io.INA := io.INA(29)
  W29.io.INB := io.INB(19)
  W29.io.INC := io.INC(29)
  W29.io.IND := io.IND(19)
  Wout(29) := W29.io.OUT
  val W28 = Module(new W)
  W28.io.INA := io.INA(28)
  W28.io.INB := io.INB(18)
  W28.io.INC := io.INC(28)
  W28.io.IND := io.IND(18)
  Wout(28) := W28.io.OUT
  val W27 = Module(new W)
  W27.io.INA := io.INA(27)
  W27.io.INB := io.INB(17)
  W27.io.INC := io.INC(27)
  W27.io.IND := io.IND(17)
  Wout(27) := W27.io.OUT
  val W26 = Module(new W)
  W26.io.INA := io.INA(26)
  W26.io.INB := io.INB(16)
  W26.io.INC := io.INC(26)
  W26.io.IND := io.IND(16)
  Wout(26) := W26.io.OUT
  val W25 = Module(new W)
  W25.io.INA := io.INA(25)
  W25.io.INB := io.INB(15)
  W25.io.INC := io.INC(25)
  W25.io.IND := io.IND(15)
  Wout(25) := W25.io.OUT
  val W24 = Module(new W)
  W24.io.INA := io.INA(24)
  W24.io.INB := io.INB(14)
  W24.io.INC := io.INC(24)
  W24.io.IND := io.IND(14)
  Wout(24) := W24.io.OUT
  val W23 = Module(new W)
  W23.io.INA := io.INA(23)
  W23.io.INB := io.INB(13)
  W23.io.INC := io.INC(23)
  W23.io.IND := io.IND(13)
  Wout(23) := W23.io.OUT
  val W22 = Module(new W)
  W22.io.INA := io.INA(22)
  W22.io.INB := io.INB(12)
  W22.io.INC := io.INC(22)
  W22.io.IND := io.IND(12)
  Wout(22) := W22.io.OUT
  val W21 = Module(new W)
  W21.io.INA := io.INA(21)
  W21.io.INB := io.INB(11)
  W21.io.INC := io.INC(21)
  W21.io.IND := io.IND(11)
  Wout(21) := W21.io.OUT
  val W20 = Module(new W)
  W20.io.INA := io.INA(20)
  W20.io.INB := io.INB(10)
  W20.io.INC := io.INC(20)
  W20.io.IND := io.IND(10)
  Wout(20) := W20.io.OUT
  val W19 = Module(new W)
  W19.io.INA := io.INA(19)
  W19.io.INB := io.INB(9)
  W19.io.INC := io.INC(19)
  W19.io.IND := io.IND(9)
  Wout(19) := W19.io.OUT
  val W18 = Module(new W)
  W18.io.INA := io.INA(18)
  W18.io.INB := io.INB(8)
  W18.io.INC := io.INC(18)
  W18.io.IND := io.IND(8)
  Wout(18) := W18.io.OUT
  val W17 = Module(new W)
  W17.io.INA := io.INA(17)
  W17.io.INB := io.INB(7)
  W17.io.INC := io.INC(17)
  W17.io.IND := io.IND(7)
  Wout(17) := W17.io.OUT
  val W16 = Module(new W)
  W16.io.INA := io.INA(16)
  W16.io.INB := io.INB(6)
  W16.io.INC := io.INC(16)
  W16.io.IND := io.IND(6)
  Wout(16) := W16.io.OUT
  val W15 = Module(new W)
  W15.io.INA := io.INA(15)
  W15.io.INB := io.INB(5)
  W15.io.INC := io.INC(15)
  W15.io.IND := io.IND(5)
  Wout(15) := W15.io.OUT
  val W14 = Module(new W)
  W14.io.INA := io.INA(14)
  W14.io.INB := io.INB(4)
  W14.io.INC := io.INC(14)
  W14.io.IND := io.IND(4)
  Wout(14) := W14.io.OUT
  val W13 = Module(new W)
  W13.io.INA := io.INA(13)
  W13.io.INB := io.INB(3)
  W13.io.INC := io.INC(13)
  W13.io.IND := io.IND(3)
  Wout(13) := W13.io.OUT
  val W12 = Module(new W)
  W12.io.INA := io.INA(12)
  W12.io.INB := io.INB(2)
  W12.io.INC := io.INC(12)
  W12.io.IND := io.IND(2)
  Wout(12) := W12.io.OUT
  val W11 = Module(new W)
  W11.io.INA := io.INA(11)
  W11.io.INB := io.INB(1)
  W11.io.INC := io.INC(11)
  W11.io.IND := io.IND(1)
  Wout(11) := W11.io.OUT
  val W10 = Module(new W)
  W10.io.INA := io.INA(10)
  W10.io.INB := io.INB(0)
  W10.io.INC := io.INC(10)
  W10.io.IND := io.IND(0)
  Wout(10) := W10.io.OUT

  val W9 = Module(new W)
  W9.io.INA := io.INA(9)
  W9.io.INB := 0.U
  W9.io.INC := io.INC(9)
  W9.io.IND := 0.U
  Wout(9) := W9.io.OUT
  val W8 = Module(new W)
  W8.io.INA := io.INA(8)
  W8.io.INB := 0.U
  W8.io.INC := io.INC(8)
  W8.io.IND := 0.U
  Wout(8) := W8.io.OUT
  val W7 = Module(new W)
  W7.io.INA := io.INA(7)
  W7.io.INB := 0.U
  W7.io.INC := io.INC(7)
  W7.io.IND := 0.U
  Wout(7) := W7.io.OUT
  val W6 = Module(new W)
  W6.io.INA := io.INA(6)
  W6.io.INB := 0.U
  W6.io.INC := io.INC(6)
  W6.io.IND := 0.U
  Wout(6) := W6.io.OUT
  val W5 = Module(new W)
  W5.io.INA := io.INA(5)
  W5.io.INB := 0.U
  W5.io.INC := io.INC(5)
  W5.io.IND := 0.U
  Wout(5) := W5.io.OUT
  val W4 = Module(new W)
  W4.io.INA := io.INA(4)
  W4.io.INB := 0.U
  W4.io.INC := io.INC(4)
  W4.io.IND := 0.U
  Wout(4) := W4.io.OUT
  val W3 = Module(new W)
  W3.io.INA := io.INA(3)
  W3.io.INB := 0.U
  W3.io.INC := io.INC(3)
  W3.io.IND := 0.U
  Wout(3) := W3.io.OUT
  val W2 = Module(new W)
  W2.io.INA := io.INA(2)
  W2.io.INB := 0.U
  W2.io.INC := io.INC(2)
  W2.io.IND := 0.U
  Wout(2) := W2.io.OUT
  val W1 = Module(new W)
  W1.io.INA := io.INA(1)
  W1.io.INB := 0.U
  W1.io.INC := io.INC(1)
  W1.io.IND := 0.U
  Wout(1) := W1.io.OUT
  val W0 = Module(new W)
  W0.io.INA := io.INA(0)
  W0.io.INB := 0.U
  W0.io.INC := io.INC(0)
  W0.io.IND := 0.U
  Wout(0) := W0.io.OUT
}

class GES extends Module {
  val io = IO(new Bundle {
    val INcur = Input(UInt(5.W))
    val INnext = Input(UInt(5.W))
    val G = Output(UInt(1.W))
    val E = Output(UInt(1.W))
    val S = Output(UInt(1.W))
  })
  io.G := (io.INcur(4) & (io.INnext(4) | io.INnext(0))) | (io.INcur(3) & (io.INnext(3) | io.INnext(2) | io.INnext(1))) | (io.INcur(2) & io.INnext(4))
  io.E := (io.INcur(4) & (io.INnext(3) | io.INnext(2) | io.INnext(1))) | (io.INcur(3) & (io.INnext(4) | io.INnext(0))) | (io.INcur(2) & (io.INnext(3) | io.INnext(2) | io.INnext(1))) | (io.INcur(1) & (io.INnext(4) | io.INnext(0))) | (io.INcur(0) & (io.INnext(3) | io.INnext(2) | io.INnext(1)))
  io.S := (io.INcur(2) & io.INnext(0)) | (io.INcur(1) & (io.INnext(3) | io.INnext(2) | io.INnext(1))) | (io.INcur(0) & (io.INnext(4) | io.INnext(0)))
}

class GES48 extends  Module {
  val io = IO(new Bundle {
    val Win = Input(Vec(48, UInt(5.W)))
    val Gout = Output(Vec(48, UInt(1.W)))
    val Eout = Output(Vec(48, UInt(1.W)))
    val Sout = Output(Vec(48, UInt(1.W)))
  })

  val Wout = Wire(Vec(48, UInt(5.W)))
  val g = Wire(Vec(48, UInt(1.W)))
  val e = Wire(Vec(48, UInt(1.W)))
  val s = Wire(Vec(48, UInt(1.W)))

  Wout := io.Win
  io.Gout := g
  io.Eout := e
  io.Sout := s

  val GES0 = Module(new GES)
  GES0.io.INcur := Wout(0)
  GES0.io.INnext := Wout(1)
  g(0) := GES0.io.G
  e(0) := GES0.io.E
  s(0) := GES0.io.S
  val GES1 = Module(new GES)
  GES1.io.INcur := Wout(1)
  GES1.io.INnext := Wout(2)
  g(1) := GES1.io.G
  e(1) := GES1.io.E
  s(1) := GES1.io.S
  val GES2 = Module(new GES)
  GES2.io.INcur := Wout(2)
  GES2.io.INnext := Wout(3)
  g(2) := GES2.io.G
  e(2) := GES2.io.E
  s(2) := GES2.io.S
  val GES3 = Module(new GES)
  GES3.io.INcur := Wout(3)
  GES3.io.INnext := Wout(4)
  g(3) := GES3.io.G
  e(3) := GES3.io.E
  s(3) := GES3.io.S
  val GES4 = Module(new GES)
  GES4.io.INcur := Wout(4)
  GES4.io.INnext := Wout(5)
  g(4) := GES4.io.G
  e(4) := GES4.io.E
  s(4) := GES4.io.S
  val GES5 = Module(new GES)
  GES5.io.INcur := Wout(5)
  GES5.io.INnext := Wout(6)
  g(5) := GES5.io.G
  e(5) := GES5.io.E
  s(5) := GES5.io.S
  val GES6 = Module(new GES)
  GES6.io.INcur := Wout(6)
  GES6.io.INnext := Wout(7)
  g(6) := GES6.io.G
  e(6) := GES6.io.E
  s(6) := GES6.io.S
  val GES7 = Module(new GES)
  GES7.io.INcur := Wout(7)
  GES7.io.INnext := Wout(8)
  g(7) := GES7.io.G
  e(7) := GES7.io.E
  s(7) := GES7.io.S
  val GES8 = Module(new GES)
  GES8.io.INcur := Wout(8)
  GES8.io.INnext := Wout(9)
  g(8) := GES8.io.G
  e(8) := GES8.io.E
  s(8) := GES8.io.S
  val GES9 = Module(new GES)
  GES9.io.INcur := Wout(9)
  GES9.io.INnext := Wout(10)
  g(9) := GES9.io.G
  e(9) := GES9.io.E
  s(9) := GES9.io.S
  val GES10 = Module(new GES)
  GES10.io.INcur := Wout(10)
  GES10.io.INnext := Wout(11)
  g(10) := GES10.io.G
  e(10) := GES10.io.E
  s(10) := GES10.io.S
  val GES11 = Module(new GES)
  GES11.io.INcur := Wout(11)
  GES11.io.INnext := Wout(12)
  g(11) := GES11.io.G
  e(11) := GES11.io.E
  s(11) := GES11.io.S
  val GES12 = Module(new GES)
  GES12.io.INcur := Wout(12)
  GES12.io.INnext := Wout(13)
  g(12) := GES12.io.G
  e(12) := GES12.io.E
  s(12) := GES12.io.S
  val GES13 = Module(new GES)
  GES13.io.INcur := Wout(13)
  GES13.io.INnext := Wout(14)
  g(13) := GES13.io.G
  e(13) := GES13.io.E
  s(13) := GES13.io.S
  val GES14 = Module(new GES)
  GES14.io.INcur := Wout(14)
  GES14.io.INnext := Wout(15)
  g(14) := GES14.io.G
  e(14) := GES14.io.E
  s(14) := GES14.io.S
  val GES15 = Module(new GES)
  GES15.io.INcur := Wout(15)
  GES15.io.INnext := Wout(16)
  g(15) := GES15.io.G
  e(15) := GES15.io.E
  s(15) := GES15.io.S
  val GES16 = Module(new GES)
  GES16.io.INcur := Wout(16)
  GES16.io.INnext := Wout(17)
  g(16) := GES16.io.G
  e(16) := GES16.io.E
  s(16) := GES16.io.S
  val GES17 = Module(new GES)
  GES17.io.INcur := Wout(17)
  GES17.io.INnext := Wout(18)
  g(17) := GES17.io.G
  e(17) := GES17.io.E
  s(17) := GES17.io.S
  val GES18 = Module(new GES)
  GES18.io.INcur := Wout(18)
  GES18.io.INnext := Wout(19)
  g(18) := GES18.io.G
  e(18) := GES18.io.E
  s(18) := GES18.io.S
  val GES19 = Module(new GES)
  GES19.io.INcur := Wout(19)
  GES19.io.INnext := Wout(20)
  g(19) := GES19.io.G
  e(19) := GES19.io.E
  s(19) := GES19.io.S
  val GES20 = Module(new GES)
  GES20.io.INcur := Wout(20)
  GES20.io.INnext := Wout(21)
  g(20) := GES20.io.G
  e(20) := GES20.io.E
  s(20) := GES20.io.S
  val GES21 = Module(new GES)
  GES21.io.INcur := Wout(21)
  GES21.io.INnext := Wout(22)
  g(21) := GES21.io.G
  e(21) := GES21.io.E
  s(21) := GES21.io.S
  val GES22 = Module(new GES)
  GES22.io.INcur := Wout(22)
  GES22.io.INnext := Wout(23)
  g(22) := GES22.io.G
  e(22) := GES22.io.E
  s(22) := GES22.io.S
  val GES23 = Module(new GES)
  GES23.io.INcur := Wout(23)
  GES23.io.INnext := Wout(24)
  g(23) := GES23.io.G
  e(23) := GES23.io.E
  s(23) := GES23.io.S
  val GES24 = Module(new GES)
  GES24.io.INcur := Wout(24)
  GES24.io.INnext := Wout(25)
  g(24) := GES24.io.G
  e(24) := GES24.io.E
  s(24) := GES24.io.S
  val GES25 = Module(new GES)
  GES25.io.INcur := Wout(25)
  GES25.io.INnext := Wout(26)
  g(25) := GES25.io.G
  e(25) := GES25.io.E
  s(25) := GES25.io.S
  val GES26 = Module(new GES)
  GES26.io.INcur := Wout(26)
  GES26.io.INnext := Wout(27)
  g(26) := GES26.io.G
  e(26) := GES26.io.E
  s(26) := GES26.io.S
  val GES27 = Module(new GES)
  GES27.io.INcur := Wout(27)
  GES27.io.INnext := Wout(28)
  g(27) := GES27.io.G
  e(27) := GES27.io.E
  s(27) := GES27.io.S
  val GES28 = Module(new GES)
  GES28.io.INcur := Wout(28)
  GES28.io.INnext := Wout(29)
  g(28) := GES28.io.G
  e(28) := GES28.io.E
  s(28) := GES28.io.S
  val GES29 = Module(new GES)
  GES29.io.INcur := Wout(29)
  GES29.io.INnext := Wout(30)
  g(29) := GES29.io.G
  e(29) := GES29.io.E
  s(29) := GES29.io.S
  val GES30 = Module(new GES)
  GES30.io.INcur := Wout(30)
  GES30.io.INnext := Wout(31)
  g(30) := GES30.io.G
  e(30) := GES30.io.E
  s(30) := GES30.io.S
  val GES31 = Module(new GES)
  GES31.io.INcur := Wout(31)
  GES31.io.INnext := Wout(32)
  g(31) := GES31.io.G
  e(31) := GES31.io.E
  s(31) := GES31.io.S
  val GES32 = Module(new GES)
  GES32.io.INcur := Wout(32)
  GES32.io.INnext := Wout(33)
  g(32) := GES32.io.G
  e(32) := GES32.io.E
  s(32) := GES32.io.S
  val GES33 = Module(new GES)
  GES33.io.INcur := Wout(33)
  GES33.io.INnext := Wout(34)
  g(33) := GES33.io.G
  e(33) := GES33.io.E
  s(33) := GES33.io.S
  val GES34 = Module(new GES)
  GES34.io.INcur := Wout(34)
  GES34.io.INnext := Wout(35)
  g(34) := GES34.io.G
  e(34) := GES34.io.E
  s(34) := GES34.io.S
  val GES35 = Module(new GES)
  GES35.io.INcur := Wout(35)
  GES35.io.INnext := Wout(36)
  g(35) := GES35.io.G
  e(35) := GES35.io.E
  s(35) := GES35.io.S
  val GES36 = Module(new GES)
  GES36.io.INcur := Wout(36)
  GES36.io.INnext := Wout(37)
  g(36) := GES36.io.G
  e(36) := GES36.io.E
  s(36) := GES36.io.S
  val GES37 = Module(new GES)
  GES37.io.INcur := Wout(37)
  GES37.io.INnext := Wout(38)
  g(37) := GES37.io.G
  e(37) := GES37.io.E
  s(37) := GES37.io.S
  val GES38 = Module(new GES)
  GES38.io.INcur := Wout(38)
  GES38.io.INnext := Wout(39)
  g(38) := GES38.io.G
  e(38) := GES38.io.E
  s(38) := GES38.io.S
  val GES39 = Module(new GES)
  GES39.io.INcur := Wout(39)
  GES39.io.INnext := Wout(40)
  g(39) := GES39.io.G
  e(39) := GES39.io.E
  s(39) := GES39.io.S
  val GES40 = Module(new GES)
  GES40.io.INcur := Wout(40)
  GES40.io.INnext := Wout(41)
  g(40) := GES40.io.G
  e(40) := GES40.io.E
  s(40) := GES40.io.S
  val GES41 = Module(new GES)
  GES41.io.INcur := Wout(41)
  GES41.io.INnext := Wout(42)
  g(41) := GES41.io.G
  e(41) := GES41.io.E
  s(41) := GES41.io.S
  val GES42 = Module(new GES)
  GES42.io.INcur := Wout(42)
  GES42.io.INnext := Wout(43)
  g(42) := GES42.io.G
  e(42) := GES42.io.E
  s(42) := GES42.io.S
  val GES43 = Module(new GES)
  GES43.io.INcur := Wout(43)
  GES43.io.INnext := Wout(44)
  g(43) := GES43.io.G
  e(43) := GES43.io.E
  s(43) := GES43.io.S
  val GES44 = Module(new GES)
  GES44.io.INcur := Wout(44)
  GES44.io.INnext := Wout(45)
  g(44) := GES44.io.G
  e(44) := GES44.io.E
  s(44) := GES44.io.S
  val GES45 = Module(new GES)
  GES45.io.INcur := Wout(45)
  GES45.io.INnext := Wout(46)
  g(45) := GES45.io.G
  e(45) := GES45.io.E
  s(45) := GES45.io.S
  val GES46 = Module(new GES)
  GES46.io.INcur := Wout(46)
  GES46.io.INnext := Wout(47)
  g(46) := GES46.io.G
  e(46) := GES46.io.E
  s(46) := GES46.io.S
  val GES47 = Module(new GES)
  GES47.io.INcur := Wout(47)
  GES47.io.INnext := 0.U
  g(47) := GES47.io.G
  e(47) := GES47.io.E
  s(47) := GES47.io.S
}

class F extends Module {
  val io = IO(new Bundle {
    val Epre = Input(UInt(1.W))
    val Gcur = Input(UInt(1.W))
    val Scur = Input(UInt(1.W))
    val Gnext = Input(UInt(1.W))
    val Snext = Input(UInt(1.W))
    val Fout = Output(UInt(1.W))
  })
  io.Fout := (io.Epre & ((io.Gcur & !io.Snext) | (io.Scur & !io.Gnext))) | (!io.Epre & ((io.Scur & !io.Snext) | (io.Gcur & !io.Gnext)))
}

class F48 extends Module {
  val io = IO(new Bundle {
    val Gin = Input(Vec(48, UInt(1.W)))
    val Ein = Input(Vec(48, UInt(1.W)))
    val Sin = Input(Vec(48, UInt(1.W)))
    val Fout = Output(Vec(48, UInt(1.W)))
  })

  val g = Wire(Vec(48, UInt(1.W)))
  val e = Wire(Vec(48, UInt(1.W)))
  val s = Wire(Vec(48, UInt(1.W)))
  val f = Wire(Vec(48, UInt(1.W)))

  g := io.Gin
  e := io.Ein
  s := io.Sin
  io.Fout := f

  val F0 = Module(new F)
  F0.io.Epre := 0.U
  F0.io.Gcur := g(0)
  F0.io.Scur := s(0)
  F0.io.Gnext := g(1)
  F0.io.Snext := s(1)
  f(0) := F0.io.Fout
  val F1 = Module(new F)
  F1.io.Epre := e(0)
  F1.io.Gcur := g(1)
  F1.io.Scur := s(1)
  F1.io.Gnext := g(2)
  F1.io.Snext := s(2)
  f(1) := F1.io.Fout
  val F2 = Module(new F)
  F2.io.Epre := e(1)
  F2.io.Gcur := g(2)
  F2.io.Scur := s(2)
  F2.io.Gnext := g(3)
  F2.io.Snext := s(3)
  f(2) := F2.io.Fout
  val F3 = Module(new F)
  F3.io.Epre := e(2)
  F3.io.Gcur := g(3)
  F3.io.Scur := s(3)
  F3.io.Gnext := g(4)
  F3.io.Snext := s(4)
  f(3) := F3.io.Fout
  val F4 = Module(new F)
  F4.io.Epre := e(3)
  F4.io.Gcur := g(4)
  F4.io.Scur := s(4)
  F4.io.Gnext := g(5)
  F4.io.Snext := s(5)
  f(4) := F4.io.Fout
  val F5 = Module(new F)
  F5.io.Epre := e(4)
  F5.io.Gcur := g(5)
  F5.io.Scur := s(5)
  F5.io.Gnext := g(6)
  F5.io.Snext := s(6)
  f(5) := F5.io.Fout
  val F6 = Module(new F)
  F6.io.Epre := e(5)
  F6.io.Gcur := g(6)
  F6.io.Scur := s(6)
  F6.io.Gnext := g(7)
  F6.io.Snext := s(7)
  f(6) := F6.io.Fout
  val F7 = Module(new F)
  F7.io.Epre := e(6)
  F7.io.Gcur := g(7)
  F7.io.Scur := s(7)
  F7.io.Gnext := g(8)
  F7.io.Snext := s(8)
  f(7) := F7.io.Fout
  val F8 = Module(new F)
  F8.io.Epre := e(7)
  F8.io.Gcur := g(8)
  F8.io.Scur := s(8)
  F8.io.Gnext := g(9)
  F8.io.Snext := s(9)
  f(8) := F8.io.Fout
  val F9 = Module(new F)
  F9.io.Epre := e(8)
  F9.io.Gcur := g(9)
  F9.io.Scur := s(9)
  F9.io.Gnext := g(10)
  F9.io.Snext := s(10)
  f(9) := F9.io.Fout
  val F10 = Module(new F)
  F10.io.Epre := e(9)
  F10.io.Gcur := g(10)
  F10.io.Scur := s(10)
  F10.io.Gnext := g(11)
  F10.io.Snext := s(11)
  f(10) := F10.io.Fout
  val F11 = Module(new F)
  F11.io.Epre := e(10)
  F11.io.Gcur := g(11)
  F11.io.Scur := s(11)
  F11.io.Gnext := g(12)
  F11.io.Snext := s(12)
  f(11) := F11.io.Fout
  val F12 = Module(new F)
  F12.io.Epre := e(11)
  F12.io.Gcur := g(12)
  F12.io.Scur := s(12)
  F12.io.Gnext := g(13)
  F12.io.Snext := s(13)
  f(12) := F12.io.Fout
  val F13 = Module(new F)
  F13.io.Epre := e(12)
  F13.io.Gcur := g(13)
  F13.io.Scur := s(13)
  F13.io.Gnext := g(14)
  F13.io.Snext := s(14)
  f(13) := F13.io.Fout
  val F14 = Module(new F)
  F14.io.Epre := e(13)
  F14.io.Gcur := g(14)
  F14.io.Scur := s(14)
  F14.io.Gnext := g(15)
  F14.io.Snext := s(15)
  f(14) := F14.io.Fout
  val F15 = Module(new F)
  F15.io.Epre := e(14)
  F15.io.Gcur := g(15)
  F15.io.Scur := s(15)
  F15.io.Gnext := g(16)
  F15.io.Snext := s(16)
  f(15) := F15.io.Fout
  val F16 = Module(new F)
  F16.io.Epre := e(15)
  F16.io.Gcur := g(16)
  F16.io.Scur := s(16)
  F16.io.Gnext := g(17)
  F16.io.Snext := s(17)
  f(16) := F16.io.Fout
  val F17 = Module(new F)
  F17.io.Epre := e(16)
  F17.io.Gcur := g(17)
  F17.io.Scur := s(17)
  F17.io.Gnext := g(18)
  F17.io.Snext := s(18)
  f(17) := F17.io.Fout
  val F18 = Module(new F)
  F18.io.Epre := e(17)
  F18.io.Gcur := g(18)
  F18.io.Scur := s(18)
  F18.io.Gnext := g(19)
  F18.io.Snext := s(19)
  f(18) := F18.io.Fout
  val F19 = Module(new F)
  F19.io.Epre := e(18)
  F19.io.Gcur := g(19)
  F19.io.Scur := s(19)
  F19.io.Gnext := g(20)
  F19.io.Snext := s(20)
  f(19) := F19.io.Fout
  val F20 = Module(new F)
  F20.io.Epre := e(19)
  F20.io.Gcur := g(20)
  F20.io.Scur := s(20)
  F20.io.Gnext := g(21)
  F20.io.Snext := s(21)
  f(20) := F20.io.Fout
  val F21 = Module(new F)
  F21.io.Epre := e(20)
  F21.io.Gcur := g(21)
  F21.io.Scur := s(21)
  F21.io.Gnext := g(22)
  F21.io.Snext := s(22)
  f(21) := F21.io.Fout
  val F22 = Module(new F)
  F22.io.Epre := e(21)
  F22.io.Gcur := g(22)
  F22.io.Scur := s(22)
  F22.io.Gnext := g(23)
  F22.io.Snext := s(23)
  f(22) := F22.io.Fout
  val F23 = Module(new F)
  F23.io.Epre := e(22)
  F23.io.Gcur := g(23)
  F23.io.Scur := s(23)
  F23.io.Gnext := g(24)
  F23.io.Snext := s(24)
  f(23) := F23.io.Fout
  val F24 = Module(new F)
  F24.io.Epre := e(23)
  F24.io.Gcur := g(24)
  F24.io.Scur := s(24)
  F24.io.Gnext := g(25)
  F24.io.Snext := s(25)
  f(24) := F24.io.Fout
  val F25 = Module(new F)
  F25.io.Epre := e(24)
  F25.io.Gcur := g(25)
  F25.io.Scur := s(25)
  F25.io.Gnext := g(26)
  F25.io.Snext := s(26)
  f(25) := F25.io.Fout
  val F26 = Module(new F)
  F26.io.Epre := e(25)
  F26.io.Gcur := g(26)
  F26.io.Scur := s(26)
  F26.io.Gnext := g(27)
  F26.io.Snext := s(27)
  f(26) := F26.io.Fout
  val F27 = Module(new F)
  F27.io.Epre := e(26)
  F27.io.Gcur := g(27)
  F27.io.Scur := s(27)
  F27.io.Gnext := g(28)
  F27.io.Snext := s(28)
  f(27) := F27.io.Fout
  val F28 = Module(new F)
  F28.io.Epre := e(27)
  F28.io.Gcur := g(28)
  F28.io.Scur := s(28)
  F28.io.Gnext := g(29)
  F28.io.Snext := s(29)
  f(28) := F28.io.Fout
  val F29 = Module(new F)
  F29.io.Epre := e(28)
  F29.io.Gcur := g(29)
  F29.io.Scur := s(29)
  F29.io.Gnext := g(30)
  F29.io.Snext := s(30)
  f(29) := F29.io.Fout
  val F30 = Module(new F)
  F30.io.Epre := e(29)
  F30.io.Gcur := g(30)
  F30.io.Scur := s(30)
  F30.io.Gnext := g(31)
  F30.io.Snext := s(31)
  f(30) := F30.io.Fout
  val F31 = Module(new F)
  F31.io.Epre := e(30)
  F31.io.Gcur := g(31)
  F31.io.Scur := s(31)
  F31.io.Gnext := g(32)
  F31.io.Snext := s(32)
  f(31) := F31.io.Fout
  val F32 = Module(new F)
  F32.io.Epre := e(31)
  F32.io.Gcur := g(32)
  F32.io.Scur := s(32)
  F32.io.Gnext := g(33)
  F32.io.Snext := s(33)
  f(32) := F32.io.Fout
  val F33 = Module(new F)
  F33.io.Epre := e(32)
  F33.io.Gcur := g(33)
  F33.io.Scur := s(33)
  F33.io.Gnext := g(34)
  F33.io.Snext := s(34)
  f(33) := F33.io.Fout
  val F34 = Module(new F)
  F34.io.Epre := e(33)
  F34.io.Gcur := g(34)
  F34.io.Scur := s(34)
  F34.io.Gnext := g(35)
  F34.io.Snext := s(35)
  f(34) := F34.io.Fout
  val F35 = Module(new F)
  F35.io.Epre := e(34)
  F35.io.Gcur := g(35)
  F35.io.Scur := s(35)
  F35.io.Gnext := g(36)
  F35.io.Snext := s(36)
  f(35) := F35.io.Fout
  val F36 = Module(new F)
  F36.io.Epre := e(35)
  F36.io.Gcur := g(36)
  F36.io.Scur := s(36)
  F36.io.Gnext := g(37)
  F36.io.Snext := s(37)
  f(36) := F36.io.Fout
  val F37 = Module(new F)
  F37.io.Epre := e(36)
  F37.io.Gcur := g(37)
  F37.io.Scur := s(37)
  F37.io.Gnext := g(38)
  F37.io.Snext := s(38)
  f(37) := F37.io.Fout
  val F38 = Module(new F)
  F38.io.Epre := e(37)
  F38.io.Gcur := g(38)
  F38.io.Scur := s(38)
  F38.io.Gnext := g(39)
  F38.io.Snext := s(39)
  f(38) := F38.io.Fout
  val F39 = Module(new F)
  F39.io.Epre := e(38)
  F39.io.Gcur := g(39)
  F39.io.Scur := s(39)
  F39.io.Gnext := g(40)
  F39.io.Snext := s(40)
  f(39) := F39.io.Fout
  val F40 = Module(new F)
  F40.io.Epre := e(39)
  F40.io.Gcur := g(40)
  F40.io.Scur := s(40)
  F40.io.Gnext := g(41)
  F40.io.Snext := s(41)
  f(40) := F40.io.Fout
  val F41 = Module(new F)
  F41.io.Epre := e(40)
  F41.io.Gcur := g(41)
  F41.io.Scur := s(41)
  F41.io.Gnext := g(42)
  F41.io.Snext := s(42)
  f(41) := F41.io.Fout
  val F42 = Module(new F)
  F42.io.Epre := e(41)
  F42.io.Gcur := g(42)
  F42.io.Scur := s(42)
  F42.io.Gnext := g(43)
  F42.io.Snext := s(43)
  f(42) := F42.io.Fout
  val F43 = Module(new F)
  F43.io.Epre := e(42)
  F43.io.Gcur := g(43)
  F43.io.Scur := s(43)
  F43.io.Gnext := g(44)
  F43.io.Snext := s(44)
  f(43) := F43.io.Fout
  val F44 = Module(new F)
  F44.io.Epre := e(43)
  F44.io.Gcur := g(44)
  F44.io.Scur := s(44)
  F44.io.Gnext := g(45)
  F44.io.Snext := s(45)
  f(44) := F44.io.Fout
  val F45 = Module(new F)
  F45.io.Epre := e(44)
  F45.io.Gcur := g(45)
  F45.io.Scur := s(45)
  F45.io.Gnext := g(46)
  F45.io.Snext := s(46)
  f(45) := F45.io.Fout
  val F46 = Module(new F)
  F46.io.Epre := e(45)
  F46.io.Gcur := g(46)
  F46.io.Scur := s(46)
  F46.io.Gnext := g(47)
  F46.io.Snext := s(47)
  f(46) := F46.io.Fout
  val F47 = Module(new F)
  F47.io.Epre := e(46)
  F47.io.Gcur := g(47)
  F47.io.Scur := s(47)
  F47.io.Gnext := 0.U
  F47.io.Snext := 0.U
  f(47) := F47.io.Fout
}

class Gp extends Module {
  val io = IO(new Bundle {
    val Epre = Input(UInt(1.W))
    val Gcur = Input(UInt(1.W))
    val Scur = Input(UInt(1.W))
    val Snext = Input(UInt(1.W))
    val pout = Output(UInt(1.W))
    val nout = Output(UInt(1.W))
    val zout = Output(UInt(1.W))
  })

  val n = Wire(UInt(1.W))
  n := io.Epre & io.Scur
  io.nout := n
  /*
  val p = Wire(UInt(1.W))
  p := !io.Snext & (io.Gcur | (!io.Epre & io.Scur))
  io.pout := p
  io.zout := !(p | n)
*/
  //// Tao's method ////
  io.pout := io.Gcur
  io.zout := !(io.Gcur | n)
  //// Tao's method ////
}

class Gp48 extends Module {
  val io = IO(new Bundle {
    val Gin = Input(Vec(48, UInt(1.W)))
    val Ein = Input(Vec(48, UInt(1.W)))
    val Sin = Input(Vec(48, UInt(1.W)))
    val Pout = Output(Vec(48, UInt(1.W)))
    val Nout = Output(Vec(48, UInt(1.W)))
    val Zout = Output(Vec(48, UInt(1.W)))
  })
  val g = Wire(Vec(48, UInt(1.W)))
  val e = Wire(Vec(48, UInt(1.W)))
  val s = Wire(Vec(48, UInt(1.W)))
  val P = Wire(Vec(48, UInt(1.W)))
  val N = Wire(Vec(48, UInt(1.W)))
  val Z = Wire(Vec(48, UInt(1.W)))

  g := io.Gin
  e := io.Ein
  s := io.Sin
  io.Pout := P
  io.Nout := N
  io.Zout := Z

  val Gp0 = Module(new Gp)
  Gp0.io.Epre := 0.U
  Gp0.io.Gcur := g(0)
  Gp0.io.Scur := s(0)
  Gp0.io.Snext := s(1)
  P(0) := Gp0.io.pout
  N(0) := Gp0.io.nout
  Z(0) := Gp0.io.zout
  val Gp1 = Module(new Gp)
  Gp1.io.Epre := e(0)
  Gp1.io.Gcur := g(1)
  Gp1.io.Scur := s(1)
  Gp1.io.Snext := s(2)
  P(1) := Gp1.io.pout
  N(1) := Gp1.io.nout
  Z(1) := Gp1.io.zout
  val Gp2 = Module(new Gp)
  Gp2.io.Epre := e(1)
  Gp2.io.Gcur := g(2)
  Gp2.io.Scur := s(2)
  Gp2.io.Snext := s(3)
  P(2) := Gp2.io.pout
  N(2) := Gp2.io.nout
  Z(2) := Gp2.io.zout
  val Gp3 = Module(new Gp)
  Gp3.io.Epre := e(2)
  Gp3.io.Gcur := g(3)
  Gp3.io.Scur := s(3)
  Gp3.io.Snext := s(4)
  P(3) := Gp3.io.pout
  N(3) := Gp3.io.nout
  Z(3) := Gp3.io.zout
  val Gp4 = Module(new Gp)
  Gp4.io.Epre := e(3)
  Gp4.io.Gcur := g(4)
  Gp4.io.Scur := s(4)
  Gp4.io.Snext := s(5)
  P(4) := Gp4.io.pout
  N(4) := Gp4.io.nout
  Z(4) := Gp4.io.zout
  val Gp5 = Module(new Gp)
  Gp5.io.Epre := e(4)
  Gp5.io.Gcur := g(5)
  Gp5.io.Scur := s(5)
  Gp5.io.Snext := s(6)
  P(5) := Gp5.io.pout
  N(5) := Gp5.io.nout
  Z(5) := Gp5.io.zout
  val Gp6 = Module(new Gp)
  Gp6.io.Epre := e(5)
  Gp6.io.Gcur := g(6)
  Gp6.io.Scur := s(6)
  Gp6.io.Snext := s(7)
  P(6) := Gp6.io.pout
  N(6) := Gp6.io.nout
  Z(6) := Gp6.io.zout
  val Gp7 = Module(new Gp)
  Gp7.io.Epre := e(6)
  Gp7.io.Gcur := g(7)
  Gp7.io.Scur := s(7)
  Gp7.io.Snext := s(8)
  P(7) := Gp7.io.pout
  N(7) := Gp7.io.nout
  Z(7) := Gp7.io.zout
  val Gp8 = Module(new Gp)
  Gp8.io.Epre := e(7)
  Gp8.io.Gcur := g(8)
  Gp8.io.Scur := s(8)
  Gp8.io.Snext := s(9)
  P(8) := Gp8.io.pout
  N(8) := Gp8.io.nout
  Z(8) := Gp8.io.zout
  val Gp9 = Module(new Gp)
  Gp9.io.Epre := e(8)
  Gp9.io.Gcur := g(9)
  Gp9.io.Scur := s(9)
  Gp9.io.Snext := s(10)
  P(9) := Gp9.io.pout
  N(9) := Gp9.io.nout
  Z(9) := Gp9.io.zout
  val Gp10 = Module(new Gp)
  Gp10.io.Epre := e(9)
  Gp10.io.Gcur := g(10)
  Gp10.io.Scur := s(10)
  Gp10.io.Snext := s(11)
  P(10) := Gp10.io.pout
  N(10) := Gp10.io.nout
  Z(10) := Gp10.io.zout
  val Gp11 = Module(new Gp)
  Gp11.io.Epre := e(10)
  Gp11.io.Gcur := g(11)
  Gp11.io.Scur := s(11)
  Gp11.io.Snext := s(12)
  P(11) := Gp11.io.pout
  N(11) := Gp11.io.nout
  Z(11) := Gp11.io.zout
  val Gp12 = Module(new Gp)
  Gp12.io.Epre := e(11)
  Gp12.io.Gcur := g(12)
  Gp12.io.Scur := s(12)
  Gp12.io.Snext := s(13)
  P(12) := Gp12.io.pout
  N(12) := Gp12.io.nout
  Z(12) := Gp12.io.zout
  val Gp13 = Module(new Gp)
  Gp13.io.Epre := e(12)
  Gp13.io.Gcur := g(13)
  Gp13.io.Scur := s(13)
  Gp13.io.Snext := s(14)
  P(13) := Gp13.io.pout
  N(13) := Gp13.io.nout
  Z(13) := Gp13.io.zout
  val Gp14 = Module(new Gp)
  Gp14.io.Epre := e(13)
  Gp14.io.Gcur := g(14)
  Gp14.io.Scur := s(14)
  Gp14.io.Snext := s(15)
  P(14) := Gp14.io.pout
  N(14) := Gp14.io.nout
  Z(14) := Gp14.io.zout
  val Gp15 = Module(new Gp)
  Gp15.io.Epre := e(14)
  Gp15.io.Gcur := g(15)
  Gp15.io.Scur := s(15)
  Gp15.io.Snext := s(16)
  P(15) := Gp15.io.pout
  N(15) := Gp15.io.nout
  Z(15) := Gp15.io.zout
  val Gp16 = Module(new Gp)
  Gp16.io.Epre := e(15)
  Gp16.io.Gcur := g(16)
  Gp16.io.Scur := s(16)
  Gp16.io.Snext := s(17)
  P(16) := Gp16.io.pout
  N(16) := Gp16.io.nout
  Z(16) := Gp16.io.zout
  val Gp17 = Module(new Gp)
  Gp17.io.Epre := e(16)
  Gp17.io.Gcur := g(17)
  Gp17.io.Scur := s(17)
  Gp17.io.Snext := s(18)
  P(17) := Gp17.io.pout
  N(17) := Gp17.io.nout
  Z(17) := Gp17.io.zout
  val Gp18 = Module(new Gp)
  Gp18.io.Epre := e(17)
  Gp18.io.Gcur := g(18)
  Gp18.io.Scur := s(18)
  Gp18.io.Snext := s(19)
  P(18) := Gp18.io.pout
  N(18) := Gp18.io.nout
  Z(18) := Gp18.io.zout
  val Gp19 = Module(new Gp)
  Gp19.io.Epre := e(18)
  Gp19.io.Gcur := g(19)
  Gp19.io.Scur := s(19)
  Gp19.io.Snext := s(20)
  P(19) := Gp19.io.pout
  N(19) := Gp19.io.nout
  Z(19) := Gp19.io.zout
  val Gp20 = Module(new Gp)
  Gp20.io.Epre := e(19)
  Gp20.io.Gcur := g(20)
  Gp20.io.Scur := s(20)
  Gp20.io.Snext := s(21)
  P(20) := Gp20.io.pout
  N(20) := Gp20.io.nout
  Z(20) := Gp20.io.zout
  val Gp21 = Module(new Gp)
  Gp21.io.Epre := e(20)
  Gp21.io.Gcur := g(21)
  Gp21.io.Scur := s(21)
  Gp21.io.Snext := s(22)
  P(21) := Gp21.io.pout
  N(21) := Gp21.io.nout
  Z(21) := Gp21.io.zout
  val Gp22 = Module(new Gp)
  Gp22.io.Epre := e(21)
  Gp22.io.Gcur := g(22)
  Gp22.io.Scur := s(22)
  Gp22.io.Snext := s(23)
  P(22) := Gp22.io.pout
  N(22) := Gp22.io.nout
  Z(22) := Gp22.io.zout
  val Gp23 = Module(new Gp)
  Gp23.io.Epre := e(22)
  Gp23.io.Gcur := g(23)
  Gp23.io.Scur := s(23)
  Gp23.io.Snext := s(24)
  P(23) := Gp23.io.pout
  N(23) := Gp23.io.nout
  Z(23) := Gp23.io.zout
  val Gp24 = Module(new Gp)
  Gp24.io.Epre := e(23)
  Gp24.io.Gcur := g(24)
  Gp24.io.Scur := s(24)
  Gp24.io.Snext := s(25)
  P(24) := Gp24.io.pout
  N(24) := Gp24.io.nout
  Z(24) := Gp24.io.zout
  val Gp25 = Module(new Gp)
  Gp25.io.Epre := e(24)
  Gp25.io.Gcur := g(25)
  Gp25.io.Scur := s(25)
  Gp25.io.Snext := s(26)
  P(25) := Gp25.io.pout
  N(25) := Gp25.io.nout
  Z(25) := Gp25.io.zout
  val Gp26 = Module(new Gp)
  Gp26.io.Epre := e(25)
  Gp26.io.Gcur := g(26)
  Gp26.io.Scur := s(26)
  Gp26.io.Snext := s(27)
  P(26) := Gp26.io.pout
  N(26) := Gp26.io.nout
  Z(26) := Gp26.io.zout
  val Gp27 = Module(new Gp)
  Gp27.io.Epre := e(26)
  Gp27.io.Gcur := g(27)
  Gp27.io.Scur := s(27)
  Gp27.io.Snext := s(28)
  P(27) := Gp27.io.pout
  N(27) := Gp27.io.nout
  Z(27) := Gp27.io.zout
  val Gp28 = Module(new Gp)
  Gp28.io.Epre := e(27)
  Gp28.io.Gcur := g(28)
  Gp28.io.Scur := s(28)
  Gp28.io.Snext := s(29)
  P(28) := Gp28.io.pout
  N(28) := Gp28.io.nout
  Z(28) := Gp28.io.zout
  val Gp29 = Module(new Gp)
  Gp29.io.Epre := e(28)
  Gp29.io.Gcur := g(29)
  Gp29.io.Scur := s(29)
  Gp29.io.Snext := s(30)
  P(29) := Gp29.io.pout
  N(29) := Gp29.io.nout
  Z(29) := Gp29.io.zout
  val Gp30 = Module(new Gp)
  Gp30.io.Epre := e(29)
  Gp30.io.Gcur := g(30)
  Gp30.io.Scur := s(30)
  Gp30.io.Snext := s(31)
  P(30) := Gp30.io.pout
  N(30) := Gp30.io.nout
  Z(30) := Gp30.io.zout
  val Gp31 = Module(new Gp)
  Gp31.io.Epre := e(30)
  Gp31.io.Gcur := g(31)
  Gp31.io.Scur := s(31)
  Gp31.io.Snext := s(32)
  P(31) := Gp31.io.pout
  N(31) := Gp31.io.nout
  Z(31) := Gp31.io.zout
  val Gp32 = Module(new Gp)
  Gp32.io.Epre := e(31)
  Gp32.io.Gcur := g(32)
  Gp32.io.Scur := s(32)
  Gp32.io.Snext := s(33)
  P(32) := Gp32.io.pout
  N(32) := Gp32.io.nout
  Z(32) := Gp32.io.zout
  val Gp33 = Module(new Gp)
  Gp33.io.Epre := e(32)
  Gp33.io.Gcur := g(33)
  Gp33.io.Scur := s(33)
  Gp33.io.Snext := s(34)
  P(33) := Gp33.io.pout
  N(33) := Gp33.io.nout
  Z(33) := Gp33.io.zout
  val Gp34 = Module(new Gp)
  Gp34.io.Epre := e(33)
  Gp34.io.Gcur := g(34)
  Gp34.io.Scur := s(34)
  Gp34.io.Snext := s(35)
  P(34) := Gp34.io.pout
  N(34) := Gp34.io.nout
  Z(34) := Gp34.io.zout
  val Gp35 = Module(new Gp)
  Gp35.io.Epre := e(34)
  Gp35.io.Gcur := g(35)
  Gp35.io.Scur := s(35)
  Gp35.io.Snext := s(36)
  P(35) := Gp35.io.pout
  N(35) := Gp35.io.nout
  Z(35) := Gp35.io.zout
  val Gp36 = Module(new Gp)
  Gp36.io.Epre := e(35)
  Gp36.io.Gcur := g(36)
  Gp36.io.Scur := s(36)
  Gp36.io.Snext := s(37)
  P(36) := Gp36.io.pout
  N(36) := Gp36.io.nout
  Z(36) := Gp36.io.zout
  val Gp37 = Module(new Gp)
  Gp37.io.Epre := e(36)
  Gp37.io.Gcur := g(37)
  Gp37.io.Scur := s(37)
  Gp37.io.Snext := s(38)
  P(37) := Gp37.io.pout
  N(37) := Gp37.io.nout
  Z(37) := Gp37.io.zout
  val Gp38 = Module(new Gp)
  Gp38.io.Epre := e(37)
  Gp38.io.Gcur := g(38)
  Gp38.io.Scur := s(38)
  Gp38.io.Snext := s(39)
  P(38) := Gp38.io.pout
  N(38) := Gp38.io.nout
  Z(38) := Gp38.io.zout
  val Gp39 = Module(new Gp)
  Gp39.io.Epre := e(38)
  Gp39.io.Gcur := g(39)
  Gp39.io.Scur := s(39)
  Gp39.io.Snext := s(40)
  P(39) := Gp39.io.pout
  N(39) := Gp39.io.nout
  Z(39) := Gp39.io.zout
  val Gp40 = Module(new Gp)
  Gp40.io.Epre := e(39)
  Gp40.io.Gcur := g(40)
  Gp40.io.Scur := s(40)
  Gp40.io.Snext := s(41)
  P(40) := Gp40.io.pout
  N(40) := Gp40.io.nout
  Z(40) := Gp40.io.zout
  val Gp41 = Module(new Gp)
  Gp41.io.Epre := e(40)
  Gp41.io.Gcur := g(41)
  Gp41.io.Scur := s(41)
  Gp41.io.Snext := s(42)
  P(41) := Gp41.io.pout
  N(41) := Gp41.io.nout
  Z(41) := Gp41.io.zout
  val Gp42 = Module(new Gp)
  Gp42.io.Epre := e(41)
  Gp42.io.Gcur := g(42)
  Gp42.io.Scur := s(42)
  Gp42.io.Snext := s(43)
  P(42) := Gp42.io.pout
  N(42) := Gp42.io.nout
  Z(42) := Gp42.io.zout
  val Gp43 = Module(new Gp)
  Gp43.io.Epre := e(42)
  Gp43.io.Gcur := g(43)
  Gp43.io.Scur := s(43)
  Gp43.io.Snext := s(44)
  P(43) := Gp43.io.pout
  N(43) := Gp43.io.nout
  Z(43) := Gp43.io.zout
  val Gp44 = Module(new Gp)
  Gp44.io.Epre := e(44)
  Gp44.io.Gcur := g(44)
  Gp44.io.Scur := s(44)
  Gp44.io.Snext := s(45)
  P(44) := Gp44.io.pout
  N(44) := Gp44.io.nout
  Z(44) := Gp44.io.zout
  val Gp45 = Module(new Gp)
  Gp45.io.Epre := e(44)
  Gp45.io.Gcur := g(45)
  Gp45.io.Scur := s(45)
  Gp45.io.Snext := s(46)
  P(45) := Gp45.io.pout
  N(45) := Gp45.io.nout
  Z(45) := Gp45.io.zout
  val Gp46 = Module(new Gp)
  Gp46.io.Epre := e(45)
  Gp46.io.Gcur := g(46)
  Gp46.io.Scur := s(46)
  Gp46.io.Snext := s(47)
  P(46) := Gp46.io.pout
  N(46) := Gp46.io.nout
  Z(46) := Gp46.io.zout
  val Gp47 = Module(new Gp)
  Gp47.io.Epre := e(46)
  Gp47.io.Gcur := g(47)
  Gp47.io.Scur := s(47)
  Gp47.io.Snext := 0.U
  P(47) := Gp47.io.pout
  N(47) := Gp47.io.nout
  Z(47) := Gp47.io.zout
}

class Gn extends Module {
  val io = IO(new Bundle {
    val Epre = Input(UInt(1.W))
    val Gcur = Input(UInt(1.W))
    val Scur = Input(UInt(1.W))
    val Gnext = Input(UInt(1.W))
    val pout = Output(UInt(1.W))
    val nout = Output(UInt(1.W))
    val zout = Output(UInt(1.W))
  })
  val n = Wire(UInt(1.W))
  n := io.Epre & io.Gcur
  io.nout := n
/*
  val p = Wire(UInt(1.W))
  p := !io.Gnext & ((!io.Epre & io.Gcur) | io.Scur)
  io.pout := p
  io.zout := !(p | n)
   */

  //// Tao's method ////
  io.pout := io.Scur
  io.zout := !(io.Scur | n)
  //// Tao's method ////
}

class Gn48 extends Module {
  val io = IO(new Bundle {
    val Gin = Input(Vec(48, UInt(1.W)))
    val Ein = Input(Vec(48, UInt(1.W)))
    val Sin = Input(Vec(48, UInt(1.W)))
    val Pout = Output(Vec(48, UInt(1.W)))
    val Nout = Output(Vec(48, UInt(1.W)))
    val Zout = Output(Vec(48, UInt(1.W)))
  })
  val g = Wire(Vec(48, UInt(1.W)))
  val e = Wire(Vec(48, UInt(1.W)))
  val s = Wire(Vec(48, UInt(1.W)))
  val P = Wire(Vec(48, UInt(1.W)))
  val N = Wire(Vec(48, UInt(1.W)))
  val Z = Wire(Vec(48, UInt(1.W)))

  g := io.Gin
  e := io.Ein
  s := io.Sin
  io.Pout := P
  io.Nout := N
  io.Zout := Z

  val Gn0 = Module(new Gn)
  Gn0.io.Epre := 0.U
  Gn0.io.Gcur := g(0)
  Gn0.io.Scur := s(0)
  Gn0.io.Gnext := g(1)
  P(0) := Gn0.io.pout
  N(0) := Gn0.io.nout
  Z(0) := Gn0.io.zout
  val Gn1 = Module(new Gn)
  Gn1.io.Epre := e(0)
  Gn1.io.Gcur := g(1)
  Gn1.io.Scur := s(1)
  Gn1.io.Gnext := g(2)
  P(1) := Gn1.io.pout
  N(1) := Gn1.io.nout
  Z(1) := Gn1.io.zout
  val Gn2 = Module(new Gn)
  Gn2.io.Epre := e(1)
  Gn2.io.Gcur := g(2)
  Gn2.io.Scur := s(2)
  Gn2.io.Gnext := g(3)
  P(2) := Gn2.io.pout
  N(2) := Gn2.io.nout
  Z(2) := Gn2.io.zout
  val Gn3 = Module(new Gn)
  Gn3.io.Epre := e(2)
  Gn3.io.Gcur := g(3)
  Gn3.io.Scur := s(3)
  Gn3.io.Gnext := g(4)
  P(3) := Gn3.io.pout
  N(3) := Gn3.io.nout
  Z(3) := Gn3.io.zout
  val Gn4 = Module(new Gn)
  Gn4.io.Epre := e(3)
  Gn4.io.Gcur := g(4)
  Gn4.io.Scur := s(4)
  Gn4.io.Gnext := g(5)
  P(4) := Gn4.io.pout
  N(4) := Gn4.io.nout
  Z(4) := Gn4.io.zout
  val Gn5 = Module(new Gn)
  Gn5.io.Epre := e(4)
  Gn5.io.Gcur := g(5)
  Gn5.io.Scur := s(5)
  Gn5.io.Gnext := g(6)
  P(5) := Gn5.io.pout
  N(5) := Gn5.io.nout
  Z(5) := Gn5.io.zout
  val Gn6 = Module(new Gn)
  Gn6.io.Epre := e(5)
  Gn6.io.Gcur := g(6)
  Gn6.io.Scur := s(6)
  Gn6.io.Gnext := g(7)
  P(6) := Gn6.io.pout
  N(6) := Gn6.io.nout
  Z(6) := Gn6.io.zout
  val Gn7 = Module(new Gn)
  Gn7.io.Epre := e(6)
  Gn7.io.Gcur := g(7)
  Gn7.io.Scur := s(7)
  Gn7.io.Gnext := g(8)
  P(7) := Gn7.io.pout
  N(7) := Gn7.io.nout
  Z(7) := Gn7.io.zout
  val Gn8 = Module(new Gn)
  Gn8.io.Epre := e(7)
  Gn8.io.Gcur := g(8)
  Gn8.io.Scur := s(8)
  Gn8.io.Gnext := g(9)
  P(8) := Gn8.io.pout
  N(8) := Gn8.io.nout
  Z(8) := Gn8.io.zout
  val Gn9 = Module(new Gn)
  Gn9.io.Epre := e(8)
  Gn9.io.Gcur := g(9)
  Gn9.io.Scur := s(9)
  Gn9.io.Gnext := g(10)
  P(9) := Gn9.io.pout
  N(9) := Gn9.io.nout
  Z(9) := Gn9.io.zout
  val Gn10 = Module(new Gn)
  Gn10.io.Epre := e(9)
  Gn10.io.Gcur := g(10)
  Gn10.io.Scur := s(10)
  Gn10.io.Gnext := g(11)
  P(10) := Gn10.io.pout
  N(10) := Gn10.io.nout
  Z(10) := Gn10.io.zout
  val Gn11 = Module(new Gn)
  Gn11.io.Epre := e(10)
  Gn11.io.Gcur := g(11)
  Gn11.io.Scur := s(11)
  Gn11.io.Gnext := g(12)
  P(11) := Gn11.io.pout
  N(11) := Gn11.io.nout
  Z(11) := Gn11.io.zout
  val Gn12 = Module(new Gn)
  Gn12.io.Epre := e(11)
  Gn12.io.Gcur := g(12)
  Gn12.io.Scur := s(12)
  Gn12.io.Gnext := g(13)
  P(12) := Gn12.io.pout
  N(12) := Gn12.io.nout
  Z(12) := Gn12.io.zout
  val Gn13 = Module(new Gn)
  Gn13.io.Epre := e(12)
  Gn13.io.Gcur := g(13)
  Gn13.io.Scur := s(13)
  Gn13.io.Gnext := g(14)
  P(13) := Gn13.io.pout
  N(13) := Gn13.io.nout
  Z(13) := Gn13.io.zout
  val Gn14 = Module(new Gn)
  Gn14.io.Epre := e(13)
  Gn14.io.Gcur := g(14)
  Gn14.io.Scur := s(14)
  Gn14.io.Gnext := g(15)
  P(14) := Gn14.io.pout
  N(14) := Gn14.io.nout
  Z(14) := Gn14.io.zout
  val Gn15 = Module(new Gn)
  Gn15.io.Epre := e(14)
  Gn15.io.Gcur := g(15)
  Gn15.io.Scur := s(15)
  Gn15.io.Gnext := g(16)
  P(15) := Gn15.io.pout
  N(15) := Gn15.io.nout
  Z(15) := Gn15.io.zout
  val Gn16 = Module(new Gn)
  Gn16.io.Epre := e(15)
  Gn16.io.Gcur := g(16)
  Gn16.io.Scur := s(16)
  Gn16.io.Gnext := g(17)
  P(16) := Gn16.io.pout
  N(16) := Gn16.io.nout
  Z(16) := Gn16.io.zout
  val Gn17 = Module(new Gn)
  Gn17.io.Epre := e(16)
  Gn17.io.Gcur := g(17)
  Gn17.io.Scur := s(17)
  Gn17.io.Gnext := g(18)
  P(17) := Gn17.io.pout
  N(17) := Gn17.io.nout
  Z(17) := Gn17.io.zout
  val Gn18 = Module(new Gn)
  Gn18.io.Epre := e(17)
  Gn18.io.Gcur := g(18)
  Gn18.io.Scur := s(18)
  Gn18.io.Gnext := g(19)
  P(18) := Gn18.io.pout
  N(18) := Gn18.io.nout
  Z(18) := Gn18.io.zout
  val Gn19 = Module(new Gn)
  Gn19.io.Epre := e(18)
  Gn19.io.Gcur := g(19)
  Gn19.io.Scur := s(19)
  Gn19.io.Gnext := g(20)
  P(19) := Gn19.io.pout
  N(19) := Gn19.io.nout
  Z(19) := Gn19.io.zout
  val Gn20 = Module(new Gn)
  Gn20.io.Epre := e(19)
  Gn20.io.Gcur := g(20)
  Gn20.io.Scur := s(20)
  Gn20.io.Gnext := g(21)
  P(20) := Gn20.io.pout
  N(20) := Gn20.io.nout
  Z(20) := Gn20.io.zout
  val Gn21 = Module(new Gn)
  Gn21.io.Epre := e(20)
  Gn21.io.Gcur := g(21)
  Gn21.io.Scur := s(21)
  Gn21.io.Gnext := g(22)
  P(21) := Gn21.io.pout
  N(21) := Gn21.io.nout
  Z(21) := Gn21.io.zout
  val Gn22 = Module(new Gn)
  Gn22.io.Epre := e(21)
  Gn22.io.Gcur := g(22)
  Gn22.io.Scur := s(22)
  Gn22.io.Gnext := g(23)
  P(22) := Gn22.io.pout
  N(22) := Gn22.io.nout
  Z(22) := Gn22.io.zout
  val Gn23 = Module(new Gn)
  Gn23.io.Epre := e(22)
  Gn23.io.Gcur := g(23)
  Gn23.io.Scur := s(23)
  Gn23.io.Gnext := g(24)
  P(23) := Gn23.io.pout
  N(23) := Gn23.io.nout
  Z(23) := Gn23.io.zout
  val Gn24 = Module(new Gn)
  Gn24.io.Epre := e(23)
  Gn24.io.Gcur := g(24)
  Gn24.io.Scur := s(24)
  Gn24.io.Gnext := g(25)
  P(24) := Gn24.io.pout
  N(24) := Gn24.io.nout
  Z(24) := Gn24.io.zout
  val Gn25 = Module(new Gn)
  Gn25.io.Epre := e(24)
  Gn25.io.Gcur := g(25)
  Gn25.io.Scur := s(25)
  Gn25.io.Gnext := g(26)
  P(25) := Gn25.io.pout
  N(25) := Gn25.io.nout
  Z(25) := Gn25.io.zout
  val Gn26 = Module(new Gn)
  Gn26.io.Epre := e(25)
  Gn26.io.Gcur := g(26)
  Gn26.io.Scur := s(26)
  Gn26.io.Gnext := g(27)
  P(26) := Gn26.io.pout
  N(26) := Gn26.io.nout
  Z(26) := Gn26.io.zout
  val Gn27 = Module(new Gn)
  Gn27.io.Epre := e(26)
  Gn27.io.Gcur := g(27)
  Gn27.io.Scur := s(27)
  Gn27.io.Gnext := g(28)
  P(27) := Gn27.io.pout
  N(27) := Gn27.io.nout
  Z(27) := Gn27.io.zout
  val Gn28 = Module(new Gn)
  Gn28.io.Epre := e(27)
  Gn28.io.Gcur := g(28)
  Gn28.io.Scur := s(28)
  Gn28.io.Gnext := g(29)
  P(28) := Gn28.io.pout
  N(28) := Gn28.io.nout
  Z(28) := Gn28.io.zout
  val Gn29 = Module(new Gn)
  Gn29.io.Epre := e(28)
  Gn29.io.Gcur := g(29)
  Gn29.io.Scur := s(29)
  Gn29.io.Gnext := g(30)
  P(29) := Gn29.io.pout
  N(29) := Gn29.io.nout
  Z(29) := Gn29.io.zout
  val Gn30 = Module(new Gn)
  Gn30.io.Epre := e(29)
  Gn30.io.Gcur := g(30)
  Gn30.io.Scur := s(30)
  Gn30.io.Gnext := g(31)
  P(30) := Gn30.io.pout
  N(30) := Gn30.io.nout
  Z(30) := Gn30.io.zout
  val Gn31 = Module(new Gn)
  Gn31.io.Epre := e(30)
  Gn31.io.Gcur := g(31)
  Gn31.io.Scur := s(31)
  Gn31.io.Gnext := g(32)
  P(31) := Gn31.io.pout
  N(31) := Gn31.io.nout
  Z(31) := Gn31.io.zout
  val Gn32 = Module(new Gn)
  Gn32.io.Epre := e(31)
  Gn32.io.Gcur := g(32)
  Gn32.io.Scur := s(32)
  Gn32.io.Gnext := g(33)
  P(32) := Gn32.io.pout
  N(32) := Gn32.io.nout
  Z(32) := Gn32.io.zout
  val Gn33 = Module(new Gn)
  Gn33.io.Epre := e(32)
  Gn33.io.Gcur := g(33)
  Gn33.io.Scur := s(33)
  Gn33.io.Gnext := g(34)
  P(33) := Gn33.io.pout
  N(33) := Gn33.io.nout
  Z(33) := Gn33.io.zout
  val Gn34 = Module(new Gn)
  Gn34.io.Epre := e(33)
  Gn34.io.Gcur := g(34)
  Gn34.io.Scur := s(34)
  Gn34.io.Gnext := g(35)
  P(34) := Gn34.io.pout
  N(34) := Gn34.io.nout
  Z(34) := Gn34.io.zout
  val Gn35 = Module(new Gn)
  Gn35.io.Epre := e(34)
  Gn35.io.Gcur := g(35)
  Gn35.io.Scur := s(35)
  Gn35.io.Gnext := g(36)
  P(35) := Gn35.io.pout
  N(35) := Gn35.io.nout
  Z(35) := Gn35.io.zout
  val Gn36 = Module(new Gn)
  Gn36.io.Epre := e(35)
  Gn36.io.Gcur := g(36)
  Gn36.io.Scur := s(36)
  Gn36.io.Gnext := g(37)
  P(36) := Gn36.io.pout
  N(36) := Gn36.io.nout
  Z(36) := Gn36.io.zout
  val Gn37 = Module(new Gn)
  Gn37.io.Epre := e(36)
  Gn37.io.Gcur := g(37)
  Gn37.io.Scur := s(37)
  Gn37.io.Gnext := g(38)
  P(37) := Gn37.io.pout
  N(37) := Gn37.io.nout
  Z(37) := Gn37.io.zout
  val Gn38 = Module(new Gn)
  Gn38.io.Epre := e(37)
  Gn38.io.Gcur := g(38)
  Gn38.io.Scur := s(38)
  Gn38.io.Gnext := g(39)
  P(38) := Gn38.io.pout
  N(38) := Gn38.io.nout
  Z(38) := Gn38.io.zout
  val Gn39 = Module(new Gn)
  Gn39.io.Epre := e(38)
  Gn39.io.Gcur := g(39)
  Gn39.io.Scur := s(39)
  Gn39.io.Gnext := g(40)
  P(39) := Gn39.io.pout
  N(39) := Gn39.io.nout
  Z(39) := Gn39.io.zout
  val Gn40 = Module(new Gn)
  Gn40.io.Epre := e(39)
  Gn40.io.Gcur := g(40)
  Gn40.io.Scur := s(40)
  Gn40.io.Gnext := g(41)
  P(40) := Gn40.io.pout
  N(40) := Gn40.io.nout
  Z(40) := Gn40.io.zout
  val Gn41 = Module(new Gn)
  Gn41.io.Epre := e(40)
  Gn41.io.Gcur := g(41)
  Gn41.io.Scur := s(41)
  Gn41.io.Gnext := g(42)
  P(41) := Gn41.io.pout
  N(41) := Gn41.io.nout
  Z(41) := Gn41.io.zout
  val Gn42 = Module(new Gn)
  Gn42.io.Epre := e(41)
  Gn42.io.Gcur := g(42)
  Gn42.io.Scur := s(42)
  Gn42.io.Gnext := g(43)
  P(42) := Gn42.io.pout
  N(42) := Gn42.io.nout
  Z(42) := Gn42.io.zout
  val Gn43 = Module(new Gn)
  Gn43.io.Epre := e(42)
  Gn43.io.Gcur := g(43)
  Gn43.io.Scur := s(43)
  Gn43.io.Gnext := g(44)
  P(43) := Gn43.io.pout
  N(43) := Gn43.io.nout
  Z(43) := Gn43.io.zout
  val Gn44 = Module(new Gn)
  Gn44.io.Epre := e(44)
  Gn44.io.Gcur := g(44)
  Gn44.io.Scur := s(44)
  Gn44.io.Gnext := g(45)
  P(44) := Gn44.io.pout
  N(44) := Gn44.io.nout
  Z(44) := Gn44.io.zout
  val Gn45 = Module(new Gn)
  Gn45.io.Epre := e(44)
  Gn45.io.Gcur := g(45)
  Gn45.io.Scur := s(45)
  Gn45.io.Gnext := g(46)
  P(45) := Gn45.io.pout
  N(45) := Gn45.io.nout
  Z(45) := Gn45.io.zout
  val Gn46 = Module(new Gn)
  Gn46.io.Epre := e(45)
  Gn46.io.Gcur := g(46)
  Gn46.io.Scur := s(46)
  Gn46.io.Gnext := g(47)
  P(46) := Gn46.io.pout
  N(46) := Gn46.io.nout
  Z(46) := Gn46.io.zout
  val Gn47 = Module(new Gn)
  Gn47.io.Epre := e(46)
  Gn47.io.Gcur := g(47)
  Gn47.io.Scur := s(47)
  Gn47.io.Gnext := 0.U
  P(47) := Gn47.io.pout
  N(47) := Gn47.io.nout
  Z(47) := Gn47.io.zout
}

class PositiveDetectionTree extends Module {
  val io = IO(new Bundle {
    val Pin = Input(UInt(2.W))
    val Nin = Input(UInt(2.W))
    val Zin = Input(UInt(2.W))
    val Yin = Input(UInt(2.W))
    val Pout = Output(UInt(1.W))
    val Nout = Output(UInt(1.W))
    val Zout = Output(UInt(1.W))
    val Yout = Output(UInt(1.W))

    /*
    val Pin = Input(Vec(2, UInt(1.W)))
    val Nin = Input(Vec(2, UInt(1.W)))
    val Zin = Input(Vec(2, UInt(1.W)))
    val Yin = Input(Vec(2, UInt(1.W)))
    val Pout = Output(Vec(1, UInt(1.W)))
    val Nout = Output(Vec(1, UInt(1.W)))
    val Zout = Output(Vec(1, UInt(1.W)))
    val Yout = Output(Vec(1, UInt(1.W)))
         */
  })
  //io.Fout := (io.Epre & ((io.Gcur & !io.Snext) | (io.Scur & !io.Gnext))) | (!io.Epre & ((io.Scur & !io.Snext) | (io.Gcur & !io.Gnext)))
  io.Zout := io.Zin(1) & io.Zin(0)
  io.Pout := (io.Zin(1) & io.Pin(0)) | (io.Pin(1) & io.Zin(0))
  io.Nout := io.Nin(1) | (io.Zin(1) & io.Nin(0))
  io.Yout := io.Yin(1) | (io.Zin(1) & io.Yin(0)) | (io.Pin(1) & io.Nin(0))
}

class PositiveDetectionTree0 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(48, UInt(1.W)))
    val Nin = Input(Vec(48, UInt(1.W)))
    val Zin = Input(Vec(48, UInt(1.W)))
   // val Yin = Input(Vec(48, UInt(1.W)))
    val Pout = Output(Vec(24, UInt(1.W)))
    val Nout = Output(Vec(24, UInt(1.W)))
    val Zout = Output(Vec(24, UInt(1.W)))
    val Yout = Output(Vec(24, UInt(1.W)))
  })
  val PDT0 = Module(new PositiveDetectionTree)
  PDT0.io.Pin := io.Pin(47) ## io.Pin(46)
  PDT0.io.Nin := io.Nin(47) ## io.Nin(46)
  PDT0.io.Zin := io.Zin(47) ## io.Zin(46)
  PDT0.io.Yin := 0.U
  io.Pout(23) := PDT0.io.Pout
  io.Nout(23) := PDT0.io.Nout
  io.Zout(23) := PDT0.io.Zout
  io.Yout(23) := PDT0.io.Yout

  val PDT1 = Module(new PositiveDetectionTree)
  PDT1.io.Pin := io.Pin(45) ## io.Pin(44)
  PDT1.io.Nin := io.Nin(45) ## io.Nin(44)
  PDT1.io.Zin := io.Zin(45) ## io.Zin(44)
  PDT1.io.Yin := 0.U
  io.Pout(22) := PDT1.io.Pout
  io.Nout(22) := PDT1.io.Nout
  io.Zout(22) := PDT1.io.Zout
  io.Yout(22) := PDT1.io.Yout

  val PDT2 = Module(new PositiveDetectionTree)
  PDT2.io.Pin := io.Pin(43) ## io.Pin(42)
  PDT2.io.Nin := io.Nin(43) ## io.Nin(42)
  PDT2.io.Zin := io.Zin(43) ## io.Zin(42)
  PDT2.io.Yin := 0.U
  io.Pout(21) := PDT2.io.Pout
  io.Nout(21) := PDT2.io.Nout
  io.Zout(21) := PDT2.io.Zout
  io.Yout(21) := PDT2.io.Yout

  val PDT3 = Module(new PositiveDetectionTree)
  PDT3.io.Pin := io.Pin(41) ## io.Pin(40)
  PDT3.io.Nin := io.Nin(41) ## io.Nin(40)
  PDT3.io.Zin := io.Zin(41) ## io.Zin(40)
  PDT3.io.Yin := 0.U
  io.Pout(20) := PDT3.io.Pout
  io.Nout(20) := PDT3.io.Nout
  io.Zout(20) := PDT3.io.Zout
  io.Yout(20) := PDT3.io.Yout

  val PDT4 = Module(new PositiveDetectionTree)
  PDT4.io.Pin := io.Pin(39) ## io.Pin(38)
  PDT4.io.Nin := io.Nin(39) ## io.Nin(38)
  PDT4.io.Zin := io.Zin(39) ## io.Zin(38)
  PDT4.io.Yin := 0.U
  io.Pout(19) := PDT4.io.Pout
  io.Nout(19) := PDT4.io.Nout
  io.Zout(19) := PDT4.io.Zout
  io.Yout(19) := PDT4.io.Yout

  val PDT5 = Module(new PositiveDetectionTree)
  PDT5.io.Pin := io.Pin(37) ## io.Pin(36)
  PDT5.io.Nin := io.Nin(37) ## io.Nin(36)
  PDT5.io.Zin := io.Zin(37) ## io.Zin(36)
  PDT5.io.Yin := 0.U
  io.Pout(18) := PDT5.io.Pout
  io.Nout(18) := PDT5.io.Nout
  io.Zout(18) := PDT5.io.Zout
  io.Yout(18) := PDT5.io.Yout

  val PDT6 = Module(new PositiveDetectionTree)
  PDT6.io.Pin := io.Pin(35) ## io.Pin(34)
  PDT6.io.Nin := io.Nin(35) ## io.Nin(34)
  PDT6.io.Zin := io.Zin(35) ## io.Zin(34)
  PDT6.io.Yin := 0.U
  io.Pout(17) := PDT6.io.Pout
  io.Nout(17) := PDT6.io.Nout
  io.Zout(17) := PDT6.io.Zout
  io.Yout(17) := PDT6.io.Yout

  val PDT7 = Module(new PositiveDetectionTree)
  PDT7.io.Pin := io.Pin(33) ## io.Pin(32)
  PDT7.io.Nin := io.Nin(33) ## io.Nin(32)
  PDT7.io.Zin := io.Zin(33) ## io.Zin(32)
  PDT7.io.Yin := 0.U
  io.Pout(16) := PDT7.io.Pout
  io.Nout(16) := PDT7.io.Nout
  io.Zout(16) := PDT7.io.Zout
  io.Yout(16) := PDT7.io.Yout

  val PDT8 = Module(new PositiveDetectionTree)
  PDT8.io.Pin := io.Pin(31) ## io.Pin(30)
  PDT8.io.Nin := io.Nin(31) ## io.Nin(30)
  PDT8.io.Zin := io.Zin(31) ## io.Zin(30)
  PDT8.io.Yin := 0.U
  io.Pout(15) := PDT8.io.Pout
  io.Nout(15) := PDT8.io.Nout
  io.Zout(15) := PDT8.io.Zout
  io.Yout(15) := PDT8.io.Yout

  val PDT9 = Module(new PositiveDetectionTree)
  PDT9.io.Pin := io.Pin(29) ## io.Pin(28)
  PDT9.io.Nin := io.Nin(29) ## io.Nin(28)
  PDT9.io.Zin := io.Zin(29) ## io.Zin(28)
  PDT9.io.Yin := 0.U
  io.Pout(14) := PDT9.io.Pout
  io.Nout(14) := PDT9.io.Nout
  io.Zout(14) := PDT9.io.Zout
  io.Yout(14) := PDT9.io.Yout

  val PDT10 = Module(new PositiveDetectionTree)
  PDT10.io.Pin := io.Pin(27) ## io.Pin(26)
  PDT10.io.Nin := io.Nin(27) ## io.Nin(26)
  PDT10.io.Zin := io.Zin(27) ## io.Zin(26)
  PDT10.io.Yin := 0.U
  io.Pout(13) := PDT10.io.Pout
  io.Nout(13) := PDT10.io.Nout
  io.Zout(13) := PDT10.io.Zout
  io.Yout(13) := PDT10.io.Yout

  val PDT11 = Module(new PositiveDetectionTree)
  PDT11.io.Pin := io.Pin(25) ## io.Pin(24)
  PDT11.io.Nin := io.Nin(25) ## io.Nin(24)
  PDT11.io.Zin := io.Zin(25) ## io.Zin(24)
  PDT11.io.Yin := 0.U
  io.Pout(12) := PDT11.io.Pout
  io.Nout(12) := PDT11.io.Nout
  io.Zout(12) := PDT11.io.Zout
  io.Yout(12) := PDT11.io.Yout

  val PDT12 = Module(new PositiveDetectionTree)
  PDT12.io.Pin := io.Pin(23) ## io.Pin(22)
  PDT12.io.Nin := io.Nin(23) ## io.Nin(22)
  PDT12.io.Zin := io.Zin(23) ## io.Zin(22)
  PDT12.io.Yin := 0.U
  io.Pout(11) := PDT12.io.Pout
  io.Nout(11) := PDT12.io.Nout
  io.Zout(11) := PDT12.io.Zout
  io.Yout(11) := PDT12.io.Yout

  val PDT13 = Module(new PositiveDetectionTree)
  PDT13.io.Pin := io.Pin(21) ## io.Pin(20)
  PDT13.io.Nin := io.Nin(21) ## io.Nin(20)
  PDT13.io.Zin := io.Zin(21) ## io.Zin(20)
  PDT13.io.Yin := 0.U
  io.Pout(10) := PDT13.io.Pout
  io.Nout(10) := PDT13.io.Nout
  io.Zout(10) := PDT13.io.Zout
  io.Yout(10) := PDT13.io.Yout

  val PDT14 = Module(new PositiveDetectionTree)
  PDT14.io.Pin := io.Pin(19) ## io.Pin(18)
  PDT14.io.Nin := io.Nin(19) ## io.Nin(18)
  PDT14.io.Zin := io.Zin(19) ## io.Zin(18)
  PDT14.io.Yin := 0.U
  io.Pout(9) := PDT14.io.Pout
  io.Nout(9) := PDT14.io.Nout
  io.Zout(9) := PDT14.io.Zout
  io.Yout(9) := PDT14.io.Yout

  val PDT15 = Module(new PositiveDetectionTree)
  PDT15.io.Pin := io.Pin(17) ## io.Pin(16)
  PDT15.io.Nin := io.Nin(17) ## io.Nin(16)
  PDT15.io.Zin := io.Zin(17) ## io.Zin(16)
  PDT15.io.Yin := 0.U
  io.Pout(8) := PDT15.io.Pout
  io.Nout(8) := PDT15.io.Nout
  io.Zout(8) := PDT15.io.Zout
  io.Yout(8) := PDT15.io.Yout

  val PDT16 = Module(new PositiveDetectionTree)
  PDT16.io.Pin := io.Pin(15) ## io.Pin(14)
  PDT16.io.Nin := io.Nin(15) ## io.Nin(14)
  PDT16.io.Zin := io.Zin(15) ## io.Zin(14)
  PDT16.io.Yin := 0.U
  io.Pout(7) := PDT16.io.Pout
  io.Nout(7) := PDT16.io.Nout
  io.Zout(7) := PDT16.io.Zout
  io.Yout(7) := PDT16.io.Yout

  val PDT17 = Module(new PositiveDetectionTree)
  PDT17.io.Pin := io.Pin(13) ## io.Pin(12)
  PDT17.io.Nin := io.Nin(13) ## io.Nin(12)
  PDT17.io.Zin := io.Zin(13) ## io.Zin(12)
  PDT17.io.Yin := 0.U
  io.Pout(6) := PDT17.io.Pout
  io.Nout(6) := PDT17.io.Nout
  io.Zout(6) := PDT17.io.Zout
  io.Yout(6) := PDT17.io.Yout

  val PDT18 = Module(new PositiveDetectionTree)
  PDT18.io.Pin := io.Pin(11) ## io.Pin(10)
  PDT18.io.Nin := io.Nin(11) ## io.Nin(10)
  PDT18.io.Zin := io.Zin(11) ## io.Zin(10)
  PDT18.io.Yin := 0.U
  io.Pout(5) := PDT18.io.Pout
  io.Nout(5) := PDT18.io.Nout
  io.Zout(5) := PDT18.io.Zout
  io.Yout(5) := PDT18.io.Yout

  val PDT19 = Module(new PositiveDetectionTree)
  PDT19.io.Pin := io.Pin(9) ## io.Pin(8)
  PDT19.io.Nin := io.Nin(9) ## io.Nin(8)
  PDT19.io.Zin := io.Zin(9) ## io.Zin(8)
  PDT19.io.Yin := 0.U
  io.Pout(4) := PDT19.io.Pout
  io.Nout(4) := PDT19.io.Nout
  io.Zout(4) := PDT19.io.Zout
  io.Yout(4) := PDT19.io.Yout

  val PDT20 = Module(new PositiveDetectionTree)
  PDT20.io.Pin := io.Pin(7) ## io.Pin(6)
  PDT20.io.Nin := io.Nin(7) ## io.Nin(6)
  PDT20.io.Zin := io.Zin(7) ## io.Zin(6)
  PDT20.io.Yin := 0.U
  io.Pout(3) := PDT20.io.Pout
  io.Nout(3) := PDT20.io.Nout
  io.Zout(3) := PDT20.io.Zout
  io.Yout(3) := PDT20.io.Yout

  val PDT21 = Module(new PositiveDetectionTree)
  PDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  PDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  PDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  PDT21.io.Yin := 0.U
  io.Pout(2) := PDT21.io.Pout
  io.Nout(2) := PDT21.io.Nout
  io.Zout(2) := PDT21.io.Zout
  io.Yout(2) := PDT21.io.Yout

  val PDT22 = Module(new PositiveDetectionTree)
  PDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  PDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  PDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  PDT22.io.Yin := 0.U
  io.Pout(1) := PDT22.io.Pout
  io.Nout(1) := PDT22.io.Nout
  io.Zout(1) := PDT22.io.Zout
  io.Yout(1) := PDT22.io.Yout

  val PDT23 = Module(new PositiveDetectionTree)
  PDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  PDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  PDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  PDT23.io.Yin := 0.U
  io.Pout(0) := PDT23.io.Pout
  io.Nout(0) := PDT23.io.Nout
  io.Zout(0) := PDT23.io.Zout
  io.Yout(0) := PDT23.io.Yout
}

class PositiveDetectionTree1 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(24, UInt(1.W)))
    val Nin = Input(Vec(24, UInt(1.W)))
    val Zin = Input(Vec(24, UInt(1.W)))
    val Yin = Input(Vec(24, UInt(1.W)))
    val Pout = Output(Vec(12, UInt(1.W)))
    val Nout = Output(Vec(12, UInt(1.W)))
    val Zout = Output(Vec(12, UInt(1.W)))
    val Yout = Output(Vec(12, UInt(1.W)))
  })

  val PDT12 = Module(new PositiveDetectionTree)
  PDT12.io.Pin := io.Pin(23) ## io.Pin(22)
  PDT12.io.Nin := io.Nin(23) ## io.Nin(22)
  PDT12.io.Zin := io.Zin(23) ## io.Zin(22)
  PDT12.io.Yin := io.Yin(23) ## io.Yin(22)
  io.Pout(11) := PDT12.io.Pout
  io.Nout(11) := PDT12.io.Nout
  io.Zout(11) := PDT12.io.Zout
  io.Yout(11) := PDT12.io.Yout

  val PDT13 = Module(new PositiveDetectionTree)
  PDT13.io.Pin := io.Pin(21) ## io.Pin(20)
  PDT13.io.Nin := io.Nin(21) ## io.Nin(20)
  PDT13.io.Zin := io.Zin(21) ## io.Zin(20)
  PDT13.io.Yin := io.Yin(21) ## io.Yin(20)
  io.Pout(10) := PDT13.io.Pout
  io.Nout(10) := PDT13.io.Nout
  io.Zout(10) := PDT13.io.Zout
  io.Yout(10) := PDT13.io.Yout

  val PDT14 = Module(new PositiveDetectionTree)
  PDT14.io.Pin := io.Pin(19) ## io.Pin(18)
  PDT14.io.Nin := io.Nin(19) ## io.Nin(18)
  PDT14.io.Zin := io.Zin(19) ## io.Zin(18)
  PDT14.io.Yin := io.Yin(19) ## io.Yin(18)
  io.Pout(9) := PDT14.io.Pout
  io.Nout(9) := PDT14.io.Nout
  io.Zout(9) := PDT14.io.Zout
  io.Yout(9) := PDT14.io.Yout

  val PDT15 = Module(new PositiveDetectionTree)
  PDT15.io.Pin := io.Pin(17) ## io.Pin(16)
  PDT15.io.Nin := io.Nin(17) ## io.Nin(16)
  PDT15.io.Zin := io.Zin(17) ## io.Zin(16)
  PDT15.io.Yin := io.Yin(17) ## io.Yin(16)
  io.Pout(8) := PDT15.io.Pout
  io.Nout(8) := PDT15.io.Nout
  io.Zout(8) := PDT15.io.Zout
  io.Yout(8) := PDT15.io.Yout

  val PDT16 = Module(new PositiveDetectionTree)
  PDT16.io.Pin := io.Pin(15) ## io.Pin(14)
  PDT16.io.Nin := io.Nin(15) ## io.Nin(14)
  PDT16.io.Zin := io.Zin(15) ## io.Zin(14)
  PDT16.io.Yin := io.Yin(15) ## io.Yin(14)
  io.Pout(7) := PDT16.io.Pout
  io.Nout(7) := PDT16.io.Nout
  io.Zout(7) := PDT16.io.Zout
  io.Yout(7) := PDT16.io.Yout

  val PDT17 = Module(new PositiveDetectionTree)
  PDT17.io.Pin := io.Pin(13) ## io.Pin(12)
  PDT17.io.Nin := io.Nin(13) ## io.Nin(12)
  PDT17.io.Zin := io.Zin(13) ## io.Zin(12)
  PDT17.io.Yin := io.Yin(13) ## io.Yin(12)
  io.Pout(6) := PDT17.io.Pout
  io.Nout(6) := PDT17.io.Nout
  io.Zout(6) := PDT17.io.Zout
  io.Yout(6) := PDT17.io.Yout

  val PDT18 = Module(new PositiveDetectionTree)
  PDT18.io.Pin := io.Pin(11) ## io.Pin(10)
  PDT18.io.Nin := io.Nin(11) ## io.Nin(10)
  PDT18.io.Zin := io.Zin(11) ## io.Zin(10)
  PDT18.io.Yin := io.Yin(11) ## io.Yin(10)
  io.Pout(5) := PDT18.io.Pout
  io.Nout(5) := PDT18.io.Nout
  io.Zout(5) := PDT18.io.Zout
  io.Yout(5) := PDT18.io.Yout

  val PDT19 = Module(new PositiveDetectionTree)
  PDT19.io.Pin := io.Pin(9) ## io.Pin(8)
  PDT19.io.Nin := io.Nin(9) ## io.Nin(8)
  PDT19.io.Zin := io.Zin(9) ## io.Zin(8)
  PDT19.io.Yin := io.Yin(9) ## io.Yin(8)
  io.Pout(4) := PDT19.io.Pout
  io.Nout(4) := PDT19.io.Nout
  io.Zout(4) := PDT19.io.Zout
  io.Yout(4) := PDT19.io.Yout

  val PDT20 = Module(new PositiveDetectionTree)
  PDT20.io.Pin := io.Pin(7) ## io.Pin(6)
  PDT20.io.Nin := io.Nin(7) ## io.Nin(6)
  PDT20.io.Zin := io.Zin(7) ## io.Zin(6)
  PDT20.io.Yin := io.Yin(7) ## io.Yin(6)
  io.Pout(3) := PDT20.io.Pout
  io.Nout(3) := PDT20.io.Nout
  io.Zout(3) := PDT20.io.Zout
  io.Yout(3) := PDT20.io.Yout

  val PDT21 = Module(new PositiveDetectionTree)
  PDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  PDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  PDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  PDT21.io.Yin := io.Yin(5) ## io.Yin(4)
  io.Pout(2) := PDT21.io.Pout
  io.Nout(2) := PDT21.io.Nout
  io.Zout(2) := PDT21.io.Zout
  io.Yout(2) := PDT21.io.Yout

  val PDT22 = Module(new PositiveDetectionTree)
  PDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  PDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  PDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  PDT22.io.Yin := io.Yin(3) ## io.Yin(2)
  io.Pout(1) := PDT22.io.Pout
  io.Nout(1) := PDT22.io.Nout
  io.Zout(1) := PDT22.io.Zout
  io.Yout(1) := PDT22.io.Yout

  val PDT23 = Module(new PositiveDetectionTree)
  PDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  PDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  PDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  PDT23.io.Yin := io.Yin(1) ## io.Yin(0)
  io.Pout(0) := PDT23.io.Pout
  io.Nout(0) := PDT23.io.Nout
  io.Zout(0) := PDT23.io.Zout
  io.Yout(0) := PDT23.io.Yout
}

class PositiveDetectionTree2 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(12, UInt(1.W)))
    val Nin = Input(Vec(12, UInt(1.W)))
    val Zin = Input(Vec(12, UInt(1.W)))
    val Yin = Input(Vec(12, UInt(1.W)))
    val Pout = Output(Vec(6, UInt(1.W)))
    val Nout = Output(Vec(6, UInt(1.W)))
    val Zout = Output(Vec(6, UInt(1.W)))
    val Yout = Output(Vec(6, UInt(1.W)))
  })
  val PDT18 = Module(new PositiveDetectionTree)
  PDT18.io.Pin := io.Pin(11) ## io.Pin(10)
  PDT18.io.Nin := io.Nin(11) ## io.Nin(10)
  PDT18.io.Zin := io.Zin(11) ## io.Zin(10)
  PDT18.io.Yin := io.Yin(11) ## io.Yin(10)
  io.Pout(5) := PDT18.io.Pout
  io.Nout(5) := PDT18.io.Nout
  io.Zout(5) := PDT18.io.Zout
  io.Yout(5) := PDT18.io.Yout

  val PDT19 = Module(new PositiveDetectionTree)
  PDT19.io.Pin := io.Pin(9) ## io.Pin(8)
  PDT19.io.Nin := io.Nin(9) ## io.Nin(8)
  PDT19.io.Zin := io.Zin(9) ## io.Zin(8)
  PDT19.io.Yin := io.Yin(9) ## io.Yin(8)
  io.Pout(4) := PDT19.io.Pout
  io.Nout(4) := PDT19.io.Nout
  io.Zout(4) := PDT19.io.Zout
  io.Yout(4) := PDT19.io.Yout

  val PDT20 = Module(new PositiveDetectionTree)
  PDT20.io.Pin := io.Pin(7) ## io.Pin(6)
  PDT20.io.Nin := io.Nin(7) ## io.Nin(6)
  PDT20.io.Zin := io.Zin(7) ## io.Zin(6)
  PDT20.io.Yin := io.Yin(7) ## io.Yin(6)
  io.Pout(3) := PDT20.io.Pout
  io.Nout(3) := PDT20.io.Nout
  io.Zout(3) := PDT20.io.Zout
  io.Yout(3) := PDT20.io.Yout

  val PDT21 = Module(new PositiveDetectionTree)
  PDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  PDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  PDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  PDT21.io.Yin := io.Yin(5) ## io.Yin(4)
  io.Pout(2) := PDT21.io.Pout
  io.Nout(2) := PDT21.io.Nout
  io.Zout(2) := PDT21.io.Zout
  io.Yout(2) := PDT21.io.Yout

  val PDT22 = Module(new PositiveDetectionTree)
  PDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  PDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  PDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  PDT22.io.Yin := io.Yin(3) ## io.Yin(2)
  io.Pout(1) := PDT22.io.Pout
  io.Nout(1) := PDT22.io.Nout
  io.Zout(1) := PDT22.io.Zout
  io.Yout(1) := PDT22.io.Yout

  val PDT23 = Module(new PositiveDetectionTree)
  PDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  PDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  PDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  PDT23.io.Yin := io.Yin(1) ## io.Yin(0)
  io.Pout(0) := PDT23.io.Pout
  io.Nout(0) := PDT23.io.Nout
  io.Zout(0) := PDT23.io.Zout
  io.Yout(0) := PDT23.io.Yout
}

class PositiveDetectionTree3 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(6, UInt(1.W)))
    val Nin = Input(Vec(6, UInt(1.W)))
    val Zin = Input(Vec(6, UInt(1.W)))
    val Yin = Input(Vec(6, UInt(1.W)))
    val Pout = Output(Vec(3, UInt(1.W)))
    val Nout = Output(Vec(3, UInt(1.W)))
    val Zout = Output(Vec(3, UInt(1.W)))
    val Yout = Output(Vec(3, UInt(1.W)))
  })

  val PDT21 = Module(new PositiveDetectionTree)
  PDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  PDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  PDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  PDT21.io.Yin := io.Yin(5) ## io.Yin(4)
  io.Pout(2) := PDT21.io.Pout
  io.Nout(2) := PDT21.io.Nout
  io.Zout(2) := PDT21.io.Zout
  io.Yout(2) := PDT21.io.Yout

  val PDT22 = Module(new PositiveDetectionTree)
  PDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  PDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  PDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  PDT22.io.Yin := io.Yin(3) ## io.Yin(2)
  io.Pout(1) := PDT22.io.Pout
  io.Nout(1) := PDT22.io.Nout
  io.Zout(1) := PDT22.io.Zout
  io.Yout(1) := PDT22.io.Yout

  val PDT23 = Module(new PositiveDetectionTree)
  PDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  PDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  PDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  PDT23.io.Yin := io.Yin(1) ## io.Yin(0)
  io.Pout(0) := PDT23.io.Pout
  io.Nout(0) := PDT23.io.Nout
  io.Zout(0) := PDT23.io.Zout
  io.Yout(0) := PDT23.io.Yout
}

class NegativeDetectionTree extends Module {
  val io = IO(new Bundle {
    val Pin = Input(UInt(2.W))
    val Nin = Input(UInt(2.W))
    val Zin = Input(UInt(2.W))
    val Yin = Input(UInt(2.W))
    val Pout = Output(UInt(1.W))
    val Nout = Output(UInt(1.W))
    val Zout = Output(UInt(1.W))
    val Yout = Output(UInt(1.W))

    /*
    val Pin = Input(Vec(2, UInt(1.W)))
    val Nin = Input(Vec(2, UInt(1.W)))
    val Zin = Input(Vec(2, UInt(1.W)))
    val Yin = Input(Vec(2, UInt(1.W)))
    val Pout = Output(Vec(1, UInt(1.W)))
    val Nout = Output(Vec(1, UInt(1.W)))
    val Zout = Output(Vec(1, UInt(1.W)))
    val Yout = Output(Vec(1, UInt(1.W)))
         */
  })
  //io.Fout := (io.Epre & ((io.Gcur & !io.Snext) | (io.Scur & !io.Gnext))) | (!io.Epre & ((io.Scur & !io.Snext) | (io.Gcur & !io.Gnext)))
  io.Zout := io.Zin(1) & io.Zin(0)
  io.Pout := io.Pin(1) | (io.Zin(1) & io.Pin(0))
  io.Nout := (io.Nin(1) & io.Zin(0)) | (io.Zin(1) & io.Nin(0))
  io.Yout := io.Yin(1) | (io.Nin(1) & io.Pin(0)) | (io.Zin(1) & io.Yin(0))
}

class NegativeDetectionTree0 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(48, UInt(1.W)))
    val Nin = Input(Vec(48, UInt(1.W)))
    val Zin = Input(Vec(48, UInt(1.W)))
    // val Yin = Input(Vec(48, UInt(1.W)))
    val Pout = Output(Vec(24, UInt(1.W)))
    val Nout = Output(Vec(24, UInt(1.W)))
    val Zout = Output(Vec(24, UInt(1.W)))
    val Yout = Output(Vec(24, UInt(1.W)))
  })
  val NDT0 = Module(new NegativeDetectionTree)
  NDT0.io.Pin := io.Pin(47) ## io.Pin(46)
  NDT0.io.Nin := io.Nin(47) ## io.Nin(46)
  NDT0.io.Zin := io.Zin(47) ## io.Zin(46)
  NDT0.io.Yin := 0.U
  io.Pout(23) := NDT0.io.Pout
  io.Nout(23) := NDT0.io.Nout
  io.Zout(23) := NDT0.io.Zout
  io.Yout(23) := NDT0.io.Yout

  val NDT1 = Module(new NegativeDetectionTree)
  NDT1.io.Pin := io.Pin(45) ## io.Pin(44)
  NDT1.io.Nin := io.Nin(45) ## io.Nin(44)
  NDT1.io.Zin := io.Zin(45) ## io.Zin(44)
  NDT1.io.Yin := 0.U
  io.Pout(22) := NDT1.io.Pout
  io.Nout(22) := NDT1.io.Nout
  io.Zout(22) := NDT1.io.Zout
  io.Yout(22) := NDT1.io.Yout

  val NDT2 = Module(new NegativeDetectionTree)
  NDT2.io.Pin := io.Pin(43) ## io.Pin(42)
  NDT2.io.Nin := io.Nin(43) ## io.Nin(42)
  NDT2.io.Zin := io.Zin(43) ## io.Zin(42)
  NDT2.io.Yin := 0.U
  io.Pout(21) := NDT2.io.Pout
  io.Nout(21) := NDT2.io.Nout
  io.Zout(21) := NDT2.io.Zout
  io.Yout(21) := NDT2.io.Yout

  val NDT3 = Module(new NegativeDetectionTree)
  NDT3.io.Pin := io.Pin(41) ## io.Pin(40)
  NDT3.io.Nin := io.Nin(41) ## io.Nin(40)
  NDT3.io.Zin := io.Zin(41) ## io.Zin(40)
  NDT3.io.Yin := 0.U
  io.Pout(20) := NDT3.io.Pout
  io.Nout(20) := NDT3.io.Nout
  io.Zout(20) := NDT3.io.Zout
  io.Yout(20) := NDT3.io.Yout

  val NDT4 = Module(new NegativeDetectionTree)
  NDT4.io.Pin := io.Pin(39) ## io.Pin(38)
  NDT4.io.Nin := io.Nin(39) ## io.Nin(38)
  NDT4.io.Zin := io.Zin(39) ## io.Zin(38)
  NDT4.io.Yin := 0.U
  io.Pout(19) := NDT4.io.Pout
  io.Nout(19) := NDT4.io.Nout
  io.Zout(19) := NDT4.io.Zout
  io.Yout(19) := NDT4.io.Yout

  val NDT5 = Module(new NegativeDetectionTree)
  NDT5.io.Pin := io.Pin(37) ## io.Pin(36)
  NDT5.io.Nin := io.Nin(37) ## io.Nin(36)
  NDT5.io.Zin := io.Zin(37) ## io.Zin(36)
  NDT5.io.Yin := 0.U
  io.Pout(18) := NDT5.io.Pout
  io.Nout(18) := NDT5.io.Nout
  io.Zout(18) := NDT5.io.Zout
  io.Yout(18) := NDT5.io.Yout

  val NDT6 = Module(new NegativeDetectionTree)
  NDT6.io.Pin := io.Pin(35) ## io.Pin(34)
  NDT6.io.Nin := io.Nin(35) ## io.Nin(34)
  NDT6.io.Zin := io.Zin(35) ## io.Zin(34)
  NDT6.io.Yin := 0.U
  io.Pout(17) := NDT6.io.Pout
  io.Nout(17) := NDT6.io.Nout
  io.Zout(17) := NDT6.io.Zout
  io.Yout(17) := NDT6.io.Yout

  val NDT7 = Module(new NegativeDetectionTree)
  NDT7.io.Pin := io.Pin(33) ## io.Pin(32)
  NDT7.io.Nin := io.Nin(33) ## io.Nin(32)
  NDT7.io.Zin := io.Zin(33) ## io.Zin(32)
  NDT7.io.Yin := 0.U
  io.Pout(16) := NDT7.io.Pout
  io.Nout(16) := NDT7.io.Nout
  io.Zout(16) := NDT7.io.Zout
  io.Yout(16) := NDT7.io.Yout

  val NDT8 = Module(new NegativeDetectionTree)
  NDT8.io.Pin := io.Pin(31) ## io.Pin(30)
  NDT8.io.Nin := io.Nin(31) ## io.Nin(30)
  NDT8.io.Zin := io.Zin(31) ## io.Zin(30)
  NDT8.io.Yin := 0.U
  io.Pout(15) := NDT8.io.Pout
  io.Nout(15) := NDT8.io.Nout
  io.Zout(15) := NDT8.io.Zout
  io.Yout(15) := NDT8.io.Yout

  val NDT9 = Module(new NegativeDetectionTree)
  NDT9.io.Pin := io.Pin(29) ## io.Pin(28)
  NDT9.io.Nin := io.Nin(29) ## io.Nin(28)
  NDT9.io.Zin := io.Zin(29) ## io.Zin(28)
  NDT9.io.Yin := 0.U
  io.Pout(14) := NDT9.io.Pout
  io.Nout(14) := NDT9.io.Nout
  io.Zout(14) := NDT9.io.Zout
  io.Yout(14) := NDT9.io.Yout

  val NDT10 = Module(new NegativeDetectionTree)
  NDT10.io.Pin := io.Pin(27) ## io.Pin(26)
  NDT10.io.Nin := io.Nin(27) ## io.Nin(26)
  NDT10.io.Zin := io.Zin(27) ## io.Zin(26)
  NDT10.io.Yin := 0.U
  io.Pout(13) := NDT10.io.Pout
  io.Nout(13) := NDT10.io.Nout
  io.Zout(13) := NDT10.io.Zout
  io.Yout(13) := NDT10.io.Yout

  val NDT11 = Module(new NegativeDetectionTree)
  NDT11.io.Pin := io.Pin(25) ## io.Pin(24)
  NDT11.io.Nin := io.Nin(25) ## io.Nin(24)
  NDT11.io.Zin := io.Zin(25) ## io.Zin(24)
  NDT11.io.Yin := 0.U
  io.Pout(12) := NDT11.io.Pout
  io.Nout(12) := NDT11.io.Nout
  io.Zout(12) := NDT11.io.Zout
  io.Yout(12) := NDT11.io.Yout

  val NDT12 = Module(new NegativeDetectionTree)
  NDT12.io.Pin := io.Pin(23) ## io.Pin(22)
  NDT12.io.Nin := io.Nin(23) ## io.Nin(22)
  NDT12.io.Zin := io.Zin(23) ## io.Zin(22)
  NDT12.io.Yin := 0.U
  io.Pout(11) := NDT12.io.Pout
  io.Nout(11) := NDT12.io.Nout
  io.Zout(11) := NDT12.io.Zout
  io.Yout(11) := NDT12.io.Yout

  val NDT13 = Module(new NegativeDetectionTree)
  NDT13.io.Pin := io.Pin(21) ## io.Pin(20)
  NDT13.io.Nin := io.Nin(21) ## io.Nin(20)
  NDT13.io.Zin := io.Zin(21) ## io.Zin(20)
  NDT13.io.Yin := 0.U
  io.Pout(10) := NDT13.io.Pout
  io.Nout(10) := NDT13.io.Nout
  io.Zout(10) := NDT13.io.Zout
  io.Yout(10) := NDT13.io.Yout

  val NDT14 = Module(new NegativeDetectionTree)
  NDT14.io.Pin := io.Pin(19) ## io.Pin(18)
  NDT14.io.Nin := io.Nin(19) ## io.Nin(18)
  NDT14.io.Zin := io.Zin(19) ## io.Zin(18)
  NDT14.io.Yin := 0.U
  io.Pout(9) := NDT14.io.Pout
  io.Nout(9) := NDT14.io.Nout
  io.Zout(9) := NDT14.io.Zout
  io.Yout(9) := NDT14.io.Yout

  val NDT15 = Module(new NegativeDetectionTree)
  NDT15.io.Pin := io.Pin(17) ## io.Pin(16)
  NDT15.io.Nin := io.Nin(17) ## io.Nin(16)
  NDT15.io.Zin := io.Zin(17) ## io.Zin(16)
  NDT15.io.Yin := 0.U
  io.Pout(8) := NDT15.io.Pout
  io.Nout(8) := NDT15.io.Nout
  io.Zout(8) := NDT15.io.Zout
  io.Yout(8) := NDT15.io.Yout

  val NDT16 = Module(new NegativeDetectionTree)
  NDT16.io.Pin := io.Pin(15) ## io.Pin(14)
  NDT16.io.Nin := io.Nin(15) ## io.Nin(14)
  NDT16.io.Zin := io.Zin(15) ## io.Zin(14)
  NDT16.io.Yin := 0.U
  io.Pout(7) := NDT16.io.Pout
  io.Nout(7) := NDT16.io.Nout
  io.Zout(7) := NDT16.io.Zout
  io.Yout(7) := NDT16.io.Yout

  val NDT17 = Module(new NegativeDetectionTree)
  NDT17.io.Pin := io.Pin(13) ## io.Pin(12)
  NDT17.io.Nin := io.Nin(13) ## io.Nin(12)
  NDT17.io.Zin := io.Zin(13) ## io.Zin(12)
  NDT17.io.Yin := 0.U
  io.Pout(6) := NDT17.io.Pout
  io.Nout(6) := NDT17.io.Nout
  io.Zout(6) := NDT17.io.Zout
  io.Yout(6) := NDT17.io.Yout

  val NDT18 = Module(new NegativeDetectionTree)
  NDT18.io.Pin := io.Pin(11) ## io.Pin(10)
  NDT18.io.Nin := io.Nin(11) ## io.Nin(10)
  NDT18.io.Zin := io.Zin(11) ## io.Zin(10)
  NDT18.io.Yin := 0.U
  io.Pout(5) := NDT18.io.Pout
  io.Nout(5) := NDT18.io.Nout
  io.Zout(5) := NDT18.io.Zout
  io.Yout(5) := NDT18.io.Yout

  val NDT19 = Module(new NegativeDetectionTree)
  NDT19.io.Pin := io.Pin(9) ## io.Pin(8)
  NDT19.io.Nin := io.Nin(9) ## io.Nin(8)
  NDT19.io.Zin := io.Zin(9) ## io.Zin(8)
  NDT19.io.Yin := 0.U
  io.Pout(4) := NDT19.io.Pout
  io.Nout(4) := NDT19.io.Nout
  io.Zout(4) := NDT19.io.Zout
  io.Yout(4) := NDT19.io.Yout

  val NDT20 = Module(new NegativeDetectionTree)
  NDT20.io.Pin := io.Pin(7) ## io.Pin(6)
  NDT20.io.Nin := io.Nin(7) ## io.Nin(6)
  NDT20.io.Zin := io.Zin(7) ## io.Zin(6)
  NDT20.io.Yin := 0.U
  io.Pout(3) := NDT20.io.Pout
  io.Nout(3) := NDT20.io.Nout
  io.Zout(3) := NDT20.io.Zout
  io.Yout(3) := NDT20.io.Yout

  val NDT21 = Module(new NegativeDetectionTree)
  NDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  NDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  NDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  NDT21.io.Yin := 0.U
  io.Pout(2) := NDT21.io.Pout
  io.Nout(2) := NDT21.io.Nout
  io.Zout(2) := NDT21.io.Zout
  io.Yout(2) := NDT21.io.Yout

  val NDT22 = Module(new NegativeDetectionTree)
  NDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  NDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  NDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  NDT22.io.Yin := 0.U
  io.Pout(1) := NDT22.io.Pout
  io.Nout(1) := NDT22.io.Nout
  io.Zout(1) := NDT22.io.Zout
  io.Yout(1) := NDT22.io.Yout

  val NDT23 = Module(new NegativeDetectionTree)
  NDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  NDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  NDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  NDT23.io.Yin := 0.U
  io.Pout(0) := NDT23.io.Pout
  io.Nout(0) := NDT23.io.Nout
  io.Zout(0) := NDT23.io.Zout
  io.Yout(0) := NDT23.io.Yout
}

class NegativeDetectionTree1 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(24, UInt(1.W)))
    val Nin = Input(Vec(24, UInt(1.W)))
    val Zin = Input(Vec(24, UInt(1.W)))
    val Yin = Input(Vec(24, UInt(1.W)))
    val Pout = Output(Vec(12, UInt(1.W)))
    val Nout = Output(Vec(12, UInt(1.W)))
    val Zout = Output(Vec(12, UInt(1.W)))
    val Yout = Output(Vec(12, UInt(1.W)))
  })

  val NDT12 = Module(new NegativeDetectionTree)
  NDT12.io.Pin := io.Pin(23) ## io.Pin(22)
  NDT12.io.Nin := io.Nin(23) ## io.Nin(22)
  NDT12.io.Zin := io.Zin(23) ## io.Zin(22)
  NDT12.io.Yin := io.Yin(23) ## io.Yin(22)
  io.Pout(11) := NDT12.io.Pout
  io.Nout(11) := NDT12.io.Nout
  io.Zout(11) := NDT12.io.Zout
  io.Yout(11) := NDT12.io.Yout

  val NDT13 = Module(new NegativeDetectionTree)
  NDT13.io.Pin := io.Pin(21) ## io.Pin(20)
  NDT13.io.Nin := io.Nin(21) ## io.Nin(20)
  NDT13.io.Zin := io.Zin(21) ## io.Zin(20)
  NDT13.io.Yin := io.Yin(21) ## io.Yin(20)
  io.Pout(10) := NDT13.io.Pout
  io.Nout(10) := NDT13.io.Nout
  io.Zout(10) := NDT13.io.Zout
  io.Yout(10) := NDT13.io.Yout

  val NDT14 = Module(new NegativeDetectionTree)
  NDT14.io.Pin := io.Pin(19) ## io.Pin(18)
  NDT14.io.Nin := io.Nin(19) ## io.Nin(18)
  NDT14.io.Zin := io.Zin(19) ## io.Zin(18)
  NDT14.io.Yin := io.Yin(19) ## io.Yin(18)
  io.Pout(9) := NDT14.io.Pout
  io.Nout(9) := NDT14.io.Nout
  io.Zout(9) := NDT14.io.Zout
  io.Yout(9) := NDT14.io.Yout

  val NDT15 = Module(new NegativeDetectionTree)
  NDT15.io.Pin := io.Pin(17) ## io.Pin(16)
  NDT15.io.Nin := io.Nin(17) ## io.Nin(16)
  NDT15.io.Zin := io.Zin(17) ## io.Zin(16)
  NDT15.io.Yin := io.Yin(17) ## io.Yin(16)
  io.Pout(8) := NDT15.io.Pout
  io.Nout(8) := NDT15.io.Nout
  io.Zout(8) := NDT15.io.Zout
  io.Yout(8) := NDT15.io.Yout

  val NDT16 = Module(new NegativeDetectionTree)
  NDT16.io.Pin := io.Pin(15) ## io.Pin(14)
  NDT16.io.Nin := io.Nin(15) ## io.Nin(14)
  NDT16.io.Zin := io.Zin(15) ## io.Zin(14)
  NDT16.io.Yin := io.Yin(15) ## io.Yin(14)
  io.Pout(7) := NDT16.io.Pout
  io.Nout(7) := NDT16.io.Nout
  io.Zout(7) := NDT16.io.Zout
  io.Yout(7) := NDT16.io.Yout

  val NDT17 = Module(new NegativeDetectionTree)
  NDT17.io.Pin := io.Pin(13) ## io.Pin(12)
  NDT17.io.Nin := io.Nin(13) ## io.Nin(12)
  NDT17.io.Zin := io.Zin(13) ## io.Zin(12)
  NDT17.io.Yin := io.Yin(13) ## io.Yin(12)
  io.Pout(6) := NDT17.io.Pout
  io.Nout(6) := NDT17.io.Nout
  io.Zout(6) := NDT17.io.Zout
  io.Yout(6) := NDT17.io.Yout

  val NDT18 = Module(new NegativeDetectionTree)
  NDT18.io.Pin := io.Pin(11) ## io.Pin(10)
  NDT18.io.Nin := io.Nin(11) ## io.Nin(10)
  NDT18.io.Zin := io.Zin(11) ## io.Zin(10)
  NDT18.io.Yin := io.Yin(11) ## io.Yin(10)
  io.Pout(5) := NDT18.io.Pout
  io.Nout(5) := NDT18.io.Nout
  io.Zout(5) := NDT18.io.Zout
  io.Yout(5) := NDT18.io.Yout

  val NDT19 = Module(new NegativeDetectionTree)
  NDT19.io.Pin := io.Pin(9) ## io.Pin(8)
  NDT19.io.Nin := io.Nin(9) ## io.Nin(8)
  NDT19.io.Zin := io.Zin(9) ## io.Zin(8)
  NDT19.io.Yin := io.Yin(9) ## io.Yin(8)
  io.Pout(4) := NDT19.io.Pout
  io.Nout(4) := NDT19.io.Nout
  io.Zout(4) := NDT19.io.Zout
  io.Yout(4) := NDT19.io.Yout

  val NDT20 = Module(new NegativeDetectionTree)
  NDT20.io.Pin := io.Pin(7) ## io.Pin(6)
  NDT20.io.Nin := io.Nin(7) ## io.Nin(6)
  NDT20.io.Zin := io.Zin(7) ## io.Zin(6)
  NDT20.io.Yin := io.Yin(7) ## io.Yin(6)
  io.Pout(3) := NDT20.io.Pout
  io.Nout(3) := NDT20.io.Nout
  io.Zout(3) := NDT20.io.Zout
  io.Yout(3) := NDT20.io.Yout

  val NDT21 = Module(new NegativeDetectionTree)
  NDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  NDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  NDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  NDT21.io.Yin := io.Yin(5) ## io.Yin(4)
  io.Pout(2) := NDT21.io.Pout
  io.Nout(2) := NDT21.io.Nout
  io.Zout(2) := NDT21.io.Zout
  io.Yout(2) := NDT21.io.Yout

  val NDT22 = Module(new NegativeDetectionTree)
  NDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  NDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  NDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  NDT22.io.Yin := io.Yin(3) ## io.Yin(2)
  io.Pout(1) := NDT22.io.Pout
  io.Nout(1) := NDT22.io.Nout
  io.Zout(1) := NDT22.io.Zout
  io.Yout(1) := NDT22.io.Yout

  val NDT23 = Module(new NegativeDetectionTree)
  NDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  NDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  NDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  NDT23.io.Yin := io.Yin(1) ## io.Yin(0)
  io.Pout(0) := NDT23.io.Pout
  io.Nout(0) := NDT23.io.Nout
  io.Zout(0) := NDT23.io.Zout
  io.Yout(0) := NDT23.io.Yout
}

class NegativeDetectionTree2 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(12, UInt(1.W)))
    val Nin = Input(Vec(12, UInt(1.W)))
    val Zin = Input(Vec(12, UInt(1.W)))
    val Yin = Input(Vec(12, UInt(1.W)))
    val Pout = Output(Vec(6, UInt(1.W)))
    val Nout = Output(Vec(6, UInt(1.W)))
    val Zout = Output(Vec(6, UInt(1.W)))
    val Yout = Output(Vec(6, UInt(1.W)))
  })
  val NDT18 = Module(new NegativeDetectionTree)
  NDT18.io.Pin := io.Pin(11) ## io.Pin(10)
  NDT18.io.Nin := io.Nin(11) ## io.Nin(10)
  NDT18.io.Zin := io.Zin(11) ## io.Zin(10)
  NDT18.io.Yin := io.Yin(11) ## io.Yin(10)
  io.Pout(5) := NDT18.io.Pout
  io.Nout(5) := NDT18.io.Nout
  io.Zout(5) := NDT18.io.Zout
  io.Yout(5) := NDT18.io.Yout

  val NDT19 = Module(new NegativeDetectionTree)
  NDT19.io.Pin := io.Pin(9) ## io.Pin(8)
  NDT19.io.Nin := io.Nin(9) ## io.Nin(8)
  NDT19.io.Zin := io.Zin(9) ## io.Zin(8)
  NDT19.io.Yin := io.Yin(9) ## io.Yin(8)
  io.Pout(4) := NDT19.io.Pout
  io.Nout(4) := NDT19.io.Nout
  io.Zout(4) := NDT19.io.Zout
  io.Yout(4) := NDT19.io.Yout

  val NDT20 = Module(new NegativeDetectionTree)
  NDT20.io.Pin := io.Pin(7) ## io.Pin(6)
  NDT20.io.Nin := io.Nin(7) ## io.Nin(6)
  NDT20.io.Zin := io.Zin(7) ## io.Zin(6)
  NDT20.io.Yin := io.Yin(7) ## io.Yin(6)
  io.Pout(3) := NDT20.io.Pout
  io.Nout(3) := NDT20.io.Nout
  io.Zout(3) := NDT20.io.Zout
  io.Yout(3) := NDT20.io.Yout

  val NDT21 = Module(new NegativeDetectionTree)
  NDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  NDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  NDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  NDT21.io.Yin := io.Yin(5) ## io.Yin(4)
  io.Pout(2) := NDT21.io.Pout
  io.Nout(2) := NDT21.io.Nout
  io.Zout(2) := NDT21.io.Zout
  io.Yout(2) := NDT21.io.Yout

  val NDT22 = Module(new NegativeDetectionTree)
  NDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  NDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  NDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  NDT22.io.Yin := io.Yin(3) ## io.Yin(2)
  io.Pout(1) := NDT22.io.Pout
  io.Nout(1) := NDT22.io.Nout
  io.Zout(1) := NDT22.io.Zout
  io.Yout(1) := NDT22.io.Yout

  val NDT23 = Module(new NegativeDetectionTree)
  NDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  NDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  NDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  NDT23.io.Yin := io.Yin(1) ## io.Yin(0)
  io.Pout(0) := NDT23.io.Pout
  io.Nout(0) := NDT23.io.Nout
  io.Zout(0) := NDT23.io.Zout
  io.Yout(0) := NDT23.io.Yout
}

class NegativeDetectionTree3 extends Module {
  val io = IO(new Bundle {
    val Pin = Input(Vec(6, UInt(1.W)))
    val Nin = Input(Vec(6, UInt(1.W)))
    val Zin = Input(Vec(6, UInt(1.W)))
    val Yin = Input(Vec(6, UInt(1.W)))
    val Pout = Output(Vec(3, UInt(1.W)))
    val Nout = Output(Vec(3, UInt(1.W)))
    val Zout = Output(Vec(3, UInt(1.W)))
    val Yout = Output(Vec(3, UInt(1.W)))
  })

  val NDT21 = Module(new NegativeDetectionTree)
  NDT21.io.Pin := io.Pin(5) ## io.Pin(4)
  NDT21.io.Nin := io.Nin(5) ## io.Nin(4)
  NDT21.io.Zin := io.Zin(5) ## io.Zin(4)
  NDT21.io.Yin := io.Yin(5) ## io.Yin(4)
  io.Pout(2) := NDT21.io.Pout
  io.Nout(2) := NDT21.io.Nout
  io.Zout(2) := NDT21.io.Zout
  io.Yout(2) := NDT21.io.Yout

  val NDT22 = Module(new NegativeDetectionTree)
  NDT22.io.Pin := io.Pin(3) ## io.Pin(2)
  NDT22.io.Nin := io.Nin(3) ## io.Nin(2)
  NDT22.io.Zin := io.Zin(3) ## io.Zin(2)
  NDT22.io.Yin := io.Yin(3) ## io.Yin(2)
  io.Pout(1) := NDT22.io.Pout
  io.Nout(1) := NDT22.io.Nout
  io.Zout(1) := NDT22.io.Zout
  io.Yout(1) := NDT22.io.Yout

  val NDT23 = Module(new NegativeDetectionTree)
  NDT23.io.Pin := io.Pin(1) ## io.Pin(0)
  NDT23.io.Nin := io.Nin(1) ## io.Nin(0)
  NDT23.io.Zin := io.Zin(1) ## io.Zin(0)
  NDT23.io.Yin := io.Yin(1) ## io.Yin(0)
  io.Pout(0) := NDT23.io.Pout
  io.Nout(0) := NDT23.io.Nout
  io.Zout(0) := NDT23.io.Zout
  io.Yout(0) := NDT23.io.Yout
}

class LODinLZA extends Module {
  val io = IO(new Bundle {
    //val IN = Input(UInt(48.W))
    val OUT = Output(UInt(48.W))
    val IN = Input(Vec(48, UInt(1.W)))
    //val OUT = Output(Vec(48, UInt(1.W)))
    //val value = Output(UInt(8.W))
  })

  val result = Wire(Vec(48, UInt(1.W)))
  //io.OUT := result
  val wire = Wire(Vec(46, UInt(1.W)))

  //wire(46) := !io.IN(48) & !io.IN(47)
  //wire(45) := wire(46) & !io.IN(46)
  wire(45) := !io.IN(47) & !io.IN(46)
  wire(44) := wire(45) & !io.IN(45)
  wire(43) := wire(44) & !io.IN(44)
  wire(42) := wire(43) & !io.IN(43)
  wire(41) := wire(42) & !io.IN(42)
  wire(40) := wire(41) & !io.IN(41)
  wire(39) := wire(40) & !io.IN(40)
  wire(38) := wire(39) & !io.IN(39)
  wire(37) := wire(38) & !io.IN(38)
  wire(36) := wire(37) & !io.IN(37)
  wire(35) := wire(36) & !io.IN(36)
  wire(34) := wire(35) & !io.IN(35)
  wire(33) := wire(34) & !io.IN(34)
  wire(32) := wire(33) & !io.IN(33)
  wire(31) := wire(32) & !io.IN(32)
  wire(30) := wire(31) & !io.IN(31)
  wire(29) := wire(30) & !io.IN(30)
  wire(28) := wire(29) & !io.IN(29)
  wire(27) := wire(28) & !io.IN(28)
  wire(26) := wire(27) & !io.IN(27)
  wire(25) := wire(26) & !io.IN(26)
  wire(24) := wire(25) & !io.IN(25)
  wire(23) := wire(24) & !io.IN(24)
  wire(22) := wire(23) & !io.IN(23)
  wire(21) := wire(22) & !io.IN(22)
  wire(20) := wire(21) & !io.IN(21)
  wire(19) := wire(20) & !io.IN(20)
  wire(18) := wire(19) & !io.IN(19)
  wire(17) := wire(18) & !io.IN(18)
  wire(16) := wire(17) & !io.IN(17)
  wire(15) := wire(16) & !io.IN(16)
  wire(14) := wire(15) & !io.IN(15)
  wire(13) := wire(14) & !io.IN(14)
  wire(12) := wire(13) & !io.IN(13)
  wire(11) := wire(12) & !io.IN(12)
  wire(10) := wire(11) & !io.IN(11)
  wire(9) := wire(10) & !io.IN(10)
  wire(8) := wire(9) & !io.IN(9)
  wire(7) := wire(8) & !io.IN(8)
  wire(6) := wire(7) & !io.IN(7)
  wire(5) := wire(6) & !io.IN(6)
  wire(4) := wire(5) & !io.IN(5)
  wire(3) := wire(4) & !io.IN(4)
  wire(2) := wire(3) & !io.IN(3)
  wire(1) := wire(2) & !io.IN(2)
  wire(0) := wire(1) & !io.IN(1)

  //result(48) := io.IN(48)
  //result(47) := !io.IN(48) & io.IN(47)
  //result(46) := wire(46) & io.IN(46)
  result(47) := io.IN(47)
  result(46) := !io.IN(47) & io.IN(46)
  result(45) := wire(45) & io.IN(45)
  result(44) := wire(44) & io.IN(44)
  result(43) := wire(43) & io.IN(43)
  result(42) := wire(42) & io.IN(42)
  result(41) := wire(41) & io.IN(41)
  result(40) := wire(40) & io.IN(40)
  result(39) := wire(39) & io.IN(39)
  result(38) := wire(38) & io.IN(38)
  result(37) := wire(37) & io.IN(37)
  result(36) := wire(36) & io.IN(36)
  result(35) := wire(35) & io.IN(35)
  result(34) := wire(34) & io.IN(34)
  result(33) := wire(33) & io.IN(33)
  result(32) := wire(32) & io.IN(32)
  result(31) := wire(31) & io.IN(31)
  result(30) := wire(30) & io.IN(30)
  result(29) := wire(29) & io.IN(29)
  result(28) := wire(28) & io.IN(28)
  result(27) := wire(27) & io.IN(27)
  result(26) := wire(26) & io.IN(26)
  result(25) := wire(25) & io.IN(25)
  result(24) := wire(24) & io.IN(24)
  result(23) := wire(23) & io.IN(23)
  result(22) := wire(22) & io.IN(22)
  result(21) := wire(21) & io.IN(21)
  result(20) := wire(20) & io.IN(20)
  result(19) := wire(19) & io.IN(19)
  result(18) := wire(18) & io.IN(18)
  result(17) := wire(17) & io.IN(17)
  result(16) := wire(16) & io.IN(16)
  result(15) := wire(15) & io.IN(15)
  result(14) := wire(14) & io.IN(14)
  result(13) := wire(13) & io.IN(13)
  result(12) := wire(12) & io.IN(12)
  result(11) := wire(11) & io.IN(11)
  result(10) := wire(10) & io.IN(10)
  result(9) := wire(9) & io.IN(9)
  result(8) := wire(8) & io.IN(8)
  result(7) := wire(7) & io.IN(7)
  result(6) := wire(6) & io.IN(6)
  result(5) := wire(5) & io.IN(5)
  result(4) := wire(4) & io.IN(4)
  result(3) := wire(3) & io.IN(3)
  result(2) := wire(2) & io.IN(2)
  result(1) := wire(1) & io.IN(1)
  result(0) := wire(0) & io.IN(0)

  io.OUT := result(47) ## result(46) ## result(45) ## result(44) ## result(43) ## result(42) ## result(41) ## result(40) ##
    result(39) ## result(38) ## result(37) ## result(36) ## result(35) ## result(34) ## result(33) ## result(32) ## result(31) ## result(30) ##
    result(29) ## result(28) ## result(27) ## result(26) ## result(25) ## result(24) ## result(23) ## result(22) ## result(21) ## result(20) ##
    result(19) ## result(18) ## result(17) ## result(16) ## result(15) ## result(14) ## result(13) ## result(12) ## result(11) ## result(10) ##
    result(9) ## result(8) ## result(7) ## result(6) ## result(5) ## result(4) ## result(3) ## result(2) ## result(1) ## result(0)

}
/*
class CoarseShifter extends Module {
  val io = IO(new Bundle {
    val IN = Input(UInt(48.W))
    val OUT = Output(UInt(6.W))
  })

  val NORstage = Wire(Vec(24, UInt(1.W)))
  val ANDstage0 = Wire(Vec(12, UInt(1.W)))
  val ANDstage1 = Wire(Vec(6, UInt(1.W)))
  val ANDstage2 = Wire(Vec(3, UInt(1.W)))
  val ANDstage3 = Wire(UInt(1.W))
  val ANDstage4 = Wire(UInt(1.W))
  val ShiftFlag = Wire(Vec(6, UInt(1.W)))

  NORstage(0) := !(io.IN(1) | io.IN(0))
  NORstage(1) := !(io.IN(3) | io.IN(2))
  NORstage(2) := !(io.IN(5) | io.IN(4))
  NORstage(3) := !(io.IN(7) | io.IN(6))
  NORstage(4) := !(io.IN(9) | io.IN(8))
  NORstage(5) := !(io.IN(11) | io.IN(10))
  NORstage(6) := !(io.IN(13) | io.IN(12))
  NORstage(7) := !(io.IN(15) | io.IN(14))
  NORstage(8) := !(io.IN(17) | io.IN(16))
  NORstage(9) := !(io.IN(19) | io.IN(18))
  NORstage(10) := !(io.IN(21) | io.IN(20))
  NORstage(11) := !(io.IN(23) | io.IN(22))
  NORstage(12) := !(io.IN(25) | io.IN(24))
  NORstage(13) := !(io.IN(27) | io.IN(26))
  NORstage(14) := !(io.IN(29) | io.IN(28))
  NORstage(15) := !(io.IN(31) | io.IN(30))
  NORstage(16) := !(io.IN(33) | io.IN(32))
  NORstage(17) := !(io.IN(35) | io.IN(34))
  NORstage(18) := !(io.IN(37) | io.IN(36))
  NORstage(19) := !(io.IN(39) | io.IN(38))
  NORstage(20) := !(io.IN(41) | io.IN(40))
  NORstage(21) := !(io.IN(43) | io.IN(42))
  NORstage(22) := !(io.IN(45) | io.IN(44))
  NORstage(23) := !(io.IN(47) | io.IN(46))

  ANDstage0(0) := NORstage(1) & NORstage(0)
  ANDstage0(1) := NORstage(3) & NORstage(2)
  ANDstage0(2) := NORstage(5) & NORstage(4)
  ANDstage0(3) := NORstage(7) & NORstage(6)
  ANDstage0(4) := NORstage(9) & NORstage(8)
  ANDstage0(5) := NORstage(11) & NORstage(10)
  ANDstage0(6) := NORstage(13) & NORstage(12)
  ANDstage0(7) := NORstage(15) & NORstage(14)
  ANDstage0(8) := NORstage(17) & NORstage(16)
  ANDstage0(9) := NORstage(19) & NORstage(18)
  ANDstage0(10) := NORstage(21) & NORstage(20)
  ANDstage0(11) := NORstage(23) & NORstage(22)

  ANDstage1(0) := ANDstage0(1) & ANDstage0(0)
  ANDstage1(1) := ANDstage0(3) & ANDstage0(2)
  ANDstage1(2) := ANDstage0(5) & ANDstage0(4)
  ANDstage1(3) := ANDstage0(7) & ANDstage0(6)
  ANDstage1(4) := ANDstage0(9) & ANDstage0(8)
  ANDstage1(5) := ANDstage0(11) & ANDstage0(10)

  ANDstage2(0) := ANDstage1(1) & ANDstage1(0)
  ANDstage2(1) := ANDstage1(3) & ANDstage1(2)
  ANDstage2(2) := ANDstage1(5) & ANDstage1(4)

  ANDstage3 := ANDstage2(2) & ANDstage2(1)
  ANDstage4 := ANDstage2(0) & ANDstage3

  ShiftFlag(5) := ANDstage4 //48bitshift
  ShiftFlag(4) := !ANDstage4 & ANDstage3 //32bitshift
  ShiftFlag(3) := !ANDstage4 & !ANDstage3 &
}

 */
 */